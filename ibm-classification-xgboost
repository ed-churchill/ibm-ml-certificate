{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "577da0d5",
   "metadata": {
    "papermill": {
     "duration": 0.006585,
     "end_time": "2024-05-08T15:38:20.872504",
     "exception": false,
     "start_time": "2024-05-08T15:38:20.865919",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Imports"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "e66e559c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-08T15:38:20.886433Z",
     "iopub.status.busy": "2024-05-08T15:38:20.886071Z",
     "iopub.status.idle": "2024-05-08T15:38:21.697359Z",
     "shell.execute_reply": "2024-05-08T15:38:21.696272Z"
    },
    "papermill": {
     "duration": 0.821149,
     "end_time": "2024-05-08T15:38:21.699939",
     "exception": false,
     "start_time": "2024-05-08T15:38:20.878790",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "763c36cd",
   "metadata": {
    "papermill": {
     "duration": 0.00658,
     "end_time": "2024-05-08T15:38:21.713524",
     "exception": false,
     "start_time": "2024-05-08T15:38:21.706944",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Read Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "60635aee",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-08T15:38:21.727636Z",
     "iopub.status.busy": "2024-05-08T15:38:21.727143Z",
     "iopub.status.idle": "2024-05-08T15:39:12.037048Z",
     "shell.execute_reply": "2024-05-08T15:39:12.035793Z"
    },
    "papermill": {
     "duration": 50.319831,
     "end_time": "2024-05-08T15:39:12.039704",
     "exception": false,
     "start_time": "2024-05-08T15:38:21.719873",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X_train = pd.read_csv(\"/kaggle/input/ibm-classification-feature-selection/X_train_normalized.csv\", index_col=[0])\n",
    "X_test = pd.read_csv(\"/kaggle/input/ibm-classification-feature-selection/X_test_normalized.csv\", index_col=[0])\n",
    "y_train = pd.read_csv(\"/kaggle/input/ibm-classification-feature-selection/y_train.csv\", index_col=[0])\n",
    "y_test = pd.read_csv(\"/kaggle/input/ibm-classification-feature-selection/y_test.csv\", index_col=[0]).reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c66bbe9e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-08T15:39:12.053448Z",
     "iopub.status.busy": "2024-05-08T15:39:12.053076Z",
     "iopub.status.idle": "2024-05-08T15:39:12.083659Z",
     "shell.execute_reply": "2024-05-08T15:39:12.082566Z"
    },
    "papermill": {
     "duration": 0.040177,
     "end_time": "2024-05-08T15:39:12.086087",
     "exception": false,
     "start_time": "2024-05-08T15:39:12.045910",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Symbol</th>\n",
       "      <th>Adj Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>S&amp;P500</th>\n",
       "      <th>Unemployment Rate (%)</th>\n",
       "      <th>Monthly Average Mortgage Rate (%)</th>\n",
       "      <th>Corporate Bond Yield</th>\n",
       "      <th>Quarterly GDP Growth Rate (%)</th>\n",
       "      <th>Home Price Index</th>\n",
       "      <th>Sector_Basic Materials</th>\n",
       "      <th>...</th>\n",
       "      <th>Adj Close 7-Day std</th>\n",
       "      <th>Volume 7-Day std</th>\n",
       "      <th>Distance to Adj Close 7-Day Upper Bollinger Band</th>\n",
       "      <th>Distance to Adj Close 7-Day Lower Bollinger Band</th>\n",
       "      <th>True Range</th>\n",
       "      <th>MACD</th>\n",
       "      <th>MACD Histogram</th>\n",
       "      <th>MACD-V</th>\n",
       "      <th>MACD-V Histogram</th>\n",
       "      <th>Stochastic Oscillator %K</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.286535</td>\n",
       "      <td>-0.383355</td>\n",
       "      <td>0.497834</td>\n",
       "      <td>-1.239088</td>\n",
       "      <td>0.560375</td>\n",
       "      <td>0.584924</td>\n",
       "      <td>1.117521</td>\n",
       "      <td>0.307606</td>\n",
       "      <td>-1.256557</td>\n",
       "      <td>-0.211114</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.298140</td>\n",
       "      <td>0.117466</td>\n",
       "      <td>0.236149</td>\n",
       "      <td>-0.269833</td>\n",
       "      <td>-0.179460</td>\n",
       "      <td>0.072447</td>\n",
       "      <td>0.039464</td>\n",
       "      <td>0.014854</td>\n",
       "      <td>0.039632</td>\n",
       "      <td>0.703087</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.761917</td>\n",
       "      <td>-0.302460</td>\n",
       "      <td>-0.255973</td>\n",
       "      <td>-1.239088</td>\n",
       "      <td>0.560375</td>\n",
       "      <td>0.584924</td>\n",
       "      <td>1.117521</td>\n",
       "      <td>0.307606</td>\n",
       "      <td>-1.256557</td>\n",
       "      <td>-0.211114</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.233517</td>\n",
       "      <td>-0.211044</td>\n",
       "      <td>0.243391</td>\n",
       "      <td>-0.149424</td>\n",
       "      <td>0.885117</td>\n",
       "      <td>0.151975</td>\n",
       "      <td>0.161407</td>\n",
       "      <td>-0.052661</td>\n",
       "      <td>0.081329</td>\n",
       "      <td>1.417437</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.407246</td>\n",
       "      <td>-0.278162</td>\n",
       "      <td>-0.224129</td>\n",
       "      <td>-1.239088</td>\n",
       "      <td>0.560375</td>\n",
       "      <td>0.584924</td>\n",
       "      <td>1.117521</td>\n",
       "      <td>0.307606</td>\n",
       "      <td>-1.256557</td>\n",
       "      <td>-0.211114</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.351999</td>\n",
       "      <td>-0.236571</td>\n",
       "      <td>0.252801</td>\n",
       "      <td>-0.346142</td>\n",
       "      <td>-0.162364</td>\n",
       "      <td>0.013708</td>\n",
       "      <td>-0.023140</td>\n",
       "      <td>-0.053078</td>\n",
       "      <td>-0.030982</td>\n",
       "      <td>0.567310</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-1.181385</td>\n",
       "      <td>-0.466305</td>\n",
       "      <td>-0.074461</td>\n",
       "      <td>-1.239088</td>\n",
       "      <td>0.560375</td>\n",
       "      <td>0.584924</td>\n",
       "      <td>1.117521</td>\n",
       "      <td>0.307606</td>\n",
       "      <td>-1.256557</td>\n",
       "      <td>4.736778</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.314629</td>\n",
       "      <td>0.840247</td>\n",
       "      <td>0.234477</td>\n",
       "      <td>-0.300371</td>\n",
       "      <td>-0.561522</td>\n",
       "      <td>0.112365</td>\n",
       "      <td>0.184630</td>\n",
       "      <td>0.335596</td>\n",
       "      <td>0.463963</td>\n",
       "      <td>1.074077</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-1.063162</td>\n",
       "      <td>-0.245769</td>\n",
       "      <td>0.243767</td>\n",
       "      <td>-1.239088</td>\n",
       "      <td>0.560375</td>\n",
       "      <td>0.584924</td>\n",
       "      <td>1.117521</td>\n",
       "      <td>0.307606</td>\n",
       "      <td>-1.256557</td>\n",
       "      <td>-0.211114</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.167583</td>\n",
       "      <td>0.314758</td>\n",
       "      <td>0.004186</td>\n",
       "      <td>-0.287913</td>\n",
       "      <td>0.373985</td>\n",
       "      <td>-0.345611</td>\n",
       "      <td>-0.232172</td>\n",
       "      <td>-0.343499</td>\n",
       "      <td>-0.162136</td>\n",
       "      <td>-1.813621</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 120 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Symbol  Adj Close    Volume    S&P500  Unemployment Rate (%)  \\\n",
       "0  1.286535  -0.383355  0.497834 -1.239088               0.560375   \n",
       "1  0.761917  -0.302460 -0.255973 -1.239088               0.560375   \n",
       "2  0.407246  -0.278162 -0.224129 -1.239088               0.560375   \n",
       "3 -1.181385  -0.466305 -0.074461 -1.239088               0.560375   \n",
       "4 -1.063162  -0.245769  0.243767 -1.239088               0.560375   \n",
       "\n",
       "   Monthly Average Mortgage Rate (%)  Corporate Bond Yield  \\\n",
       "0                           0.584924              1.117521   \n",
       "1                           0.584924              1.117521   \n",
       "2                           0.584924              1.117521   \n",
       "3                           0.584924              1.117521   \n",
       "4                           0.584924              1.117521   \n",
       "\n",
       "   Quarterly GDP Growth Rate (%)  Home Price Index  Sector_Basic Materials  \\\n",
       "0                       0.307606         -1.256557               -0.211114   \n",
       "1                       0.307606         -1.256557               -0.211114   \n",
       "2                       0.307606         -1.256557               -0.211114   \n",
       "3                       0.307606         -1.256557                4.736778   \n",
       "4                       0.307606         -1.256557               -0.211114   \n",
       "\n",
       "   ...  Adj Close 7-Day std  Volume 7-Day std  \\\n",
       "0  ...            -0.298140          0.117466   \n",
       "1  ...            -0.233517         -0.211044   \n",
       "2  ...            -0.351999         -0.236571   \n",
       "3  ...            -0.314629          0.840247   \n",
       "4  ...            -0.167583          0.314758   \n",
       "\n",
       "   Distance to Adj Close 7-Day Upper Bollinger Band  \\\n",
       "0                                          0.236149   \n",
       "1                                          0.243391   \n",
       "2                                          0.252801   \n",
       "3                                          0.234477   \n",
       "4                                          0.004186   \n",
       "\n",
       "   Distance to Adj Close 7-Day Lower Bollinger Band  True Range      MACD  \\\n",
       "0                                         -0.269833   -0.179460  0.072447   \n",
       "1                                         -0.149424    0.885117  0.151975   \n",
       "2                                         -0.346142   -0.162364  0.013708   \n",
       "3                                         -0.300371   -0.561522  0.112365   \n",
       "4                                         -0.287913    0.373985 -0.345611   \n",
       "\n",
       "   MACD Histogram    MACD-V  MACD-V Histogram  Stochastic Oscillator %K  \n",
       "0        0.039464  0.014854          0.039632                  0.703087  \n",
       "1        0.161407 -0.052661          0.081329                  1.417437  \n",
       "2       -0.023140 -0.053078         -0.030982                  0.567310  \n",
       "3        0.184630  0.335596          0.463963                  1.074077  \n",
       "4       -0.232172 -0.343499         -0.162136                 -1.813621  \n",
       "\n",
       "[5 rows x 120 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "61cf94c3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-08T15:39:12.101353Z",
     "iopub.status.busy": "2024-05-08T15:39:12.100351Z",
     "iopub.status.idle": "2024-05-08T15:39:12.124129Z",
     "shell.execute_reply": "2024-05-08T15:39:12.123109Z"
    },
    "papermill": {
     "duration": 0.033539,
     "end_time": "2024-05-08T15:39:12.126312",
     "exception": false,
     "start_time": "2024-05-08T15:39:12.092773",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Symbol</th>\n",
       "      <th>Adj Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>S&amp;P500</th>\n",
       "      <th>Unemployment Rate (%)</th>\n",
       "      <th>Monthly Average Mortgage Rate (%)</th>\n",
       "      <th>Corporate Bond Yield</th>\n",
       "      <th>Quarterly GDP Growth Rate (%)</th>\n",
       "      <th>Home Price Index</th>\n",
       "      <th>Sector_Basic Materials</th>\n",
       "      <th>...</th>\n",
       "      <th>Adj Close 7-Day std</th>\n",
       "      <th>Volume 7-Day std</th>\n",
       "      <th>Distance to Adj Close 7-Day Upper Bollinger Band</th>\n",
       "      <th>Distance to Adj Close 7-Day Lower Bollinger Band</th>\n",
       "      <th>True Range</th>\n",
       "      <th>MACD</th>\n",
       "      <th>MACD Histogram</th>\n",
       "      <th>MACD-V</th>\n",
       "      <th>MACD-V Histogram</th>\n",
       "      <th>Stochastic Oscillator %K</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-0.206039</td>\n",
       "      <td>1.354258</td>\n",
       "      <td>-0.239400</td>\n",
       "      <td>2.512348</td>\n",
       "      <td>0.660965</td>\n",
       "      <td>-2.39954</td>\n",
       "      <td>-1.980584</td>\n",
       "      <td>0.463318</td>\n",
       "      <td>-1.894531</td>\n",
       "      <td>-0.211114</td>\n",
       "      <td>...</td>\n",
       "      <td>0.407697</td>\n",
       "      <td>-0.253133</td>\n",
       "      <td>-1.046621</td>\n",
       "      <td>-0.397982</td>\n",
       "      <td>1.822855</td>\n",
       "      <td>-1.005420</td>\n",
       "      <td>-0.094047</td>\n",
       "      <td>-0.448102</td>\n",
       "      <td>-0.054776</td>\n",
       "      <td>-1.373692</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.486038</td>\n",
       "      <td>0.647982</td>\n",
       "      <td>-0.252503</td>\n",
       "      <td>2.512348</td>\n",
       "      <td>0.660965</td>\n",
       "      <td>-2.39954</td>\n",
       "      <td>-1.980584</td>\n",
       "      <td>0.463318</td>\n",
       "      <td>-1.894531</td>\n",
       "      <td>-0.211114</td>\n",
       "      <td>...</td>\n",
       "      <td>0.175892</td>\n",
       "      <td>-0.254727</td>\n",
       "      <td>-0.482394</td>\n",
       "      <td>-0.204397</td>\n",
       "      <td>-0.192842</td>\n",
       "      <td>0.110104</td>\n",
       "      <td>-0.359390</td>\n",
       "      <td>0.080089</td>\n",
       "      <td>-0.458811</td>\n",
       "      <td>-0.991576</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-0.693712</td>\n",
       "      <td>-0.384946</td>\n",
       "      <td>-0.124013</td>\n",
       "      <td>2.512348</td>\n",
       "      <td>0.660965</td>\n",
       "      <td>-2.39954</td>\n",
       "      <td>-1.980584</td>\n",
       "      <td>0.463318</td>\n",
       "      <td>-1.894531</td>\n",
       "      <td>-0.211114</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.296192</td>\n",
       "      <td>-0.203749</td>\n",
       "      <td>0.161051</td>\n",
       "      <td>-0.346024</td>\n",
       "      <td>-0.244519</td>\n",
       "      <td>0.038039</td>\n",
       "      <td>-0.407160</td>\n",
       "      <td>-0.013546</td>\n",
       "      <td>-0.541751</td>\n",
       "      <td>-1.781038</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.983587</td>\n",
       "      <td>-0.011212</td>\n",
       "      <td>-0.130146</td>\n",
       "      <td>2.512348</td>\n",
       "      <td>0.660965</td>\n",
       "      <td>-2.39954</td>\n",
       "      <td>-1.980584</td>\n",
       "      <td>0.463318</td>\n",
       "      <td>-1.894531</td>\n",
       "      <td>-0.211114</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.191586</td>\n",
       "      <td>-0.178147</td>\n",
       "      <td>0.173868</td>\n",
       "      <td>-0.149957</td>\n",
       "      <td>-0.289094</td>\n",
       "      <td>0.592527</td>\n",
       "      <td>-0.008127</td>\n",
       "      <td>0.766414</td>\n",
       "      <td>0.016781</td>\n",
       "      <td>0.774399</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-1.203552</td>\n",
       "      <td>0.695478</td>\n",
       "      <td>-0.287889</td>\n",
       "      <td>2.512348</td>\n",
       "      <td>0.660965</td>\n",
       "      <td>-2.39954</td>\n",
       "      <td>-1.980584</td>\n",
       "      <td>0.463318</td>\n",
       "      <td>-1.894531</td>\n",
       "      <td>-0.211114</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.062149</td>\n",
       "      <td>-0.281473</td>\n",
       "      <td>-0.023190</td>\n",
       "      <td>-0.132996</td>\n",
       "      <td>0.022698</td>\n",
       "      <td>0.972511</td>\n",
       "      <td>-0.299918</td>\n",
       "      <td>0.757151</td>\n",
       "      <td>-0.223332</td>\n",
       "      <td>0.644914</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 120 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Symbol  Adj Close    Volume    S&P500  Unemployment Rate (%)  \\\n",
       "0 -0.206039   1.354258 -0.239400  2.512348               0.660965   \n",
       "1  1.486038   0.647982 -0.252503  2.512348               0.660965   \n",
       "2 -0.693712  -0.384946 -0.124013  2.512348               0.660965   \n",
       "3  0.983587  -0.011212 -0.130146  2.512348               0.660965   \n",
       "4 -1.203552   0.695478 -0.287889  2.512348               0.660965   \n",
       "\n",
       "   Monthly Average Mortgage Rate (%)  Corporate Bond Yield  \\\n",
       "0                           -2.39954             -1.980584   \n",
       "1                           -2.39954             -1.980584   \n",
       "2                           -2.39954             -1.980584   \n",
       "3                           -2.39954             -1.980584   \n",
       "4                           -2.39954             -1.980584   \n",
       "\n",
       "   Quarterly GDP Growth Rate (%)  Home Price Index  Sector_Basic Materials  \\\n",
       "0                       0.463318         -1.894531               -0.211114   \n",
       "1                       0.463318         -1.894531               -0.211114   \n",
       "2                       0.463318         -1.894531               -0.211114   \n",
       "3                       0.463318         -1.894531               -0.211114   \n",
       "4                       0.463318         -1.894531               -0.211114   \n",
       "\n",
       "   ...  Adj Close 7-Day std  Volume 7-Day std  \\\n",
       "0  ...             0.407697         -0.253133   \n",
       "1  ...             0.175892         -0.254727   \n",
       "2  ...            -0.296192         -0.203749   \n",
       "3  ...            -0.191586         -0.178147   \n",
       "4  ...            -0.062149         -0.281473   \n",
       "\n",
       "   Distance to Adj Close 7-Day Upper Bollinger Band  \\\n",
       "0                                         -1.046621   \n",
       "1                                         -0.482394   \n",
       "2                                          0.161051   \n",
       "3                                          0.173868   \n",
       "4                                         -0.023190   \n",
       "\n",
       "   Distance to Adj Close 7-Day Lower Bollinger Band  True Range      MACD  \\\n",
       "0                                         -0.397982    1.822855 -1.005420   \n",
       "1                                         -0.204397   -0.192842  0.110104   \n",
       "2                                         -0.346024   -0.244519  0.038039   \n",
       "3                                         -0.149957   -0.289094  0.592527   \n",
       "4                                         -0.132996    0.022698  0.972511   \n",
       "\n",
       "   MACD Histogram    MACD-V  MACD-V Histogram  Stochastic Oscillator %K  \n",
       "0       -0.094047 -0.448102         -0.054776                 -1.373692  \n",
       "1       -0.359390  0.080089         -0.458811                 -0.991576  \n",
       "2       -0.407160 -0.013546         -0.541751                 -1.781038  \n",
       "3       -0.008127  0.766414          0.016781                  0.774399  \n",
       "4       -0.299918  0.757151         -0.223332                  0.644914  \n",
       "\n",
       "[5 rows x 120 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_test.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "46d91d15",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-08T15:39:12.141790Z",
     "iopub.status.busy": "2024-05-08T15:39:12.141376Z",
     "iopub.status.idle": "2024-05-08T15:39:12.152752Z",
     "shell.execute_reply": "2024-05-08T15:39:12.151685Z"
    },
    "papermill": {
     "duration": 0.021887,
     "end_time": "2024-05-08T15:39:12.155053",
     "exception": false,
     "start_time": "2024-05-08T15:39:12.133166",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>2-week Forward Excess Return Sign</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   2-week Forward Excess Return Sign\n",
       "0                               -1.0\n",
       "1                                1.0\n",
       "2                               -1.0\n",
       "3                                1.0\n",
       "4                               -1.0"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_train.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "9f58d408",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-08T15:39:12.172411Z",
     "iopub.status.busy": "2024-05-08T15:39:12.172048Z",
     "iopub.status.idle": "2024-05-08T15:39:12.181934Z",
     "shell.execute_reply": "2024-05-08T15:39:12.180742Z"
    },
    "papermill": {
     "duration": 0.021633,
     "end_time": "2024-05-08T15:39:12.183967",
     "exception": false,
     "start_time": "2024-05-08T15:39:12.162334",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>2-week Forward Excess Return Sign</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   2-week Forward Excess Return Sign\n",
       "0                               -1.0\n",
       "1                               -1.0\n",
       "2                                1.0\n",
       "3                                1.0\n",
       "4                                1.0"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_test.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3cb00108",
   "metadata": {
    "papermill": {
     "duration": 0.007291,
     "end_time": "2024-05-08T15:39:12.198529",
     "exception": false,
     "start_time": "2024-05-08T15:39:12.191238",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Fit XGBoost Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "016ea025",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-08T15:39:12.214586Z",
     "iopub.status.busy": "2024-05-08T15:39:12.214208Z",
     "iopub.status.idle": "2024-05-08T15:39:13.572852Z",
     "shell.execute_reply": "2024-05-08T15:39:13.571763Z"
    },
    "papermill": {
     "duration": 1.369537,
     "end_time": "2024-05-08T15:39:13.575397",
     "exception": false,
     "start_time": "2024-05-08T15:39:12.205860",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from xgboost import XGBClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "f74ce0af",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-08T15:39:13.592617Z",
     "iopub.status.busy": "2024-05-08T15:39:13.592212Z",
     "iopub.status.idle": "2024-05-08T15:39:13.607484Z",
     "shell.execute_reply": "2024-05-08T15:39:13.606324Z"
    },
    "papermill": {
     "duration": 0.026878,
     "end_time": "2024-05-08T15:39:13.610162",
     "exception": false,
     "start_time": "2024-05-08T15:39:13.583284",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Convert labels (-1 and 1) to 0 and 1 which are required by xgboost\n",
    "y_train.replace(to_replace=-1, value=0, inplace=True)\n",
    "y_test.replace(to_replace=-1, value=0, inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f290eb4c",
   "metadata": {
    "papermill": {
     "duration": 0.007033,
     "end_time": "2024-05-08T15:39:13.625001",
     "exception": false,
     "start_time": "2024-05-08T15:39:13.617968",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Parameter Optimization"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dcff68de",
   "metadata": {
    "papermill": {
     "duration": 0.006971,
     "end_time": "2024-05-08T15:39:13.639408",
     "exception": false,
     "start_time": "2024-05-08T15:39:13.632437",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "https://xgboost.readthedocs.io/en/stable/parameter.html\n",
    "* We draw from uniform distribution when we want to give equal weight to all values in the range\n",
    "* We draw from loguniform distribution when we want to give more weight to smaller values in the range. This is used for parameters where absolute change in its value has more of an effect at the lower end than the same absolute change at the upper end. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "054e3a24",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-08T15:39:13.655747Z",
     "iopub.status.busy": "2024-05-08T15:39:13.655352Z",
     "iopub.status.idle": "2024-05-08T15:39:13.664698Z",
     "shell.execute_reply": "2024-05-08T15:39:13.663623Z"
    },
    "papermill": {
     "duration": 0.020255,
     "end_time": "2024-05-08T15:39:13.667040",
     "exception": false,
     "start_time": "2024-05-08T15:39:13.646785",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.metrics import log_loss\n",
    "\n",
    "def objective(trial, X_train, X_val, y_train, y_val):\n",
    "    \"\"\"Objective function returning logloss to be used in hyperparameter tuning\"\"\"\n",
    "    \n",
    "    # Parameters to optimize\n",
    "    params = {\n",
    "        'booster': 'gbtree', # Default booster\n",
    "        'device': 'cuda', # Use GPU\n",
    "        'verbosity': 2, # Logging\n",
    "        'objective': 'binary:logistic', # Learn using logistic regression probabilities\n",
    "        'eval_metric': 'logloss', # Use logloss to measure performance of model. Rewards confident correct predictions and penalisaes confident and wreong predictions\n",
    "        'n_estimators': 25000, # Number of trees in the model. Adding trees should improve model up to a point. Can use early stopping rounfs\n",
    "        'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
    "        'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
    "        'max_depth': trial.suggest_int('max_depth', 1, 10), # Maximum depth of any tree. Increasing leads to complex model and overfitting. If tree is deep xgboost consumes lots of memory\n",
    "        'min_child_weight': trial.suggest_int('min_child_weight', 0, 10), # Minimum sum of weights needed in a child. If a tree partition results in a leaf with sum of weights less than this, there will be no further partitioning\n",
    "        'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
    "        'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
    "    }\n",
    "    \n",
    "    # Fit model with these parameters\n",
    "    model = XGBClassifier(**params) \n",
    "    model.fit(\n",
    "        X_train,\n",
    "        y_train,\n",
    "        eval_set=[(X_val, y_val)],\n",
    "        verbose=2, # Logging\n",
    "        early_stopping_rounds=250 # Stop adding more estimators if no improvement for 250 rounds\n",
    "    )\n",
    "    \n",
    "    # Predict probabilities\n",
    "    preds = model.predict_proba(X_val)\n",
    "    \n",
    "    # Get log loss\n",
    "    loss = log_loss(y_val, preds)\n",
    "    \n",
    "    return loss"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "0b756aee",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-08T15:39:13.684320Z",
     "iopub.status.busy": "2024-05-08T15:39:13.683941Z",
     "iopub.status.idle": "2024-05-08T17:58:48.773258Z",
     "shell.execute_reply": "2024-05-08T17:58:48.771796Z"
    },
    "papermill": {
     "duration": 8375.100821,
     "end_time": "2024-05-08T17:58:48.775964",
     "exception": false,
     "start_time": "2024-05-08T15:39:13.675143",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 15:39:14,001] A new study created in memory with name: no-name-5a7923cf-0508-41a9-805d-ab3e05dc3de9\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [15:39:18] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69565\n",
      "[2]\tvalidation_0-logloss:0.69512\n",
      "[4]\tvalidation_0-logloss:0.69509\n",
      "[6]\tvalidation_0-logloss:0.69494\n",
      "[8]\tvalidation_0-logloss:0.69439\n",
      "[10]\tvalidation_0-logloss:0.69455\n",
      "[12]\tvalidation_0-logloss:0.69418\n",
      "[14]\tvalidation_0-logloss:0.69451\n",
      "[16]\tvalidation_0-logloss:0.69449\n",
      "[18]\tvalidation_0-logloss:0.69438\n",
      "[20]\tvalidation_0-logloss:0.69264\n",
      "[22]\tvalidation_0-logloss:0.69298\n",
      "[24]\tvalidation_0-logloss:0.69364\n",
      "[26]\tvalidation_0-logloss:0.69484\n",
      "[28]\tvalidation_0-logloss:0.69433\n",
      "[30]\tvalidation_0-logloss:0.69498\n",
      "[32]\tvalidation_0-logloss:0.69472\n",
      "[34]\tvalidation_0-logloss:0.69483\n",
      "[36]\tvalidation_0-logloss:0.69477\n",
      "[38]\tvalidation_0-logloss:0.69618\n",
      "[40]\tvalidation_0-logloss:0.69620\n",
      "[42]\tvalidation_0-logloss:0.69605\n",
      "[44]\tvalidation_0-logloss:0.69649\n",
      "[46]\tvalidation_0-logloss:0.69714\n",
      "[48]\tvalidation_0-logloss:0.69761\n",
      "[50]\tvalidation_0-logloss:0.69789\n",
      "[52]\tvalidation_0-logloss:0.69789\n",
      "[54]\tvalidation_0-logloss:0.69780\n",
      "[56]\tvalidation_0-logloss:0.69815\n",
      "[58]\tvalidation_0-logloss:0.69834\n",
      "[60]\tvalidation_0-logloss:0.69829\n",
      "[62]\tvalidation_0-logloss:0.69909\n",
      "[64]\tvalidation_0-logloss:0.69932\n",
      "[66]\tvalidation_0-logloss:0.69997\n",
      "[68]\tvalidation_0-logloss:0.70076\n",
      "[70]\tvalidation_0-logloss:0.70188\n",
      "[72]\tvalidation_0-logloss:0.70219\n",
      "[74]\tvalidation_0-logloss:0.70230\n",
      "[76]\tvalidation_0-logloss:0.70262\n",
      "[78]\tvalidation_0-logloss:0.70265\n",
      "[80]\tvalidation_0-logloss:0.70282\n",
      "[82]\tvalidation_0-logloss:0.70307\n",
      "[84]\tvalidation_0-logloss:0.70318\n",
      "[86]\tvalidation_0-logloss:0.70329\n",
      "[88]\tvalidation_0-logloss:0.70346\n",
      "[90]\tvalidation_0-logloss:0.70327\n",
      "[92]\tvalidation_0-logloss:0.70340\n",
      "[94]\tvalidation_0-logloss:0.70367\n",
      "[96]\tvalidation_0-logloss:0.70400\n",
      "[98]\tvalidation_0-logloss:0.70482\n",
      "[100]\tvalidation_0-logloss:0.70509\n",
      "[102]\tvalidation_0-logloss:0.70496\n",
      "[104]\tvalidation_0-logloss:0.70494\n",
      "[106]\tvalidation_0-logloss:0.70503\n",
      "[108]\tvalidation_0-logloss:0.70562\n",
      "[110]\tvalidation_0-logloss:0.70546\n",
      "[112]\tvalidation_0-logloss:0.70583\n",
      "[114]\tvalidation_0-logloss:0.70630\n",
      "[116]\tvalidation_0-logloss:0.70636\n",
      "[118]\tvalidation_0-logloss:0.70643\n",
      "[120]\tvalidation_0-logloss:0.70656\n",
      "[122]\tvalidation_0-logloss:0.70666\n",
      "[124]\tvalidation_0-logloss:0.70686\n",
      "[126]\tvalidation_0-logloss:0.70766\n",
      "[128]\tvalidation_0-logloss:0.70798\n",
      "[130]\tvalidation_0-logloss:0.70822\n",
      "[132]\tvalidation_0-logloss:0.70818\n",
      "[134]\tvalidation_0-logloss:0.70846\n",
      "[136]\tvalidation_0-logloss:0.70875\n",
      "[138]\tvalidation_0-logloss:0.70924\n",
      "[140]\tvalidation_0-logloss:0.70925\n",
      "[142]\tvalidation_0-logloss:0.70930\n",
      "[144]\tvalidation_0-logloss:0.70965\n",
      "[146]\tvalidation_0-logloss:0.71010\n",
      "[148]\tvalidation_0-logloss:0.71088\n",
      "[150]\tvalidation_0-logloss:0.71101\n",
      "[152]\tvalidation_0-logloss:0.71112\n",
      "[154]\tvalidation_0-logloss:0.71080\n",
      "[156]\tvalidation_0-logloss:0.71114\n",
      "[158]\tvalidation_0-logloss:0.71119\n",
      "[160]\tvalidation_0-logloss:0.71150\n",
      "[162]\tvalidation_0-logloss:0.71178\n",
      "[164]\tvalidation_0-logloss:0.71190\n",
      "[166]\tvalidation_0-logloss:0.71208\n",
      "[168]\tvalidation_0-logloss:0.71218\n",
      "[170]\tvalidation_0-logloss:0.71245\n",
      "[172]\tvalidation_0-logloss:0.71238\n",
      "[174]\tvalidation_0-logloss:0.71263\n",
      "[176]\tvalidation_0-logloss:0.71251\n",
      "[178]\tvalidation_0-logloss:0.71249\n",
      "[180]\tvalidation_0-logloss:0.71256\n",
      "[182]\tvalidation_0-logloss:0.71259\n",
      "[184]\tvalidation_0-logloss:0.71255\n",
      "[186]\tvalidation_0-logloss:0.71258\n",
      "[188]\tvalidation_0-logloss:0.71289\n",
      "[190]\tvalidation_0-logloss:0.71296\n",
      "[192]\tvalidation_0-logloss:0.71306\n",
      "[194]\tvalidation_0-logloss:0.71338\n",
      "[196]\tvalidation_0-logloss:0.71342\n",
      "[198]\tvalidation_0-logloss:0.71353\n",
      "[200]\tvalidation_0-logloss:0.71381\n",
      "[202]\tvalidation_0-logloss:0.71358\n",
      "[204]\tvalidation_0-logloss:0.71378\n",
      "[206]\tvalidation_0-logloss:0.71368\n",
      "[208]\tvalidation_0-logloss:0.71447\n",
      "[210]\tvalidation_0-logloss:0.71452\n",
      "[212]\tvalidation_0-logloss:0.71447\n",
      "[214]\tvalidation_0-logloss:0.71425\n",
      "[216]\tvalidation_0-logloss:0.71429\n",
      "[218]\tvalidation_0-logloss:0.71427\n",
      "[220]\tvalidation_0-logloss:0.71446\n",
      "[222]\tvalidation_0-logloss:0.71466\n",
      "[224]\tvalidation_0-logloss:0.71586\n",
      "[226]\tvalidation_0-logloss:0.71585\n",
      "[228]\tvalidation_0-logloss:0.71626\n",
      "[230]\tvalidation_0-logloss:0.71633\n",
      "[232]\tvalidation_0-logloss:0.71649\n",
      "[234]\tvalidation_0-logloss:0.71655\n",
      "[236]\tvalidation_0-logloss:0.71689\n",
      "[238]\tvalidation_0-logloss:0.71702\n",
      "[240]\tvalidation_0-logloss:0.71730\n",
      "[242]\tvalidation_0-logloss:0.71730\n",
      "[244]\tvalidation_0-logloss:0.71781\n",
      "[246]\tvalidation_0-logloss:0.71780\n",
      "[248]\tvalidation_0-logloss:0.71834\n",
      "[250]\tvalidation_0-logloss:0.71875\n",
      "[252]\tvalidation_0-logloss:0.71848\n",
      "[254]\tvalidation_0-logloss:0.71864\n",
      "[256]\tvalidation_0-logloss:0.71858\n",
      "[258]\tvalidation_0-logloss:0.71876\n",
      "[260]\tvalidation_0-logloss:0.71873\n",
      "[262]\tvalidation_0-logloss:0.71889\n",
      "[264]\tvalidation_0-logloss:0.71934\n",
      "[266]\tvalidation_0-logloss:0.71911\n",
      "[268]\tvalidation_0-logloss:0.71927\n",
      "[270]\tvalidation_0-logloss:0.71923\n",
      "[271]\tvalidation_0-logloss:0.71916\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 15:40:32,128] Trial 0 finished with value: 0.6926045044298563 and parameters: {'eta': 0.17875402062449533, 'gamma': 0.01695635409270624, 'max_depth': 4, 'min_child_weight': 1, 'lambda': 0.0070669164096609505, 'alpha': 0.4287410845690137}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [15:40:36] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69643\n",
      "[2]\tvalidation_0-logloss:0.69851\n",
      "[4]\tvalidation_0-logloss:0.70244\n",
      "[6]\tvalidation_0-logloss:0.70342\n",
      "[8]\tvalidation_0-logloss:0.70356\n",
      "[10]\tvalidation_0-logloss:0.70487\n",
      "[12]\tvalidation_0-logloss:0.70800\n",
      "[14]\tvalidation_0-logloss:0.70868\n",
      "[16]\tvalidation_0-logloss:0.70987\n",
      "[18]\tvalidation_0-logloss:0.71247\n",
      "[20]\tvalidation_0-logloss:0.71399\n",
      "[22]\tvalidation_0-logloss:0.71560\n",
      "[24]\tvalidation_0-logloss:0.71663\n",
      "[26]\tvalidation_0-logloss:0.71769\n",
      "[28]\tvalidation_0-logloss:0.71910\n",
      "[30]\tvalidation_0-logloss:0.71996\n",
      "[32]\tvalidation_0-logloss:0.72203\n",
      "[34]\tvalidation_0-logloss:0.72400\n",
      "[36]\tvalidation_0-logloss:0.72537\n",
      "[38]\tvalidation_0-logloss:0.72620\n",
      "[40]\tvalidation_0-logloss:0.72769\n",
      "[42]\tvalidation_0-logloss:0.72890\n",
      "[44]\tvalidation_0-logloss:0.72952\n",
      "[46]\tvalidation_0-logloss:0.72974\n",
      "[48]\tvalidation_0-logloss:0.73048\n",
      "[50]\tvalidation_0-logloss:0.73131\n",
      "[52]\tvalidation_0-logloss:0.73291\n",
      "[54]\tvalidation_0-logloss:0.73318\n",
      "[56]\tvalidation_0-logloss:0.73379\n",
      "[58]\tvalidation_0-logloss:0.73511\n",
      "[60]\tvalidation_0-logloss:0.73589\n",
      "[62]\tvalidation_0-logloss:0.73711\n",
      "[64]\tvalidation_0-logloss:0.73801\n",
      "[66]\tvalidation_0-logloss:0.73897\n",
      "[68]\tvalidation_0-logloss:0.73950\n",
      "[70]\tvalidation_0-logloss:0.74100\n",
      "[72]\tvalidation_0-logloss:0.74207\n",
      "[74]\tvalidation_0-logloss:0.74332\n",
      "[76]\tvalidation_0-logloss:0.74383\n",
      "[78]\tvalidation_0-logloss:0.74365\n",
      "[80]\tvalidation_0-logloss:0.74530\n",
      "[82]\tvalidation_0-logloss:0.74576\n",
      "[84]\tvalidation_0-logloss:0.74613\n",
      "[86]\tvalidation_0-logloss:0.74754\n",
      "[88]\tvalidation_0-logloss:0.74879\n",
      "[90]\tvalidation_0-logloss:0.74927\n",
      "[92]\tvalidation_0-logloss:0.75049\n",
      "[94]\tvalidation_0-logloss:0.75106\n",
      "[96]\tvalidation_0-logloss:0.75214\n",
      "[98]\tvalidation_0-logloss:0.75301\n",
      "[100]\tvalidation_0-logloss:0.75346\n",
      "[102]\tvalidation_0-logloss:0.75404\n",
      "[104]\tvalidation_0-logloss:0.75471\n",
      "[106]\tvalidation_0-logloss:0.75483\n",
      "[108]\tvalidation_0-logloss:0.75649\n",
      "[110]\tvalidation_0-logloss:0.75718\n",
      "[112]\tvalidation_0-logloss:0.75763\n",
      "[114]\tvalidation_0-logloss:0.75877\n",
      "[116]\tvalidation_0-logloss:0.75916\n",
      "[118]\tvalidation_0-logloss:0.76092\n",
      "[120]\tvalidation_0-logloss:0.76188\n",
      "[122]\tvalidation_0-logloss:0.76220\n",
      "[124]\tvalidation_0-logloss:0.76357\n",
      "[126]\tvalidation_0-logloss:0.76399\n",
      "[128]\tvalidation_0-logloss:0.76492\n",
      "[130]\tvalidation_0-logloss:0.76533\n",
      "[132]\tvalidation_0-logloss:0.76586\n",
      "[134]\tvalidation_0-logloss:0.76673\n",
      "[136]\tvalidation_0-logloss:0.76746\n",
      "[138]\tvalidation_0-logloss:0.76734\n",
      "[140]\tvalidation_0-logloss:0.76748\n",
      "[142]\tvalidation_0-logloss:0.76818\n",
      "[144]\tvalidation_0-logloss:0.76950\n",
      "[146]\tvalidation_0-logloss:0.77069\n",
      "[148]\tvalidation_0-logloss:0.77170\n",
      "[150]\tvalidation_0-logloss:0.77403\n",
      "[152]\tvalidation_0-logloss:0.77456\n",
      "[154]\tvalidation_0-logloss:0.77504\n",
      "[156]\tvalidation_0-logloss:0.77513\n",
      "[158]\tvalidation_0-logloss:0.77639\n",
      "[160]\tvalidation_0-logloss:0.77661\n",
      "[162]\tvalidation_0-logloss:0.77737\n",
      "[164]\tvalidation_0-logloss:0.77826\n",
      "[166]\tvalidation_0-logloss:0.77819\n",
      "[168]\tvalidation_0-logloss:0.77913\n",
      "[170]\tvalidation_0-logloss:0.77931\n",
      "[172]\tvalidation_0-logloss:0.78014\n",
      "[174]\tvalidation_0-logloss:0.78094\n",
      "[176]\tvalidation_0-logloss:0.78147\n",
      "[178]\tvalidation_0-logloss:0.78377\n",
      "[180]\tvalidation_0-logloss:0.78402\n",
      "[182]\tvalidation_0-logloss:0.78415\n",
      "[184]\tvalidation_0-logloss:0.78488\n",
      "[186]\tvalidation_0-logloss:0.78477\n",
      "[188]\tvalidation_0-logloss:0.78525\n",
      "[190]\tvalidation_0-logloss:0.78554\n",
      "[192]\tvalidation_0-logloss:0.78554\n",
      "[194]\tvalidation_0-logloss:0.78587\n",
      "[196]\tvalidation_0-logloss:0.78720\n",
      "[198]\tvalidation_0-logloss:0.78699\n",
      "[200]\tvalidation_0-logloss:0.78804\n",
      "[202]\tvalidation_0-logloss:0.78809\n",
      "[204]\tvalidation_0-logloss:0.78857\n",
      "[206]\tvalidation_0-logloss:0.79003\n",
      "[208]\tvalidation_0-logloss:0.79161\n",
      "[210]\tvalidation_0-logloss:0.79187\n",
      "[212]\tvalidation_0-logloss:0.79243\n",
      "[214]\tvalidation_0-logloss:0.79259\n",
      "[216]\tvalidation_0-logloss:0.79319\n",
      "[218]\tvalidation_0-logloss:0.79395\n",
      "[220]\tvalidation_0-logloss:0.79461\n",
      "[222]\tvalidation_0-logloss:0.79536\n",
      "[224]\tvalidation_0-logloss:0.79585\n",
      "[226]\tvalidation_0-logloss:0.79640\n",
      "[228]\tvalidation_0-logloss:0.79587\n",
      "[230]\tvalidation_0-logloss:0.79657\n",
      "[232]\tvalidation_0-logloss:0.79723\n",
      "[234]\tvalidation_0-logloss:0.79801\n",
      "[236]\tvalidation_0-logloss:0.79804\n",
      "[238]\tvalidation_0-logloss:0.79929\n",
      "[240]\tvalidation_0-logloss:0.80039\n",
      "[242]\tvalidation_0-logloss:0.80079\n",
      "[244]\tvalidation_0-logloss:0.80228\n",
      "[246]\tvalidation_0-logloss:0.80271\n",
      "[248]\tvalidation_0-logloss:0.80303\n",
      "[249]\tvalidation_0-logloss:0.80317\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 15:42:19,272] Trial 1 finished with value: 0.696430239312443 and parameters: {'eta': 0.1541179695758835, 'gamma': 0.5396936226023027, 'max_depth': 10, 'min_child_weight': 6, 'lambda': 0.6296133524890559, 'alpha': 0.051096885766096056}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [15:42:23] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69552\n",
      "[2]\tvalidation_0-logloss:0.69574\n",
      "[4]\tvalidation_0-logloss:0.69533\n",
      "[6]\tvalidation_0-logloss:0.69537\n",
      "[8]\tvalidation_0-logloss:0.69550\n",
      "[10]\tvalidation_0-logloss:0.69547\n",
      "[12]\tvalidation_0-logloss:0.69483\n",
      "[14]\tvalidation_0-logloss:0.69466\n",
      "[16]\tvalidation_0-logloss:0.69476\n",
      "[18]\tvalidation_0-logloss:0.69484\n",
      "[20]\tvalidation_0-logloss:0.69491\n",
      "[22]\tvalidation_0-logloss:0.69489\n",
      "[24]\tvalidation_0-logloss:0.69474\n",
      "[26]\tvalidation_0-logloss:0.69517\n",
      "[28]\tvalidation_0-logloss:0.69564\n",
      "[30]\tvalidation_0-logloss:0.69594\n",
      "[32]\tvalidation_0-logloss:0.69593\n",
      "[34]\tvalidation_0-logloss:0.69628\n",
      "[36]\tvalidation_0-logloss:0.69603\n",
      "[38]\tvalidation_0-logloss:0.69581\n",
      "[40]\tvalidation_0-logloss:0.69645\n",
      "[42]\tvalidation_0-logloss:0.69656\n",
      "[44]\tvalidation_0-logloss:0.69668\n",
      "[46]\tvalidation_0-logloss:0.69655\n",
      "[48]\tvalidation_0-logloss:0.69681\n",
      "[50]\tvalidation_0-logloss:0.69656\n",
      "[52]\tvalidation_0-logloss:0.69679\n",
      "[54]\tvalidation_0-logloss:0.69682\n",
      "[56]\tvalidation_0-logloss:0.69693\n",
      "[58]\tvalidation_0-logloss:0.69733\n",
      "[60]\tvalidation_0-logloss:0.69790\n",
      "[62]\tvalidation_0-logloss:0.69803\n",
      "[64]\tvalidation_0-logloss:0.69809\n",
      "[66]\tvalidation_0-logloss:0.69811\n",
      "[68]\tvalidation_0-logloss:0.69810\n",
      "[70]\tvalidation_0-logloss:0.69853\n",
      "[72]\tvalidation_0-logloss:0.69908\n",
      "[74]\tvalidation_0-logloss:0.69913\n",
      "[76]\tvalidation_0-logloss:0.69919\n",
      "[78]\tvalidation_0-logloss:0.69937\n",
      "[80]\tvalidation_0-logloss:0.69915\n",
      "[82]\tvalidation_0-logloss:0.69987\n",
      "[84]\tvalidation_0-logloss:0.69964\n",
      "[86]\tvalidation_0-logloss:0.69994\n",
      "[88]\tvalidation_0-logloss:0.70002\n",
      "[90]\tvalidation_0-logloss:0.69994\n",
      "[92]\tvalidation_0-logloss:0.70079\n",
      "[94]\tvalidation_0-logloss:0.70159\n",
      "[96]\tvalidation_0-logloss:0.70184\n",
      "[98]\tvalidation_0-logloss:0.70213\n",
      "[100]\tvalidation_0-logloss:0.70202\n",
      "[102]\tvalidation_0-logloss:0.70213\n",
      "[104]\tvalidation_0-logloss:0.70246\n",
      "[106]\tvalidation_0-logloss:0.70212\n",
      "[108]\tvalidation_0-logloss:0.70333\n",
      "[110]\tvalidation_0-logloss:0.70337\n",
      "[112]\tvalidation_0-logloss:0.70334\n",
      "[114]\tvalidation_0-logloss:0.70331\n",
      "[116]\tvalidation_0-logloss:0.70397\n",
      "[118]\tvalidation_0-logloss:0.70446\n",
      "[120]\tvalidation_0-logloss:0.70464\n",
      "[122]\tvalidation_0-logloss:0.70463\n",
      "[124]\tvalidation_0-logloss:0.70498\n",
      "[126]\tvalidation_0-logloss:0.70533\n",
      "[128]\tvalidation_0-logloss:0.70548\n",
      "[130]\tvalidation_0-logloss:0.70583\n",
      "[132]\tvalidation_0-logloss:0.70624\n",
      "[134]\tvalidation_0-logloss:0.70643\n",
      "[136]\tvalidation_0-logloss:0.70664\n",
      "[138]\tvalidation_0-logloss:0.70715\n",
      "[140]\tvalidation_0-logloss:0.70802\n",
      "[142]\tvalidation_0-logloss:0.70774\n",
      "[144]\tvalidation_0-logloss:0.70852\n",
      "[146]\tvalidation_0-logloss:0.70868\n",
      "[148]\tvalidation_0-logloss:0.70870\n",
      "[150]\tvalidation_0-logloss:0.70855\n",
      "[152]\tvalidation_0-logloss:0.70845\n",
      "[154]\tvalidation_0-logloss:0.70855\n",
      "[156]\tvalidation_0-logloss:0.70876\n",
      "[158]\tvalidation_0-logloss:0.70907\n",
      "[160]\tvalidation_0-logloss:0.70921\n",
      "[162]\tvalidation_0-logloss:0.70934\n",
      "[164]\tvalidation_0-logloss:0.70962\n",
      "[166]\tvalidation_0-logloss:0.70989\n",
      "[168]\tvalidation_0-logloss:0.71001\n",
      "[170]\tvalidation_0-logloss:0.71010\n",
      "[172]\tvalidation_0-logloss:0.71042\n",
      "[174]\tvalidation_0-logloss:0.71055\n",
      "[176]\tvalidation_0-logloss:0.71080\n",
      "[178]\tvalidation_0-logloss:0.71086\n",
      "[180]\tvalidation_0-logloss:0.71085\n",
      "[182]\tvalidation_0-logloss:0.71095\n",
      "[184]\tvalidation_0-logloss:0.71173\n",
      "[186]\tvalidation_0-logloss:0.71191\n",
      "[188]\tvalidation_0-logloss:0.71202\n",
      "[190]\tvalidation_0-logloss:0.71195\n",
      "[192]\tvalidation_0-logloss:0.71182\n",
      "[194]\tvalidation_0-logloss:0.71180\n",
      "[196]\tvalidation_0-logloss:0.71170\n",
      "[198]\tvalidation_0-logloss:0.71186\n",
      "[200]\tvalidation_0-logloss:0.71179\n",
      "[202]\tvalidation_0-logloss:0.71198\n",
      "[204]\tvalidation_0-logloss:0.71241\n",
      "[206]\tvalidation_0-logloss:0.71283\n",
      "[208]\tvalidation_0-logloss:0.71305\n",
      "[210]\tvalidation_0-logloss:0.71308\n",
      "[212]\tvalidation_0-logloss:0.71339\n",
      "[214]\tvalidation_0-logloss:0.71359\n",
      "[216]\tvalidation_0-logloss:0.71379\n",
      "[218]\tvalidation_0-logloss:0.71344\n",
      "[220]\tvalidation_0-logloss:0.71380\n",
      "[222]\tvalidation_0-logloss:0.71366\n",
      "[224]\tvalidation_0-logloss:0.71423\n",
      "[226]\tvalidation_0-logloss:0.71441\n",
      "[228]\tvalidation_0-logloss:0.71442\n",
      "[230]\tvalidation_0-logloss:0.71451\n",
      "[232]\tvalidation_0-logloss:0.71504\n",
      "[234]\tvalidation_0-logloss:0.71495\n",
      "[236]\tvalidation_0-logloss:0.71569\n",
      "[238]\tvalidation_0-logloss:0.71571\n",
      "[240]\tvalidation_0-logloss:0.71657\n",
      "[242]\tvalidation_0-logloss:0.71671\n",
      "[244]\tvalidation_0-logloss:0.71549\n",
      "[246]\tvalidation_0-logloss:0.71536\n",
      "[248]\tvalidation_0-logloss:0.71538\n",
      "[250]\tvalidation_0-logloss:0.71573\n",
      "[252]\tvalidation_0-logloss:0.71593\n",
      "[254]\tvalidation_0-logloss:0.71624\n",
      "[256]\tvalidation_0-logloss:0.71631\n",
      "[258]\tvalidation_0-logloss:0.71679\n",
      "[260]\tvalidation_0-logloss:0.71710\n",
      "[262]\tvalidation_0-logloss:0.71722\n",
      "[264]\tvalidation_0-logloss:0.71720\n",
      "[266]\tvalidation_0-logloss:0.71720\n",
      "[268]\tvalidation_0-logloss:0.71734\n",
      "[270]\tvalidation_0-logloss:0.71759\n",
      "[272]\tvalidation_0-logloss:0.71751\n",
      "[273]\tvalidation_0-logloss:0.71753\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 15:43:41,967] Trial 2 finished with value: 0.6945861539098348 and parameters: {'eta': 0.10045485657151668, 'gamma': 0.1350523318234732, 'max_depth': 5, 'min_child_weight': 6, 'lambda': 0.6773128700649699, 'alpha': 0.4952045416435492}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [15:43:46] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69542\n",
      "[2]\tvalidation_0-logloss:0.69629\n",
      "[4]\tvalidation_0-logloss:0.69595\n",
      "[6]\tvalidation_0-logloss:0.69566\n",
      "[8]\tvalidation_0-logloss:0.69547\n",
      "[10]\tvalidation_0-logloss:0.69595\n",
      "[12]\tvalidation_0-logloss:0.69566\n",
      "[14]\tvalidation_0-logloss:0.69585\n",
      "[16]\tvalidation_0-logloss:0.69596\n",
      "[18]\tvalidation_0-logloss:0.69578\n",
      "[20]\tvalidation_0-logloss:0.69553\n",
      "[22]\tvalidation_0-logloss:0.69597\n",
      "[24]\tvalidation_0-logloss:0.69622\n",
      "[26]\tvalidation_0-logloss:0.69630\n",
      "[28]\tvalidation_0-logloss:0.69674\n",
      "[30]\tvalidation_0-logloss:0.69655\n",
      "[32]\tvalidation_0-logloss:0.69674\n",
      "[34]\tvalidation_0-logloss:0.69690\n",
      "[36]\tvalidation_0-logloss:0.69668\n",
      "[38]\tvalidation_0-logloss:0.69671\n",
      "[40]\tvalidation_0-logloss:0.69713\n",
      "[42]\tvalidation_0-logloss:0.69735\n",
      "[44]\tvalidation_0-logloss:0.69720\n",
      "[46]\tvalidation_0-logloss:0.69752\n",
      "[48]\tvalidation_0-logloss:0.69764\n",
      "[50]\tvalidation_0-logloss:0.69763\n",
      "[52]\tvalidation_0-logloss:0.69784\n",
      "[54]\tvalidation_0-logloss:0.69827\n",
      "[56]\tvalidation_0-logloss:0.69843\n",
      "[58]\tvalidation_0-logloss:0.69827\n",
      "[60]\tvalidation_0-logloss:0.69836\n",
      "[62]\tvalidation_0-logloss:0.69830\n",
      "[64]\tvalidation_0-logloss:0.69839\n",
      "[66]\tvalidation_0-logloss:0.69818\n",
      "[68]\tvalidation_0-logloss:0.69850\n",
      "[70]\tvalidation_0-logloss:0.69853\n",
      "[72]\tvalidation_0-logloss:0.69865\n",
      "[74]\tvalidation_0-logloss:0.69862\n",
      "[76]\tvalidation_0-logloss:0.69908\n",
      "[78]\tvalidation_0-logloss:0.69909\n",
      "[80]\tvalidation_0-logloss:0.69911\n",
      "[82]\tvalidation_0-logloss:0.69937\n",
      "[84]\tvalidation_0-logloss:0.69957\n",
      "[86]\tvalidation_0-logloss:0.70012\n",
      "[88]\tvalidation_0-logloss:0.70071\n",
      "[90]\tvalidation_0-logloss:0.70118\n",
      "[92]\tvalidation_0-logloss:0.70133\n",
      "[94]\tvalidation_0-logloss:0.70152\n",
      "[96]\tvalidation_0-logloss:0.70150\n",
      "[98]\tvalidation_0-logloss:0.70160\n",
      "[100]\tvalidation_0-logloss:0.70206\n",
      "[102]\tvalidation_0-logloss:0.70236\n",
      "[104]\tvalidation_0-logloss:0.70252\n",
      "[106]\tvalidation_0-logloss:0.70282\n",
      "[108]\tvalidation_0-logloss:0.70282\n",
      "[110]\tvalidation_0-logloss:0.70320\n",
      "[112]\tvalidation_0-logloss:0.70349\n",
      "[114]\tvalidation_0-logloss:0.70360\n",
      "[116]\tvalidation_0-logloss:0.70367\n",
      "[118]\tvalidation_0-logloss:0.70326\n",
      "[120]\tvalidation_0-logloss:0.70358\n",
      "[122]\tvalidation_0-logloss:0.70377\n",
      "[124]\tvalidation_0-logloss:0.70386\n",
      "[126]\tvalidation_0-logloss:0.70373\n",
      "[128]\tvalidation_0-logloss:0.70367\n",
      "[130]\tvalidation_0-logloss:0.70378\n",
      "[132]\tvalidation_0-logloss:0.70412\n",
      "[134]\tvalidation_0-logloss:0.70429\n",
      "[136]\tvalidation_0-logloss:0.70412\n",
      "[138]\tvalidation_0-logloss:0.70425\n",
      "[140]\tvalidation_0-logloss:0.70473\n",
      "[142]\tvalidation_0-logloss:0.70510\n",
      "[144]\tvalidation_0-logloss:0.70522\n",
      "[146]\tvalidation_0-logloss:0.70529\n",
      "[148]\tvalidation_0-logloss:0.70541\n",
      "[150]\tvalidation_0-logloss:0.70528\n",
      "[152]\tvalidation_0-logloss:0.70544\n",
      "[154]\tvalidation_0-logloss:0.70551\n",
      "[156]\tvalidation_0-logloss:0.70565\n",
      "[158]\tvalidation_0-logloss:0.70528\n",
      "[160]\tvalidation_0-logloss:0.70544\n",
      "[162]\tvalidation_0-logloss:0.70577\n",
      "[164]\tvalidation_0-logloss:0.70591\n",
      "[166]\tvalidation_0-logloss:0.70616\n",
      "[168]\tvalidation_0-logloss:0.70637\n",
      "[170]\tvalidation_0-logloss:0.70633\n",
      "[172]\tvalidation_0-logloss:0.70594\n",
      "[174]\tvalidation_0-logloss:0.70626\n",
      "[176]\tvalidation_0-logloss:0.70675\n",
      "[178]\tvalidation_0-logloss:0.70697\n",
      "[180]\tvalidation_0-logloss:0.70716\n",
      "[182]\tvalidation_0-logloss:0.70714\n",
      "[184]\tvalidation_0-logloss:0.70727\n",
      "[186]\tvalidation_0-logloss:0.70746\n",
      "[188]\tvalidation_0-logloss:0.70757\n",
      "[190]\tvalidation_0-logloss:0.70754\n",
      "[192]\tvalidation_0-logloss:0.70887\n",
      "[194]\tvalidation_0-logloss:0.70895\n",
      "[196]\tvalidation_0-logloss:0.70957\n",
      "[198]\tvalidation_0-logloss:0.70936\n",
      "[200]\tvalidation_0-logloss:0.70961\n",
      "[202]\tvalidation_0-logloss:0.70974\n",
      "[204]\tvalidation_0-logloss:0.71003\n",
      "[206]\tvalidation_0-logloss:0.71011\n",
      "[208]\tvalidation_0-logloss:0.71004\n",
      "[210]\tvalidation_0-logloss:0.70980\n",
      "[212]\tvalidation_0-logloss:0.71024\n",
      "[214]\tvalidation_0-logloss:0.71047\n",
      "[216]\tvalidation_0-logloss:0.71044\n",
      "[218]\tvalidation_0-logloss:0.71017\n",
      "[220]\tvalidation_0-logloss:0.71025\n",
      "[222]\tvalidation_0-logloss:0.71067\n",
      "[224]\tvalidation_0-logloss:0.71101\n",
      "[226]\tvalidation_0-logloss:0.71089\n",
      "[228]\tvalidation_0-logloss:0.71130\n",
      "[230]\tvalidation_0-logloss:0.71143\n",
      "[232]\tvalidation_0-logloss:0.71162\n",
      "[234]\tvalidation_0-logloss:0.71168\n",
      "[236]\tvalidation_0-logloss:0.71178\n",
      "[238]\tvalidation_0-logloss:0.71176\n",
      "[240]\tvalidation_0-logloss:0.71262\n",
      "[242]\tvalidation_0-logloss:0.71265\n",
      "[244]\tvalidation_0-logloss:0.71259\n",
      "[246]\tvalidation_0-logloss:0.71266\n",
      "[248]\tvalidation_0-logloss:0.71259\n",
      "[250]\tvalidation_0-logloss:0.71270\n",
      "[252]\tvalidation_0-logloss:0.71269\n",
      "[254]\tvalidation_0-logloss:0.71290\n",
      "[256]\tvalidation_0-logloss:0.71326\n",
      "[257]\tvalidation_0-logloss:0.71319\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 15:45:04,364] Trial 3 finished with value: 0.6953899621796624 and parameters: {'eta': 0.07446080295454313, 'gamma': 0.9226799348445677, 'max_depth': 6, 'min_child_weight': 3, 'lambda': 0.48029904886374697, 'alpha': 0.23694235751209536}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [15:45:09] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69534\n",
      "[2]\tvalidation_0-logloss:0.69559\n",
      "[4]\tvalidation_0-logloss:0.69571\n",
      "[6]\tvalidation_0-logloss:0.69550\n",
      "[8]\tvalidation_0-logloss:0.69527\n",
      "[10]\tvalidation_0-logloss:0.69508\n",
      "[12]\tvalidation_0-logloss:0.69496\n",
      "[14]\tvalidation_0-logloss:0.69480\n",
      "[16]\tvalidation_0-logloss:0.69501\n",
      "[18]\tvalidation_0-logloss:0.69499\n",
      "[20]\tvalidation_0-logloss:0.69506\n",
      "[22]\tvalidation_0-logloss:0.69515\n",
      "[24]\tvalidation_0-logloss:0.69519\n",
      "[26]\tvalidation_0-logloss:0.69521\n",
      "[28]\tvalidation_0-logloss:0.69527\n",
      "[30]\tvalidation_0-logloss:0.69524\n",
      "[32]\tvalidation_0-logloss:0.69519\n",
      "[34]\tvalidation_0-logloss:0.69548\n",
      "[36]\tvalidation_0-logloss:0.69570\n",
      "[38]\tvalidation_0-logloss:0.69565\n",
      "[40]\tvalidation_0-logloss:0.69588\n",
      "[42]\tvalidation_0-logloss:0.69573\n",
      "[44]\tvalidation_0-logloss:0.69586\n",
      "[46]\tvalidation_0-logloss:0.69582\n",
      "[48]\tvalidation_0-logloss:0.69594\n",
      "[50]\tvalidation_0-logloss:0.69613\n",
      "[52]\tvalidation_0-logloss:0.69623\n",
      "[54]\tvalidation_0-logloss:0.69639\n",
      "[56]\tvalidation_0-logloss:0.69643\n",
      "[58]\tvalidation_0-logloss:0.69638\n",
      "[60]\tvalidation_0-logloss:0.69628\n",
      "[62]\tvalidation_0-logloss:0.69623\n",
      "[64]\tvalidation_0-logloss:0.69629\n",
      "[66]\tvalidation_0-logloss:0.69624\n",
      "[68]\tvalidation_0-logloss:0.69616\n",
      "[70]\tvalidation_0-logloss:0.69596\n",
      "[72]\tvalidation_0-logloss:0.69614\n",
      "[74]\tvalidation_0-logloss:0.69610\n",
      "[76]\tvalidation_0-logloss:0.69596\n",
      "[78]\tvalidation_0-logloss:0.69616\n",
      "[80]\tvalidation_0-logloss:0.69610\n",
      "[82]\tvalidation_0-logloss:0.69626\n",
      "[84]\tvalidation_0-logloss:0.69625\n",
      "[86]\tvalidation_0-logloss:0.69637\n",
      "[88]\tvalidation_0-logloss:0.69634\n",
      "[90]\tvalidation_0-logloss:0.69634\n",
      "[92]\tvalidation_0-logloss:0.69637\n",
      "[94]\tvalidation_0-logloss:0.69639\n",
      "[96]\tvalidation_0-logloss:0.69637\n",
      "[98]\tvalidation_0-logloss:0.69638\n",
      "[100]\tvalidation_0-logloss:0.69632\n",
      "[102]\tvalidation_0-logloss:0.69633\n",
      "[104]\tvalidation_0-logloss:0.69635\n",
      "[106]\tvalidation_0-logloss:0.69636\n",
      "[108]\tvalidation_0-logloss:0.69654\n",
      "[110]\tvalidation_0-logloss:0.69643\n",
      "[112]\tvalidation_0-logloss:0.69635\n",
      "[114]\tvalidation_0-logloss:0.69643\n",
      "[116]\tvalidation_0-logloss:0.69644\n",
      "[118]\tvalidation_0-logloss:0.69643\n",
      "[120]\tvalidation_0-logloss:0.69648\n",
      "[122]\tvalidation_0-logloss:0.69651\n",
      "[124]\tvalidation_0-logloss:0.69663\n",
      "[126]\tvalidation_0-logloss:0.69661\n",
      "[128]\tvalidation_0-logloss:0.69669\n",
      "[130]\tvalidation_0-logloss:0.69669\n",
      "[132]\tvalidation_0-logloss:0.69667\n",
      "[134]\tvalidation_0-logloss:0.69682\n",
      "[136]\tvalidation_0-logloss:0.69697\n",
      "[138]\tvalidation_0-logloss:0.69693\n",
      "[140]\tvalidation_0-logloss:0.69697\n",
      "[142]\tvalidation_0-logloss:0.69695\n",
      "[144]\tvalidation_0-logloss:0.69695\n",
      "[146]\tvalidation_0-logloss:0.69683\n",
      "[148]\tvalidation_0-logloss:0.69695\n",
      "[150]\tvalidation_0-logloss:0.69698\n",
      "[152]\tvalidation_0-logloss:0.69705\n",
      "[154]\tvalidation_0-logloss:0.69696\n",
      "[156]\tvalidation_0-logloss:0.69687\n",
      "[158]\tvalidation_0-logloss:0.69697\n",
      "[160]\tvalidation_0-logloss:0.69701\n",
      "[162]\tvalidation_0-logloss:0.69703\n",
      "[164]\tvalidation_0-logloss:0.69727\n",
      "[166]\tvalidation_0-logloss:0.69742\n",
      "[168]\tvalidation_0-logloss:0.69739\n",
      "[170]\tvalidation_0-logloss:0.69744\n",
      "[172]\tvalidation_0-logloss:0.69743\n",
      "[174]\tvalidation_0-logloss:0.69747\n",
      "[176]\tvalidation_0-logloss:0.69746\n",
      "[178]\tvalidation_0-logloss:0.69749\n",
      "[180]\tvalidation_0-logloss:0.69757\n",
      "[182]\tvalidation_0-logloss:0.69764\n",
      "[184]\tvalidation_0-logloss:0.69757\n",
      "[186]\tvalidation_0-logloss:0.69771\n",
      "[188]\tvalidation_0-logloss:0.69778\n",
      "[190]\tvalidation_0-logloss:0.69775\n",
      "[192]\tvalidation_0-logloss:0.69775\n",
      "[194]\tvalidation_0-logloss:0.69787\n",
      "[196]\tvalidation_0-logloss:0.69791\n",
      "[198]\tvalidation_0-logloss:0.69789\n",
      "[200]\tvalidation_0-logloss:0.69820\n",
      "[202]\tvalidation_0-logloss:0.69836\n",
      "[204]\tvalidation_0-logloss:0.69832\n",
      "[206]\tvalidation_0-logloss:0.69849\n",
      "[208]\tvalidation_0-logloss:0.69852\n",
      "[210]\tvalidation_0-logloss:0.69872\n",
      "[212]\tvalidation_0-logloss:0.69863\n",
      "[214]\tvalidation_0-logloss:0.69863\n",
      "[216]\tvalidation_0-logloss:0.69866\n",
      "[218]\tvalidation_0-logloss:0.69890\n",
      "[220]\tvalidation_0-logloss:0.69894\n",
      "[222]\tvalidation_0-logloss:0.69891\n",
      "[224]\tvalidation_0-logloss:0.69903\n",
      "[226]\tvalidation_0-logloss:0.69910\n",
      "[228]\tvalidation_0-logloss:0.69929\n",
      "[230]\tvalidation_0-logloss:0.69937\n",
      "[232]\tvalidation_0-logloss:0.69943\n",
      "[234]\tvalidation_0-logloss:0.69940\n",
      "[236]\tvalidation_0-logloss:0.69971\n",
      "[238]\tvalidation_0-logloss:0.69975\n",
      "[240]\tvalidation_0-logloss:0.69966\n",
      "[242]\tvalidation_0-logloss:0.69984\n",
      "[244]\tvalidation_0-logloss:0.69992\n",
      "[246]\tvalidation_0-logloss:0.69995\n",
      "[248]\tvalidation_0-logloss:0.70002\n",
      "[250]\tvalidation_0-logloss:0.70008\n",
      "[252]\tvalidation_0-logloss:0.70004\n",
      "[254]\tvalidation_0-logloss:0.70017\n",
      "[256]\tvalidation_0-logloss:0.70023\n",
      "[258]\tvalidation_0-logloss:0.70028\n",
      "[260]\tvalidation_0-logloss:0.70023\n",
      "[262]\tvalidation_0-logloss:0.70016\n",
      "[263]\tvalidation_0-logloss:0.70017\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 15:46:30,712] Trial 4 finished with value: 0.6948016333462481 and parameters: {'eta': 0.044506564588877785, 'gamma': 0.205364151655253, 'max_depth': 5, 'min_child_weight': 0, 'lambda': 0.27410760906076814, 'alpha': 0.32372248159268513}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [15:46:35] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69534\n",
      "[2]\tvalidation_0-logloss:0.69570\n",
      "[4]\tvalidation_0-logloss:0.69614\n",
      "[6]\tvalidation_0-logloss:0.69665\n",
      "[8]\tvalidation_0-logloss:0.69710\n",
      "[10]\tvalidation_0-logloss:0.69757\n",
      "[12]\tvalidation_0-logloss:0.69800\n",
      "[14]\tvalidation_0-logloss:0.69835\n",
      "[16]\tvalidation_0-logloss:0.69881\n",
      "[18]\tvalidation_0-logloss:0.69921\n",
      "[20]\tvalidation_0-logloss:0.69967\n",
      "[22]\tvalidation_0-logloss:0.69992\n",
      "[24]\tvalidation_0-logloss:0.69984\n",
      "[26]\tvalidation_0-logloss:0.70021\n",
      "[28]\tvalidation_0-logloss:0.70044\n",
      "[30]\tvalidation_0-logloss:0.70073\n",
      "[32]\tvalidation_0-logloss:0.70090\n",
      "[34]\tvalidation_0-logloss:0.70093\n",
      "[36]\tvalidation_0-logloss:0.70116\n",
      "[38]\tvalidation_0-logloss:0.70129\n",
      "[40]\tvalidation_0-logloss:0.70115\n",
      "[42]\tvalidation_0-logloss:0.70116\n",
      "[44]\tvalidation_0-logloss:0.70115\n",
      "[46]\tvalidation_0-logloss:0.70129\n",
      "[48]\tvalidation_0-logloss:0.70160\n",
      "[50]\tvalidation_0-logloss:0.70174\n",
      "[52]\tvalidation_0-logloss:0.70202\n",
      "[54]\tvalidation_0-logloss:0.70208\n",
      "[56]\tvalidation_0-logloss:0.70210\n",
      "[58]\tvalidation_0-logloss:0.70225\n",
      "[60]\tvalidation_0-logloss:0.70231\n",
      "[62]\tvalidation_0-logloss:0.70230\n",
      "[64]\tvalidation_0-logloss:0.70222\n",
      "[66]\tvalidation_0-logloss:0.70227\n",
      "[68]\tvalidation_0-logloss:0.70233\n",
      "[70]\tvalidation_0-logloss:0.70246\n",
      "[72]\tvalidation_0-logloss:0.70236\n",
      "[74]\tvalidation_0-logloss:0.70254\n",
      "[76]\tvalidation_0-logloss:0.70252\n",
      "[78]\tvalidation_0-logloss:0.70260\n",
      "[80]\tvalidation_0-logloss:0.70265\n",
      "[82]\tvalidation_0-logloss:0.70275\n",
      "[84]\tvalidation_0-logloss:0.70284\n",
      "[86]\tvalidation_0-logloss:0.70270\n",
      "[88]\tvalidation_0-logloss:0.70281\n",
      "[90]\tvalidation_0-logloss:0.70280\n",
      "[92]\tvalidation_0-logloss:0.70280\n",
      "[94]\tvalidation_0-logloss:0.70281\n",
      "[96]\tvalidation_0-logloss:0.70273\n",
      "[98]\tvalidation_0-logloss:0.70264\n",
      "[100]\tvalidation_0-logloss:0.70262\n",
      "[102]\tvalidation_0-logloss:0.70262\n",
      "[104]\tvalidation_0-logloss:0.70279\n",
      "[106]\tvalidation_0-logloss:0.70289\n",
      "[108]\tvalidation_0-logloss:0.70289\n",
      "[110]\tvalidation_0-logloss:0.70297\n",
      "[112]\tvalidation_0-logloss:0.70301\n",
      "[114]\tvalidation_0-logloss:0.70326\n",
      "[116]\tvalidation_0-logloss:0.70323\n",
      "[118]\tvalidation_0-logloss:0.70336\n",
      "[120]\tvalidation_0-logloss:0.70345\n",
      "[122]\tvalidation_0-logloss:0.70352\n",
      "[124]\tvalidation_0-logloss:0.70358\n",
      "[126]\tvalidation_0-logloss:0.70359\n",
      "[128]\tvalidation_0-logloss:0.70372\n",
      "[130]\tvalidation_0-logloss:0.70386\n",
      "[132]\tvalidation_0-logloss:0.70383\n",
      "[134]\tvalidation_0-logloss:0.70387\n",
      "[136]\tvalidation_0-logloss:0.70403\n",
      "[138]\tvalidation_0-logloss:0.70407\n",
      "[140]\tvalidation_0-logloss:0.70415\n",
      "[142]\tvalidation_0-logloss:0.70423\n",
      "[144]\tvalidation_0-logloss:0.70441\n",
      "[146]\tvalidation_0-logloss:0.70453\n",
      "[148]\tvalidation_0-logloss:0.70465\n",
      "[150]\tvalidation_0-logloss:0.70481\n",
      "[152]\tvalidation_0-logloss:0.70493\n",
      "[154]\tvalidation_0-logloss:0.70502\n",
      "[156]\tvalidation_0-logloss:0.70501\n",
      "[158]\tvalidation_0-logloss:0.70508\n",
      "[160]\tvalidation_0-logloss:0.70523\n",
      "[162]\tvalidation_0-logloss:0.70534\n",
      "[164]\tvalidation_0-logloss:0.70541\n",
      "[166]\tvalidation_0-logloss:0.70547\n",
      "[168]\tvalidation_0-logloss:0.70563\n",
      "[170]\tvalidation_0-logloss:0.70580\n",
      "[172]\tvalidation_0-logloss:0.70594\n",
      "[174]\tvalidation_0-logloss:0.70618\n",
      "[176]\tvalidation_0-logloss:0.70626\n",
      "[178]\tvalidation_0-logloss:0.70627\n",
      "[180]\tvalidation_0-logloss:0.70629\n",
      "[182]\tvalidation_0-logloss:0.70637\n",
      "[184]\tvalidation_0-logloss:0.70650\n",
      "[186]\tvalidation_0-logloss:0.70657\n",
      "[188]\tvalidation_0-logloss:0.70676\n",
      "[190]\tvalidation_0-logloss:0.70689\n",
      "[192]\tvalidation_0-logloss:0.70693\n",
      "[194]\tvalidation_0-logloss:0.70709\n",
      "[196]\tvalidation_0-logloss:0.70716\n",
      "[198]\tvalidation_0-logloss:0.70732\n",
      "[200]\tvalidation_0-logloss:0.70733\n",
      "[202]\tvalidation_0-logloss:0.70746\n",
      "[204]\tvalidation_0-logloss:0.70764\n",
      "[206]\tvalidation_0-logloss:0.70778\n",
      "[208]\tvalidation_0-logloss:0.70794\n",
      "[210]\tvalidation_0-logloss:0.70796\n",
      "[212]\tvalidation_0-logloss:0.70812\n",
      "[214]\tvalidation_0-logloss:0.70824\n",
      "[216]\tvalidation_0-logloss:0.70827\n",
      "[218]\tvalidation_0-logloss:0.70830\n",
      "[220]\tvalidation_0-logloss:0.70849\n",
      "[222]\tvalidation_0-logloss:0.70859\n",
      "[224]\tvalidation_0-logloss:0.70870\n",
      "[226]\tvalidation_0-logloss:0.70878\n",
      "[228]\tvalidation_0-logloss:0.70882\n",
      "[230]\tvalidation_0-logloss:0.70895\n",
      "[232]\tvalidation_0-logloss:0.70889\n",
      "[234]\tvalidation_0-logloss:0.70902\n",
      "[236]\tvalidation_0-logloss:0.70906\n",
      "[238]\tvalidation_0-logloss:0.70912\n",
      "[240]\tvalidation_0-logloss:0.70921\n",
      "[242]\tvalidation_0-logloss:0.70927\n",
      "[244]\tvalidation_0-logloss:0.70940\n",
      "[246]\tvalidation_0-logloss:0.70946\n",
      "[248]\tvalidation_0-logloss:0.70952\n",
      "[249]\tvalidation_0-logloss:0.70957\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 15:48:33,592] Trial 5 finished with value: 0.6953397621061672 and parameters: {'eta': 0.020276727019972293, 'gamma': 0.9411129929491229, 'max_depth': 10, 'min_child_weight': 8, 'lambda': 0.5097500757303542, 'alpha': 0.6110593701101017}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [15:48:38] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69517\n",
      "[2]\tvalidation_0-logloss:0.69702\n",
      "[4]\tvalidation_0-logloss:0.69773\n",
      "[6]\tvalidation_0-logloss:0.69884\n",
      "[8]\tvalidation_0-logloss:0.69914\n",
      "[10]\tvalidation_0-logloss:0.69972\n",
      "[12]\tvalidation_0-logloss:0.70047\n",
      "[14]\tvalidation_0-logloss:0.70082\n",
      "[16]\tvalidation_0-logloss:0.70146\n",
      "[18]\tvalidation_0-logloss:0.70146\n",
      "[20]\tvalidation_0-logloss:0.70162\n",
      "[22]\tvalidation_0-logloss:0.70223\n",
      "[24]\tvalidation_0-logloss:0.70245\n",
      "[26]\tvalidation_0-logloss:0.70341\n",
      "[28]\tvalidation_0-logloss:0.70355\n",
      "[30]\tvalidation_0-logloss:0.70382\n",
      "[32]\tvalidation_0-logloss:0.70454\n",
      "[34]\tvalidation_0-logloss:0.70467\n",
      "[36]\tvalidation_0-logloss:0.70478\n",
      "[38]\tvalidation_0-logloss:0.70494\n",
      "[40]\tvalidation_0-logloss:0.70562\n",
      "[42]\tvalidation_0-logloss:0.70635\n",
      "[44]\tvalidation_0-logloss:0.70629\n",
      "[46]\tvalidation_0-logloss:0.70666\n",
      "[48]\tvalidation_0-logloss:0.70755\n",
      "[50]\tvalidation_0-logloss:0.70733\n",
      "[52]\tvalidation_0-logloss:0.70784\n",
      "[54]\tvalidation_0-logloss:0.70825\n",
      "[56]\tvalidation_0-logloss:0.70878\n",
      "[58]\tvalidation_0-logloss:0.70946\n",
      "[60]\tvalidation_0-logloss:0.71000\n",
      "[62]\tvalidation_0-logloss:0.71007\n",
      "[64]\tvalidation_0-logloss:0.71065\n",
      "[66]\tvalidation_0-logloss:0.71127\n",
      "[68]\tvalidation_0-logloss:0.71225\n",
      "[70]\tvalidation_0-logloss:0.71313\n",
      "[72]\tvalidation_0-logloss:0.71400\n",
      "[74]\tvalidation_0-logloss:0.71449\n",
      "[76]\tvalidation_0-logloss:0.71437\n",
      "[78]\tvalidation_0-logloss:0.71497\n",
      "[80]\tvalidation_0-logloss:0.71529\n",
      "[82]\tvalidation_0-logloss:0.71635\n",
      "[84]\tvalidation_0-logloss:0.71665\n",
      "[86]\tvalidation_0-logloss:0.71723\n",
      "[88]\tvalidation_0-logloss:0.71762\n",
      "[90]\tvalidation_0-logloss:0.71795\n",
      "[92]\tvalidation_0-logloss:0.71803\n",
      "[94]\tvalidation_0-logloss:0.71840\n",
      "[96]\tvalidation_0-logloss:0.71907\n",
      "[98]\tvalidation_0-logloss:0.71927\n",
      "[100]\tvalidation_0-logloss:0.71942\n",
      "[102]\tvalidation_0-logloss:0.71992\n",
      "[104]\tvalidation_0-logloss:0.72000\n",
      "[106]\tvalidation_0-logloss:0.72032\n",
      "[108]\tvalidation_0-logloss:0.72096\n",
      "[110]\tvalidation_0-logloss:0.72159\n",
      "[112]\tvalidation_0-logloss:0.72170\n",
      "[114]\tvalidation_0-logloss:0.72178\n",
      "[116]\tvalidation_0-logloss:0.72228\n",
      "[118]\tvalidation_0-logloss:0.72316\n",
      "[120]\tvalidation_0-logloss:0.72335\n",
      "[122]\tvalidation_0-logloss:0.72351\n",
      "[124]\tvalidation_0-logloss:0.72374\n",
      "[126]\tvalidation_0-logloss:0.72397\n",
      "[128]\tvalidation_0-logloss:0.72433\n",
      "[130]\tvalidation_0-logloss:0.72458\n",
      "[132]\tvalidation_0-logloss:0.72477\n",
      "[134]\tvalidation_0-logloss:0.72552\n",
      "[136]\tvalidation_0-logloss:0.72566\n",
      "[138]\tvalidation_0-logloss:0.72599\n",
      "[140]\tvalidation_0-logloss:0.72637\n",
      "[142]\tvalidation_0-logloss:0.72622\n",
      "[144]\tvalidation_0-logloss:0.72671\n",
      "[146]\tvalidation_0-logloss:0.72662\n",
      "[148]\tvalidation_0-logloss:0.72737\n",
      "[150]\tvalidation_0-logloss:0.72784\n",
      "[152]\tvalidation_0-logloss:0.72811\n",
      "[154]\tvalidation_0-logloss:0.72795\n",
      "[156]\tvalidation_0-logloss:0.72806\n",
      "[158]\tvalidation_0-logloss:0.72827\n",
      "[160]\tvalidation_0-logloss:0.72883\n",
      "[162]\tvalidation_0-logloss:0.72895\n",
      "[164]\tvalidation_0-logloss:0.72929\n",
      "[166]\tvalidation_0-logloss:0.72916\n",
      "[168]\tvalidation_0-logloss:0.72963\n",
      "[170]\tvalidation_0-logloss:0.73003\n",
      "[172]\tvalidation_0-logloss:0.73042\n",
      "[174]\tvalidation_0-logloss:0.73094\n",
      "[176]\tvalidation_0-logloss:0.73115\n",
      "[178]\tvalidation_0-logloss:0.73119\n",
      "[180]\tvalidation_0-logloss:0.73142\n",
      "[182]\tvalidation_0-logloss:0.73149\n",
      "[184]\tvalidation_0-logloss:0.73224\n",
      "[186]\tvalidation_0-logloss:0.73360\n",
      "[188]\tvalidation_0-logloss:0.73409\n",
      "[190]\tvalidation_0-logloss:0.73463\n",
      "[192]\tvalidation_0-logloss:0.73458\n",
      "[194]\tvalidation_0-logloss:0.73517\n",
      "[196]\tvalidation_0-logloss:0.73579\n",
      "[198]\tvalidation_0-logloss:0.73652\n",
      "[200]\tvalidation_0-logloss:0.73660\n",
      "[202]\tvalidation_0-logloss:0.73678\n",
      "[204]\tvalidation_0-logloss:0.73670\n",
      "[206]\tvalidation_0-logloss:0.73693\n",
      "[208]\tvalidation_0-logloss:0.73774\n",
      "[210]\tvalidation_0-logloss:0.73828\n",
      "[212]\tvalidation_0-logloss:0.73849\n",
      "[214]\tvalidation_0-logloss:0.73953\n",
      "[216]\tvalidation_0-logloss:0.73984\n",
      "[218]\tvalidation_0-logloss:0.73957\n",
      "[220]\tvalidation_0-logloss:0.73986\n",
      "[222]\tvalidation_0-logloss:0.74081\n",
      "[224]\tvalidation_0-logloss:0.74102\n",
      "[226]\tvalidation_0-logloss:0.74164\n",
      "[228]\tvalidation_0-logloss:0.74208\n",
      "[230]\tvalidation_0-logloss:0.74237\n",
      "[232]\tvalidation_0-logloss:0.74297\n",
      "[234]\tvalidation_0-logloss:0.74311\n",
      "[236]\tvalidation_0-logloss:0.74315\n",
      "[238]\tvalidation_0-logloss:0.74387\n",
      "[240]\tvalidation_0-logloss:0.74417\n",
      "[242]\tvalidation_0-logloss:0.74459\n",
      "[244]\tvalidation_0-logloss:0.74487\n",
      "[246]\tvalidation_0-logloss:0.74511\n",
      "[248]\tvalidation_0-logloss:0.74524\n",
      "[250]\tvalidation_0-logloss:0.74539\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 15:50:06,852] Trial 6 finished with value: 0.6951744753647187 and parameters: {'eta': 0.09604043457965018, 'gamma': 0.09829770694842155, 'max_depth': 8, 'min_child_weight': 4, 'lambda': 0.31471221937621174, 'alpha': 0.7559584631708474}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [15:50:11] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69527\n",
      "[2]\tvalidation_0-logloss:0.69537\n",
      "[4]\tvalidation_0-logloss:0.69539\n",
      "[6]\tvalidation_0-logloss:0.69566\n",
      "[8]\tvalidation_0-logloss:0.69588\n",
      "[10]\tvalidation_0-logloss:0.69583\n",
      "[12]\tvalidation_0-logloss:0.69570\n",
      "[14]\tvalidation_0-logloss:0.69562\n",
      "[16]\tvalidation_0-logloss:0.69560\n",
      "[18]\tvalidation_0-logloss:0.69551\n",
      "[20]\tvalidation_0-logloss:0.69541\n",
      "[22]\tvalidation_0-logloss:0.69537\n",
      "[24]\tvalidation_0-logloss:0.69536\n",
      "[26]\tvalidation_0-logloss:0.69530\n",
      "[28]\tvalidation_0-logloss:0.69526\n",
      "[30]\tvalidation_0-logloss:0.69513\n",
      "[32]\tvalidation_0-logloss:0.69511\n",
      "[34]\tvalidation_0-logloss:0.69520\n",
      "[36]\tvalidation_0-logloss:0.69523\n",
      "[38]\tvalidation_0-logloss:0.69531\n",
      "[40]\tvalidation_0-logloss:0.69524\n",
      "[42]\tvalidation_0-logloss:0.69531\n",
      "[44]\tvalidation_0-logloss:0.69536\n",
      "[46]\tvalidation_0-logloss:0.69539\n",
      "[48]\tvalidation_0-logloss:0.69533\n",
      "[50]\tvalidation_0-logloss:0.69531\n",
      "[52]\tvalidation_0-logloss:0.69519\n",
      "[54]\tvalidation_0-logloss:0.69526\n",
      "[56]\tvalidation_0-logloss:0.69521\n",
      "[58]\tvalidation_0-logloss:0.69521\n",
      "[60]\tvalidation_0-logloss:0.69533\n",
      "[62]\tvalidation_0-logloss:0.69539\n",
      "[64]\tvalidation_0-logloss:0.69524\n",
      "[66]\tvalidation_0-logloss:0.69517\n",
      "[68]\tvalidation_0-logloss:0.69515\n",
      "[70]\tvalidation_0-logloss:0.69521\n",
      "[72]\tvalidation_0-logloss:0.69518\n",
      "[74]\tvalidation_0-logloss:0.69515\n",
      "[76]\tvalidation_0-logloss:0.69504\n",
      "[78]\tvalidation_0-logloss:0.69505\n",
      "[80]\tvalidation_0-logloss:0.69515\n",
      "[82]\tvalidation_0-logloss:0.69516\n",
      "[84]\tvalidation_0-logloss:0.69516\n",
      "[86]\tvalidation_0-logloss:0.69516\n",
      "[88]\tvalidation_0-logloss:0.69522\n",
      "[90]\tvalidation_0-logloss:0.69527\n",
      "[92]\tvalidation_0-logloss:0.69527\n",
      "[94]\tvalidation_0-logloss:0.69517\n",
      "[96]\tvalidation_0-logloss:0.69508\n",
      "[98]\tvalidation_0-logloss:0.69508\n",
      "[100]\tvalidation_0-logloss:0.69506\n",
      "[102]\tvalidation_0-logloss:0.69502\n",
      "[104]\tvalidation_0-logloss:0.69502\n",
      "[106]\tvalidation_0-logloss:0.69498\n",
      "[108]\tvalidation_0-logloss:0.69507\n",
      "[110]\tvalidation_0-logloss:0.69505\n",
      "[112]\tvalidation_0-logloss:0.69506\n",
      "[114]\tvalidation_0-logloss:0.69508\n",
      "[116]\tvalidation_0-logloss:0.69508\n",
      "[118]\tvalidation_0-logloss:0.69469\n",
      "[120]\tvalidation_0-logloss:0.69474\n",
      "[122]\tvalidation_0-logloss:0.69473\n",
      "[124]\tvalidation_0-logloss:0.69479\n",
      "[126]\tvalidation_0-logloss:0.69485\n",
      "[128]\tvalidation_0-logloss:0.69489\n",
      "[130]\tvalidation_0-logloss:0.69495\n",
      "[132]\tvalidation_0-logloss:0.69484\n",
      "[134]\tvalidation_0-logloss:0.69487\n",
      "[136]\tvalidation_0-logloss:0.69490\n",
      "[138]\tvalidation_0-logloss:0.69496\n",
      "[140]\tvalidation_0-logloss:0.69503\n",
      "[142]\tvalidation_0-logloss:0.69502\n",
      "[144]\tvalidation_0-logloss:0.69506\n",
      "[146]\tvalidation_0-logloss:0.69512\n",
      "[148]\tvalidation_0-logloss:0.69513\n",
      "[150]\tvalidation_0-logloss:0.69526\n",
      "[152]\tvalidation_0-logloss:0.69529\n",
      "[154]\tvalidation_0-logloss:0.69528\n",
      "[156]\tvalidation_0-logloss:0.69531\n",
      "[158]\tvalidation_0-logloss:0.69552\n",
      "[160]\tvalidation_0-logloss:0.69562\n",
      "[162]\tvalidation_0-logloss:0.69558\n",
      "[164]\tvalidation_0-logloss:0.69563\n",
      "[166]\tvalidation_0-logloss:0.69570\n",
      "[168]\tvalidation_0-logloss:0.69574\n",
      "[170]\tvalidation_0-logloss:0.69577\n",
      "[172]\tvalidation_0-logloss:0.69581\n",
      "[174]\tvalidation_0-logloss:0.69576\n",
      "[176]\tvalidation_0-logloss:0.69581\n",
      "[178]\tvalidation_0-logloss:0.69617\n",
      "[180]\tvalidation_0-logloss:0.69607\n",
      "[182]\tvalidation_0-logloss:0.69607\n",
      "[184]\tvalidation_0-logloss:0.69625\n",
      "[186]\tvalidation_0-logloss:0.69631\n",
      "[188]\tvalidation_0-logloss:0.69636\n",
      "[190]\tvalidation_0-logloss:0.69644\n",
      "[192]\tvalidation_0-logloss:0.69651\n",
      "[194]\tvalidation_0-logloss:0.69649\n",
      "[196]\tvalidation_0-logloss:0.69646\n",
      "[198]\tvalidation_0-logloss:0.69643\n",
      "[200]\tvalidation_0-logloss:0.69635\n",
      "[202]\tvalidation_0-logloss:0.69633\n",
      "[204]\tvalidation_0-logloss:0.69626\n",
      "[206]\tvalidation_0-logloss:0.69628\n",
      "[208]\tvalidation_0-logloss:0.69629\n",
      "[210]\tvalidation_0-logloss:0.69624\n",
      "[212]\tvalidation_0-logloss:0.69629\n",
      "[214]\tvalidation_0-logloss:0.69632\n",
      "[216]\tvalidation_0-logloss:0.69637\n",
      "[218]\tvalidation_0-logloss:0.69636\n",
      "[220]\tvalidation_0-logloss:0.69631\n",
      "[222]\tvalidation_0-logloss:0.69628\n",
      "[224]\tvalidation_0-logloss:0.69621\n",
      "[226]\tvalidation_0-logloss:0.69626\n",
      "[228]\tvalidation_0-logloss:0.69623\n",
      "[230]\tvalidation_0-logloss:0.69622\n",
      "[232]\tvalidation_0-logloss:0.69623\n",
      "[234]\tvalidation_0-logloss:0.69630\n",
      "[236]\tvalidation_0-logloss:0.69626\n",
      "[238]\tvalidation_0-logloss:0.69644\n",
      "[240]\tvalidation_0-logloss:0.69648\n",
      "[242]\tvalidation_0-logloss:0.69647\n",
      "[244]\tvalidation_0-logloss:0.69648\n",
      "[246]\tvalidation_0-logloss:0.69657\n",
      "[248]\tvalidation_0-logloss:0.69661\n",
      "[250]\tvalidation_0-logloss:0.69649\n",
      "[252]\tvalidation_0-logloss:0.69649\n",
      "[254]\tvalidation_0-logloss:0.69650\n",
      "[256]\tvalidation_0-logloss:0.69648\n",
      "[258]\tvalidation_0-logloss:0.69649\n",
      "[260]\tvalidation_0-logloss:0.69650\n",
      "[262]\tvalidation_0-logloss:0.69653\n",
      "[264]\tvalidation_0-logloss:0.69680\n",
      "[266]\tvalidation_0-logloss:0.69682\n",
      "[268]\tvalidation_0-logloss:0.69676\n",
      "[270]\tvalidation_0-logloss:0.69684\n",
      "[272]\tvalidation_0-logloss:0.69689\n",
      "[274]\tvalidation_0-logloss:0.69704\n",
      "[276]\tvalidation_0-logloss:0.69710\n",
      "[278]\tvalidation_0-logloss:0.69711\n",
      "[280]\tvalidation_0-logloss:0.69714\n",
      "[282]\tvalidation_0-logloss:0.69715\n",
      "[284]\tvalidation_0-logloss:0.69740\n",
      "[286]\tvalidation_0-logloss:0.69742\n",
      "[288]\tvalidation_0-logloss:0.69744\n",
      "[290]\tvalidation_0-logloss:0.69750\n",
      "[292]\tvalidation_0-logloss:0.69756\n",
      "[294]\tvalidation_0-logloss:0.69761\n",
      "[296]\tvalidation_0-logloss:0.69760\n",
      "[298]\tvalidation_0-logloss:0.69766\n",
      "[300]\tvalidation_0-logloss:0.69763\n",
      "[302]\tvalidation_0-logloss:0.69761\n",
      "[304]\tvalidation_0-logloss:0.69763\n",
      "[306]\tvalidation_0-logloss:0.69774\n",
      "[308]\tvalidation_0-logloss:0.69774\n",
      "[310]\tvalidation_0-logloss:0.69775\n",
      "[312]\tvalidation_0-logloss:0.69774\n",
      "[314]\tvalidation_0-logloss:0.69780\n",
      "[316]\tvalidation_0-logloss:0.69801\n",
      "[318]\tvalidation_0-logloss:0.69803\n",
      "[320]\tvalidation_0-logloss:0.69809\n",
      "[322]\tvalidation_0-logloss:0.69813\n",
      "[324]\tvalidation_0-logloss:0.69812\n",
      "[326]\tvalidation_0-logloss:0.69811\n",
      "[328]\tvalidation_0-logloss:0.69803\n",
      "[330]\tvalidation_0-logloss:0.69797\n",
      "[332]\tvalidation_0-logloss:0.69804\n",
      "[334]\tvalidation_0-logloss:0.69807\n",
      "[336]\tvalidation_0-logloss:0.69808\n",
      "[338]\tvalidation_0-logloss:0.69817\n",
      "[340]\tvalidation_0-logloss:0.69813\n",
      "[342]\tvalidation_0-logloss:0.69827\n",
      "[344]\tvalidation_0-logloss:0.69833\n",
      "[346]\tvalidation_0-logloss:0.69845\n",
      "[348]\tvalidation_0-logloss:0.69850\n",
      "[350]\tvalidation_0-logloss:0.69854\n",
      "[352]\tvalidation_0-logloss:0.69850\n",
      "[354]\tvalidation_0-logloss:0.69852\n",
      "[356]\tvalidation_0-logloss:0.69847\n",
      "[358]\tvalidation_0-logloss:0.69862\n",
      "[360]\tvalidation_0-logloss:0.69863\n",
      "[362]\tvalidation_0-logloss:0.69855\n",
      "[364]\tvalidation_0-logloss:0.69859\n",
      "[366]\tvalidation_0-logloss:0.69857\n",
      "[368]\tvalidation_0-logloss:0.69855\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 15:51:52,041] Trial 7 finished with value: 0.6946935481693739 and parameters: {'eta': 0.033183183003900586, 'gamma': 0.3131416838289698, 'max_depth': 4, 'min_child_weight': 8, 'lambda': 0.9454714686407361, 'alpha': 0.963486066478339}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [15:51:56] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69532\n",
      "[2]\tvalidation_0-logloss:0.69589\n",
      "[4]\tvalidation_0-logloss:0.69668\n",
      "[6]\tvalidation_0-logloss:0.69744\n",
      "[8]\tvalidation_0-logloss:0.69815\n",
      "[10]\tvalidation_0-logloss:0.69878\n",
      "[12]\tvalidation_0-logloss:0.69930\n",
      "[14]\tvalidation_0-logloss:0.69961\n",
      "[16]\tvalidation_0-logloss:0.69963\n",
      "[18]\tvalidation_0-logloss:0.69970\n",
      "[20]\tvalidation_0-logloss:0.69982\n",
      "[22]\tvalidation_0-logloss:0.70035\n",
      "[24]\tvalidation_0-logloss:0.70071\n",
      "[26]\tvalidation_0-logloss:0.70079\n",
      "[28]\tvalidation_0-logloss:0.70085\n",
      "[30]\tvalidation_0-logloss:0.70093\n",
      "[32]\tvalidation_0-logloss:0.70113\n",
      "[34]\tvalidation_0-logloss:0.70141\n",
      "[36]\tvalidation_0-logloss:0.70182\n",
      "[38]\tvalidation_0-logloss:0.70206\n",
      "[40]\tvalidation_0-logloss:0.70211\n",
      "[42]\tvalidation_0-logloss:0.70230\n",
      "[44]\tvalidation_0-logloss:0.70241\n",
      "[46]\tvalidation_0-logloss:0.70263\n",
      "[48]\tvalidation_0-logloss:0.70262\n",
      "[50]\tvalidation_0-logloss:0.70271\n",
      "[52]\tvalidation_0-logloss:0.70300\n",
      "[54]\tvalidation_0-logloss:0.70302\n",
      "[56]\tvalidation_0-logloss:0.70327\n",
      "[58]\tvalidation_0-logloss:0.70334\n",
      "[60]\tvalidation_0-logloss:0.70362\n",
      "[62]\tvalidation_0-logloss:0.70371\n",
      "[64]\tvalidation_0-logloss:0.70418\n",
      "[66]\tvalidation_0-logloss:0.70432\n",
      "[68]\tvalidation_0-logloss:0.70435\n",
      "[70]\tvalidation_0-logloss:0.70459\n",
      "[72]\tvalidation_0-logloss:0.70476\n",
      "[74]\tvalidation_0-logloss:0.70475\n",
      "[76]\tvalidation_0-logloss:0.70488\n",
      "[78]\tvalidation_0-logloss:0.70523\n",
      "[80]\tvalidation_0-logloss:0.70524\n",
      "[82]\tvalidation_0-logloss:0.70543\n",
      "[84]\tvalidation_0-logloss:0.70584\n",
      "[86]\tvalidation_0-logloss:0.70609\n",
      "[88]\tvalidation_0-logloss:0.70612\n",
      "[90]\tvalidation_0-logloss:0.70615\n",
      "[92]\tvalidation_0-logloss:0.70618\n",
      "[94]\tvalidation_0-logloss:0.70628\n",
      "[96]\tvalidation_0-logloss:0.70609\n",
      "[98]\tvalidation_0-logloss:0.70659\n",
      "[100]\tvalidation_0-logloss:0.70667\n",
      "[102]\tvalidation_0-logloss:0.70683\n",
      "[104]\tvalidation_0-logloss:0.70723\n",
      "[106]\tvalidation_0-logloss:0.70730\n",
      "[108]\tvalidation_0-logloss:0.70723\n",
      "[110]\tvalidation_0-logloss:0.70738\n",
      "[112]\tvalidation_0-logloss:0.70757\n",
      "[114]\tvalidation_0-logloss:0.70768\n",
      "[116]\tvalidation_0-logloss:0.70785\n",
      "[118]\tvalidation_0-logloss:0.70781\n",
      "[120]\tvalidation_0-logloss:0.70816\n",
      "[122]\tvalidation_0-logloss:0.70819\n",
      "[124]\tvalidation_0-logloss:0.70834\n",
      "[126]\tvalidation_0-logloss:0.70852\n",
      "[128]\tvalidation_0-logloss:0.70867\n",
      "[130]\tvalidation_0-logloss:0.70918\n",
      "[132]\tvalidation_0-logloss:0.70934\n",
      "[134]\tvalidation_0-logloss:0.70930\n",
      "[136]\tvalidation_0-logloss:0.70962\n",
      "[138]\tvalidation_0-logloss:0.70972\n",
      "[140]\tvalidation_0-logloss:0.70973\n",
      "[142]\tvalidation_0-logloss:0.70989\n",
      "[144]\tvalidation_0-logloss:0.71003\n",
      "[146]\tvalidation_0-logloss:0.71003\n",
      "[148]\tvalidation_0-logloss:0.71005\n",
      "[150]\tvalidation_0-logloss:0.71012\n",
      "[152]\tvalidation_0-logloss:0.71032\n",
      "[154]\tvalidation_0-logloss:0.71035\n",
      "[156]\tvalidation_0-logloss:0.71047\n",
      "[158]\tvalidation_0-logloss:0.71065\n",
      "[160]\tvalidation_0-logloss:0.71082\n",
      "[162]\tvalidation_0-logloss:0.71083\n",
      "[164]\tvalidation_0-logloss:0.71092\n",
      "[166]\tvalidation_0-logloss:0.71115\n",
      "[168]\tvalidation_0-logloss:0.71126\n",
      "[170]\tvalidation_0-logloss:0.71135\n",
      "[172]\tvalidation_0-logloss:0.71147\n",
      "[174]\tvalidation_0-logloss:0.71156\n",
      "[176]\tvalidation_0-logloss:0.71163\n",
      "[178]\tvalidation_0-logloss:0.71169\n",
      "[180]\tvalidation_0-logloss:0.71200\n",
      "[182]\tvalidation_0-logloss:0.71209\n",
      "[184]\tvalidation_0-logloss:0.71226\n",
      "[186]\tvalidation_0-logloss:0.71230\n",
      "[188]\tvalidation_0-logloss:0.71234\n",
      "[190]\tvalidation_0-logloss:0.71281\n",
      "[192]\tvalidation_0-logloss:0.71301\n",
      "[194]\tvalidation_0-logloss:0.71308\n",
      "[196]\tvalidation_0-logloss:0.71309\n",
      "[198]\tvalidation_0-logloss:0.71335\n",
      "[200]\tvalidation_0-logloss:0.71336\n",
      "[202]\tvalidation_0-logloss:0.71358\n",
      "[204]\tvalidation_0-logloss:0.71365\n",
      "[206]\tvalidation_0-logloss:0.71377\n",
      "[208]\tvalidation_0-logloss:0.71382\n",
      "[210]\tvalidation_0-logloss:0.71386\n",
      "[212]\tvalidation_0-logloss:0.71398\n",
      "[214]\tvalidation_0-logloss:0.71406\n",
      "[216]\tvalidation_0-logloss:0.71427\n",
      "[218]\tvalidation_0-logloss:0.71422\n",
      "[220]\tvalidation_0-logloss:0.71434\n",
      "[222]\tvalidation_0-logloss:0.71468\n",
      "[224]\tvalidation_0-logloss:0.71500\n",
      "[226]\tvalidation_0-logloss:0.71548\n",
      "[228]\tvalidation_0-logloss:0.71555\n",
      "[230]\tvalidation_0-logloss:0.71567\n",
      "[232]\tvalidation_0-logloss:0.71572\n",
      "[234]\tvalidation_0-logloss:0.71573\n",
      "[236]\tvalidation_0-logloss:0.71598\n",
      "[238]\tvalidation_0-logloss:0.71610\n",
      "[240]\tvalidation_0-logloss:0.71621\n",
      "[242]\tvalidation_0-logloss:0.71623\n",
      "[244]\tvalidation_0-logloss:0.71631\n",
      "[246]\tvalidation_0-logloss:0.71638\n",
      "[248]\tvalidation_0-logloss:0.71647\n",
      "[250]\tvalidation_0-logloss:0.71682\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 15:53:55,032] Trial 8 finished with value: 0.695323394139649 and parameters: {'eta': 0.029284616799527353, 'gamma': 0.33018304105387664, 'max_depth': 10, 'min_child_weight': 1, 'lambda': 0.44384361496360036, 'alpha': 0.27711320052799726}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [15:53:59] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69545\n",
      "[2]\tvalidation_0-logloss:0.69534\n",
      "[4]\tvalidation_0-logloss:0.69511\n",
      "[6]\tvalidation_0-logloss:0.69521\n",
      "[8]\tvalidation_0-logloss:0.69464\n",
      "[10]\tvalidation_0-logloss:0.69453\n",
      "[12]\tvalidation_0-logloss:0.69463\n",
      "[14]\tvalidation_0-logloss:0.69355\n",
      "[16]\tvalidation_0-logloss:0.69372\n",
      "[18]\tvalidation_0-logloss:0.69394\n",
      "[20]\tvalidation_0-logloss:0.69429\n",
      "[22]\tvalidation_0-logloss:0.69464\n",
      "[24]\tvalidation_0-logloss:0.69473\n",
      "[26]\tvalidation_0-logloss:0.69476\n",
      "[28]\tvalidation_0-logloss:0.69480\n",
      "[30]\tvalidation_0-logloss:0.69533\n",
      "[32]\tvalidation_0-logloss:0.69520\n",
      "[34]\tvalidation_0-logloss:0.69496\n",
      "[36]\tvalidation_0-logloss:0.69480\n",
      "[38]\tvalidation_0-logloss:0.69521\n",
      "[40]\tvalidation_0-logloss:0.69537\n",
      "[42]\tvalidation_0-logloss:0.69568\n",
      "[44]\tvalidation_0-logloss:0.69550\n",
      "[46]\tvalidation_0-logloss:0.69556\n",
      "[48]\tvalidation_0-logloss:0.69555\n",
      "[50]\tvalidation_0-logloss:0.69552\n",
      "[52]\tvalidation_0-logloss:0.69553\n",
      "[54]\tvalidation_0-logloss:0.69550\n",
      "[56]\tvalidation_0-logloss:0.69593\n",
      "[58]\tvalidation_0-logloss:0.69600\n",
      "[60]\tvalidation_0-logloss:0.69628\n",
      "[62]\tvalidation_0-logloss:0.69593\n",
      "[64]\tvalidation_0-logloss:0.69555\n",
      "[66]\tvalidation_0-logloss:0.69601\n",
      "[68]\tvalidation_0-logloss:0.69624\n",
      "[70]\tvalidation_0-logloss:0.69666\n",
      "[72]\tvalidation_0-logloss:0.69682\n",
      "[74]\tvalidation_0-logloss:0.69713\n",
      "[76]\tvalidation_0-logloss:0.69779\n",
      "[78]\tvalidation_0-logloss:0.69777\n",
      "[80]\tvalidation_0-logloss:0.69797\n",
      "[82]\tvalidation_0-logloss:0.69807\n",
      "[84]\tvalidation_0-logloss:0.69809\n",
      "[86]\tvalidation_0-logloss:0.69834\n",
      "[88]\tvalidation_0-logloss:0.69855\n",
      "[90]\tvalidation_0-logloss:0.69862\n",
      "[92]\tvalidation_0-logloss:0.69850\n",
      "[94]\tvalidation_0-logloss:0.69853\n",
      "[96]\tvalidation_0-logloss:0.69871\n",
      "[98]\tvalidation_0-logloss:0.69882\n",
      "[100]\tvalidation_0-logloss:0.69875\n",
      "[102]\tvalidation_0-logloss:0.69874\n",
      "[104]\tvalidation_0-logloss:0.69869\n",
      "[106]\tvalidation_0-logloss:0.69879\n",
      "[108]\tvalidation_0-logloss:0.70006\n",
      "[110]\tvalidation_0-logloss:0.70007\n",
      "[112]\tvalidation_0-logloss:0.70016\n",
      "[114]\tvalidation_0-logloss:0.70016\n",
      "[116]\tvalidation_0-logloss:0.70059\n",
      "[118]\tvalidation_0-logloss:0.70053\n",
      "[120]\tvalidation_0-logloss:0.70181\n",
      "[122]\tvalidation_0-logloss:0.70145\n",
      "[124]\tvalidation_0-logloss:0.70159\n",
      "[126]\tvalidation_0-logloss:0.70147\n",
      "[128]\tvalidation_0-logloss:0.70155\n",
      "[130]\tvalidation_0-logloss:0.70164\n",
      "[132]\tvalidation_0-logloss:0.70229\n",
      "[134]\tvalidation_0-logloss:0.70235\n",
      "[136]\tvalidation_0-logloss:0.70233\n",
      "[138]\tvalidation_0-logloss:0.70291\n",
      "[140]\tvalidation_0-logloss:0.70308\n",
      "[142]\tvalidation_0-logloss:0.70304\n",
      "[144]\tvalidation_0-logloss:0.70300\n",
      "[146]\tvalidation_0-logloss:0.70275\n",
      "[148]\tvalidation_0-logloss:0.70293\n",
      "[150]\tvalidation_0-logloss:0.70329\n",
      "[152]\tvalidation_0-logloss:0.70324\n",
      "[154]\tvalidation_0-logloss:0.70319\n",
      "[156]\tvalidation_0-logloss:0.70325\n",
      "[158]\tvalidation_0-logloss:0.70336\n",
      "[160]\tvalidation_0-logloss:0.70355\n",
      "[162]\tvalidation_0-logloss:0.70362\n",
      "[164]\tvalidation_0-logloss:0.70348\n",
      "[166]\tvalidation_0-logloss:0.70363\n",
      "[168]\tvalidation_0-logloss:0.70351\n",
      "[170]\tvalidation_0-logloss:0.70364\n",
      "[172]\tvalidation_0-logloss:0.70379\n",
      "[174]\tvalidation_0-logloss:0.70373\n",
      "[176]\tvalidation_0-logloss:0.70415\n",
      "[178]\tvalidation_0-logloss:0.70442\n",
      "[180]\tvalidation_0-logloss:0.70429\n",
      "[182]\tvalidation_0-logloss:0.70452\n",
      "[184]\tvalidation_0-logloss:0.70455\n",
      "[186]\tvalidation_0-logloss:0.70462\n",
      "[188]\tvalidation_0-logloss:0.70486\n",
      "[190]\tvalidation_0-logloss:0.70456\n",
      "[192]\tvalidation_0-logloss:0.70486\n",
      "[194]\tvalidation_0-logloss:0.70541\n",
      "[196]\tvalidation_0-logloss:0.70513\n",
      "[198]\tvalidation_0-logloss:0.70562\n",
      "[200]\tvalidation_0-logloss:0.70554\n",
      "[202]\tvalidation_0-logloss:0.70560\n",
      "[204]\tvalidation_0-logloss:0.70547\n",
      "[206]\tvalidation_0-logloss:0.70600\n",
      "[208]\tvalidation_0-logloss:0.70640\n",
      "[210]\tvalidation_0-logloss:0.70614\n",
      "[212]\tvalidation_0-logloss:0.70616\n",
      "[214]\tvalidation_0-logloss:0.70606\n",
      "[216]\tvalidation_0-logloss:0.70594\n",
      "[218]\tvalidation_0-logloss:0.70594\n",
      "[220]\tvalidation_0-logloss:0.70596\n",
      "[222]\tvalidation_0-logloss:0.70611\n",
      "[224]\tvalidation_0-logloss:0.70649\n",
      "[226]\tvalidation_0-logloss:0.70653\n",
      "[228]\tvalidation_0-logloss:0.70684\n",
      "[230]\tvalidation_0-logloss:0.70692\n",
      "[232]\tvalidation_0-logloss:0.70863\n",
      "[234]\tvalidation_0-logloss:0.70887\n",
      "[236]\tvalidation_0-logloss:0.70891\n",
      "[238]\tvalidation_0-logloss:0.70866\n",
      "[240]\tvalidation_0-logloss:0.70864\n",
      "[242]\tvalidation_0-logloss:0.70856\n",
      "[244]\tvalidation_0-logloss:0.70866\n",
      "[246]\tvalidation_0-logloss:0.70886\n",
      "[248]\tvalidation_0-logloss:0.70887\n",
      "[250]\tvalidation_0-logloss:0.70881\n",
      "[252]\tvalidation_0-logloss:0.70848\n",
      "[254]\tvalidation_0-logloss:0.70834\n",
      "[256]\tvalidation_0-logloss:0.70861\n",
      "[258]\tvalidation_0-logloss:0.70877\n",
      "[260]\tvalidation_0-logloss:0.70912\n",
      "[262]\tvalidation_0-logloss:0.70922\n",
      "[264]\tvalidation_0-logloss:0.70945\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 15:55:08,473] Trial 9 finished with value: 0.6935511066421244 and parameters: {'eta': 0.14819833427943227, 'gamma': 0.26417629239259743, 'max_depth': 3, 'min_child_weight': 0, 'lambda': 0.23860855138520853, 'alpha': 0.790887102813196}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [15:55:13] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69514\n",
      "[2]\tvalidation_0-logloss:0.69489\n",
      "[4]\tvalidation_0-logloss:0.69536\n",
      "[6]\tvalidation_0-logloss:0.69554\n",
      "[8]\tvalidation_0-logloss:0.69619\n",
      "[10]\tvalidation_0-logloss:0.69681\n",
      "[12]\tvalidation_0-logloss:0.69584\n",
      "[14]\tvalidation_0-logloss:0.69556\n",
      "[16]\tvalidation_0-logloss:0.69548\n",
      "[18]\tvalidation_0-logloss:0.69569\n",
      "[20]\tvalidation_0-logloss:0.69575\n",
      "[22]\tvalidation_0-logloss:0.69565\n",
      "[24]\tvalidation_0-logloss:0.69546\n",
      "[26]\tvalidation_0-logloss:0.69534\n",
      "[28]\tvalidation_0-logloss:0.69544\n",
      "[30]\tvalidation_0-logloss:0.69549\n",
      "[32]\tvalidation_0-logloss:0.69516\n",
      "[34]\tvalidation_0-logloss:0.69580\n",
      "[36]\tvalidation_0-logloss:0.69572\n",
      "[38]\tvalidation_0-logloss:0.69603\n",
      "[40]\tvalidation_0-logloss:0.69605\n",
      "[42]\tvalidation_0-logloss:0.69634\n",
      "[44]\tvalidation_0-logloss:0.69609\n",
      "[46]\tvalidation_0-logloss:0.69613\n",
      "[48]\tvalidation_0-logloss:0.69652\n",
      "[50]\tvalidation_0-logloss:0.69649\n",
      "[52]\tvalidation_0-logloss:0.69668\n",
      "[54]\tvalidation_0-logloss:0.69651\n",
      "[56]\tvalidation_0-logloss:0.69670\n",
      "[58]\tvalidation_0-logloss:0.69678\n",
      "[60]\tvalidation_0-logloss:0.69690\n",
      "[62]\tvalidation_0-logloss:0.69614\n",
      "[64]\tvalidation_0-logloss:0.69661\n",
      "[66]\tvalidation_0-logloss:0.69638\n",
      "[68]\tvalidation_0-logloss:0.69687\n",
      "[70]\tvalidation_0-logloss:0.69689\n",
      "[72]\tvalidation_0-logloss:0.69660\n",
      "[74]\tvalidation_0-logloss:0.69674\n",
      "[76]\tvalidation_0-logloss:0.69668\n",
      "[78]\tvalidation_0-logloss:0.69687\n",
      "[80]\tvalidation_0-logloss:0.69641\n",
      "[82]\tvalidation_0-logloss:0.69643\n",
      "[84]\tvalidation_0-logloss:0.69637\n",
      "[86]\tvalidation_0-logloss:0.69618\n",
      "[88]\tvalidation_0-logloss:0.69619\n",
      "[90]\tvalidation_0-logloss:0.69646\n",
      "[92]\tvalidation_0-logloss:0.69646\n",
      "[94]\tvalidation_0-logloss:0.69644\n",
      "[96]\tvalidation_0-logloss:0.69640\n",
      "[98]\tvalidation_0-logloss:0.69656\n",
      "[100]\tvalidation_0-logloss:0.69665\n",
      "[102]\tvalidation_0-logloss:0.69666\n",
      "[104]\tvalidation_0-logloss:0.69667\n",
      "[106]\tvalidation_0-logloss:0.69668\n",
      "[108]\tvalidation_0-logloss:0.69675\n",
      "[110]\tvalidation_0-logloss:0.69682\n",
      "[112]\tvalidation_0-logloss:0.69682\n",
      "[114]\tvalidation_0-logloss:0.69685\n",
      "[116]\tvalidation_0-logloss:0.69694\n",
      "[118]\tvalidation_0-logloss:0.69708\n",
      "[120]\tvalidation_0-logloss:0.69674\n",
      "[122]\tvalidation_0-logloss:0.69706\n",
      "[124]\tvalidation_0-logloss:0.69718\n",
      "[126]\tvalidation_0-logloss:0.69689\n",
      "[128]\tvalidation_0-logloss:0.69688\n",
      "[130]\tvalidation_0-logloss:0.69691\n",
      "[132]\tvalidation_0-logloss:0.69681\n",
      "[134]\tvalidation_0-logloss:0.69689\n",
      "[136]\tvalidation_0-logloss:0.69681\n",
      "[138]\tvalidation_0-logloss:0.69691\n",
      "[140]\tvalidation_0-logloss:0.69687\n",
      "[142]\tvalidation_0-logloss:0.69636\n",
      "[144]\tvalidation_0-logloss:0.69652\n",
      "[146]\tvalidation_0-logloss:0.69659\n",
      "[148]\tvalidation_0-logloss:0.69687\n",
      "[150]\tvalidation_0-logloss:0.69676\n",
      "[152]\tvalidation_0-logloss:0.69688\n",
      "[154]\tvalidation_0-logloss:0.69677\n",
      "[156]\tvalidation_0-logloss:0.69679\n",
      "[158]\tvalidation_0-logloss:0.69685\n",
      "[160]\tvalidation_0-logloss:0.69704\n",
      "[162]\tvalidation_0-logloss:0.69681\n",
      "[164]\tvalidation_0-logloss:0.69706\n",
      "[166]\tvalidation_0-logloss:0.69675\n",
      "[168]\tvalidation_0-logloss:0.69673\n",
      "[170]\tvalidation_0-logloss:0.69682\n",
      "[172]\tvalidation_0-logloss:0.69687\n",
      "[174]\tvalidation_0-logloss:0.69689\n",
      "[176]\tvalidation_0-logloss:0.69692\n",
      "[178]\tvalidation_0-logloss:0.69698\n",
      "[180]\tvalidation_0-logloss:0.69692\n",
      "[182]\tvalidation_0-logloss:0.69689\n",
      "[184]\tvalidation_0-logloss:0.69674\n",
      "[186]\tvalidation_0-logloss:0.69671\n",
      "[188]\tvalidation_0-logloss:0.69698\n",
      "[190]\tvalidation_0-logloss:0.69871\n",
      "[192]\tvalidation_0-logloss:0.69877\n",
      "[194]\tvalidation_0-logloss:0.69876\n",
      "[196]\tvalidation_0-logloss:0.69869\n",
      "[198]\tvalidation_0-logloss:0.69880\n",
      "[200]\tvalidation_0-logloss:0.69893\n",
      "[202]\tvalidation_0-logloss:0.69904\n",
      "[204]\tvalidation_0-logloss:0.69876\n",
      "[206]\tvalidation_0-logloss:0.69870\n",
      "[208]\tvalidation_0-logloss:0.69871\n",
      "[210]\tvalidation_0-logloss:0.69877\n",
      "[212]\tvalidation_0-logloss:0.69829\n",
      "[214]\tvalidation_0-logloss:0.69838\n",
      "[216]\tvalidation_0-logloss:0.69823\n",
      "[218]\tvalidation_0-logloss:0.69826\n",
      "[220]\tvalidation_0-logloss:0.69855\n",
      "[222]\tvalidation_0-logloss:0.69835\n",
      "[224]\tvalidation_0-logloss:0.69833\n",
      "[226]\tvalidation_0-logloss:0.69816\n",
      "[228]\tvalidation_0-logloss:0.69813\n",
      "[230]\tvalidation_0-logloss:0.69811\n",
      "[232]\tvalidation_0-logloss:0.69822\n",
      "[234]\tvalidation_0-logloss:0.69848\n",
      "[236]\tvalidation_0-logloss:0.69803\n",
      "[238]\tvalidation_0-logloss:0.69805\n",
      "[240]\tvalidation_0-logloss:0.69817\n",
      "[242]\tvalidation_0-logloss:0.69825\n",
      "[244]\tvalidation_0-logloss:0.69827\n",
      "[246]\tvalidation_0-logloss:0.69812\n",
      "[248]\tvalidation_0-logloss:0.69814\n",
      "[250]\tvalidation_0-logloss:0.69815\n",
      "[251]\tvalidation_0-logloss:0.69815\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 15:56:09,199] Trial 10 finished with value: 0.6948897413625124 and parameters: {'eta': 0.29717263201129784, 'gamma': 0.5976262023033, 'max_depth': 1, 'min_child_weight': 2, 'lambda': 0.10167538251108676, 'alpha': 0.012023243004509188}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [15:56:13] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69527\n",
      "[2]\tvalidation_0-logloss:0.69460\n",
      "[4]\tvalidation_0-logloss:0.69456\n",
      "[6]\tvalidation_0-logloss:0.69531\n",
      "[8]\tvalidation_0-logloss:0.69484\n",
      "[10]\tvalidation_0-logloss:0.69547\n",
      "[12]\tvalidation_0-logloss:0.69538\n",
      "[14]\tvalidation_0-logloss:0.69518\n",
      "[16]\tvalidation_0-logloss:0.69537\n",
      "[18]\tvalidation_0-logloss:0.69545\n",
      "[20]\tvalidation_0-logloss:0.69602\n",
      "[22]\tvalidation_0-logloss:0.69629\n",
      "[24]\tvalidation_0-logloss:0.69692\n",
      "[26]\tvalidation_0-logloss:0.69719\n",
      "[28]\tvalidation_0-logloss:0.69655\n",
      "[30]\tvalidation_0-logloss:0.69673\n",
      "[32]\tvalidation_0-logloss:0.69773\n",
      "[34]\tvalidation_0-logloss:0.69756\n",
      "[36]\tvalidation_0-logloss:0.69759\n",
      "[38]\tvalidation_0-logloss:0.69735\n",
      "[40]\tvalidation_0-logloss:0.69747\n",
      "[42]\tvalidation_0-logloss:0.69755\n",
      "[44]\tvalidation_0-logloss:0.69807\n",
      "[46]\tvalidation_0-logloss:0.69816\n",
      "[48]\tvalidation_0-logloss:0.69814\n",
      "[50]\tvalidation_0-logloss:0.69809\n",
      "[52]\tvalidation_0-logloss:0.69856\n",
      "[54]\tvalidation_0-logloss:0.69844\n",
      "[56]\tvalidation_0-logloss:0.69938\n",
      "[58]\tvalidation_0-logloss:0.69956\n",
      "[60]\tvalidation_0-logloss:0.69962\n",
      "[62]\tvalidation_0-logloss:0.69974\n",
      "[64]\tvalidation_0-logloss:0.69976\n",
      "[66]\tvalidation_0-logloss:0.69989\n",
      "[68]\tvalidation_0-logloss:0.69981\n",
      "[70]\tvalidation_0-logloss:0.69954\n",
      "[72]\tvalidation_0-logloss:0.69954\n",
      "[74]\tvalidation_0-logloss:0.69972\n",
      "[76]\tvalidation_0-logloss:0.69985\n",
      "[78]\tvalidation_0-logloss:0.70022\n",
      "[80]\tvalidation_0-logloss:0.70025\n",
      "[82]\tvalidation_0-logloss:0.70027\n",
      "[84]\tvalidation_0-logloss:0.70073\n",
      "[86]\tvalidation_0-logloss:0.70062\n",
      "[88]\tvalidation_0-logloss:0.70080\n",
      "[90]\tvalidation_0-logloss:0.70089\n",
      "[92]\tvalidation_0-logloss:0.70105\n",
      "[94]\tvalidation_0-logloss:0.70119\n",
      "[96]\tvalidation_0-logloss:0.70186\n",
      "[98]\tvalidation_0-logloss:0.70155\n",
      "[100]\tvalidation_0-logloss:0.70147\n",
      "[102]\tvalidation_0-logloss:0.70147\n",
      "[104]\tvalidation_0-logloss:0.70149\n",
      "[106]\tvalidation_0-logloss:0.70157\n",
      "[108]\tvalidation_0-logloss:0.70144\n",
      "[110]\tvalidation_0-logloss:0.70144\n",
      "[112]\tvalidation_0-logloss:0.70206\n",
      "[114]\tvalidation_0-logloss:0.70211\n",
      "[116]\tvalidation_0-logloss:0.70214\n",
      "[118]\tvalidation_0-logloss:0.70190\n",
      "[120]\tvalidation_0-logloss:0.70204\n",
      "[122]\tvalidation_0-logloss:0.70235\n",
      "[124]\tvalidation_0-logloss:0.70220\n",
      "[126]\tvalidation_0-logloss:0.70225\n",
      "[128]\tvalidation_0-logloss:0.70234\n",
      "[130]\tvalidation_0-logloss:0.70226\n",
      "[132]\tvalidation_0-logloss:0.70216\n",
      "[134]\tvalidation_0-logloss:0.70221\n",
      "[136]\tvalidation_0-logloss:0.70208\n",
      "[138]\tvalidation_0-logloss:0.70224\n",
      "[140]\tvalidation_0-logloss:0.70222\n",
      "[142]\tvalidation_0-logloss:0.70227\n",
      "[144]\tvalidation_0-logloss:0.70243\n",
      "[146]\tvalidation_0-logloss:0.70210\n",
      "[148]\tvalidation_0-logloss:0.70204\n",
      "[150]\tvalidation_0-logloss:0.70188\n",
      "[152]\tvalidation_0-logloss:0.70190\n",
      "[154]\tvalidation_0-logloss:0.70173\n",
      "[156]\tvalidation_0-logloss:0.70184\n",
      "[158]\tvalidation_0-logloss:0.70191\n",
      "[160]\tvalidation_0-logloss:0.70203\n",
      "[162]\tvalidation_0-logloss:0.70190\n",
      "[164]\tvalidation_0-logloss:0.70194\n",
      "[166]\tvalidation_0-logloss:0.70219\n",
      "[168]\tvalidation_0-logloss:0.70210\n",
      "[170]\tvalidation_0-logloss:0.70208\n",
      "[172]\tvalidation_0-logloss:0.70212\n",
      "[174]\tvalidation_0-logloss:0.70220\n",
      "[176]\tvalidation_0-logloss:0.70180\n",
      "[178]\tvalidation_0-logloss:0.70178\n",
      "[180]\tvalidation_0-logloss:0.70194\n",
      "[182]\tvalidation_0-logloss:0.70203\n",
      "[184]\tvalidation_0-logloss:0.70204\n",
      "[186]\tvalidation_0-logloss:0.70213\n",
      "[188]\tvalidation_0-logloss:0.70245\n",
      "[190]\tvalidation_0-logloss:0.70240\n",
      "[192]\tvalidation_0-logloss:0.70263\n",
      "[194]\tvalidation_0-logloss:0.70274\n",
      "[196]\tvalidation_0-logloss:0.70276\n",
      "[198]\tvalidation_0-logloss:0.70275\n",
      "[200]\tvalidation_0-logloss:0.70280\n",
      "[202]\tvalidation_0-logloss:0.70327\n",
      "[204]\tvalidation_0-logloss:0.70315\n",
      "[206]\tvalidation_0-logloss:0.70301\n",
      "[208]\tvalidation_0-logloss:0.70302\n",
      "[210]\tvalidation_0-logloss:0.70300\n",
      "[212]\tvalidation_0-logloss:0.70271\n",
      "[214]\tvalidation_0-logloss:0.70276\n",
      "[216]\tvalidation_0-logloss:0.70283\n",
      "[218]\tvalidation_0-logloss:0.70315\n",
      "[220]\tvalidation_0-logloss:0.70320\n",
      "[222]\tvalidation_0-logloss:0.70324\n",
      "[224]\tvalidation_0-logloss:0.70289\n",
      "[226]\tvalidation_0-logloss:0.70255\n",
      "[228]\tvalidation_0-logloss:0.70269\n",
      "[230]\tvalidation_0-logloss:0.70261\n",
      "[232]\tvalidation_0-logloss:0.70266\n",
      "[234]\tvalidation_0-logloss:0.70282\n",
      "[236]\tvalidation_0-logloss:0.70204\n",
      "[238]\tvalidation_0-logloss:0.70229\n",
      "[240]\tvalidation_0-logloss:0.70223\n",
      "[242]\tvalidation_0-logloss:0.70239\n",
      "[244]\tvalidation_0-logloss:0.70240\n",
      "[246]\tvalidation_0-logloss:0.70235\n",
      "[248]\tvalidation_0-logloss:0.70231\n",
      "[250]\tvalidation_0-logloss:0.70229\n",
      "[252]\tvalidation_0-logloss:0.70226\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 15:57:16,191] Trial 11 finished with value: 0.6942067073647286 and parameters: {'eta': 0.22497023419714943, 'gamma': 0.002177554273053439, 'max_depth': 2, 'min_child_weight': 0, 'lambda': 0.010975330991025323, 'alpha': 0.8453365849466333}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [15:57:20] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69548\n",
      "[2]\tvalidation_0-logloss:0.69536\n",
      "[4]\tvalidation_0-logloss:0.69513\n",
      "[6]\tvalidation_0-logloss:0.69526\n",
      "[8]\tvalidation_0-logloss:0.69468\n",
      "[10]\tvalidation_0-logloss:0.69520\n",
      "[12]\tvalidation_0-logloss:0.69544\n",
      "[14]\tvalidation_0-logloss:0.69501\n",
      "[16]\tvalidation_0-logloss:0.69531\n",
      "[18]\tvalidation_0-logloss:0.69503\n",
      "[20]\tvalidation_0-logloss:0.69450\n",
      "[22]\tvalidation_0-logloss:0.69432\n",
      "[24]\tvalidation_0-logloss:0.69446\n",
      "[26]\tvalidation_0-logloss:0.69459\n",
      "[28]\tvalidation_0-logloss:0.69465\n",
      "[30]\tvalidation_0-logloss:0.69515\n",
      "[32]\tvalidation_0-logloss:0.69516\n",
      "[34]\tvalidation_0-logloss:0.69471\n",
      "[36]\tvalidation_0-logloss:0.69488\n",
      "[38]\tvalidation_0-logloss:0.69483\n",
      "[40]\tvalidation_0-logloss:0.69504\n",
      "[42]\tvalidation_0-logloss:0.69469\n",
      "[44]\tvalidation_0-logloss:0.69444\n",
      "[46]\tvalidation_0-logloss:0.69464\n",
      "[48]\tvalidation_0-logloss:0.69475\n",
      "[50]\tvalidation_0-logloss:0.69461\n",
      "[52]\tvalidation_0-logloss:0.69467\n",
      "[54]\tvalidation_0-logloss:0.69459\n",
      "[56]\tvalidation_0-logloss:0.69495\n",
      "[58]\tvalidation_0-logloss:0.69530\n",
      "[60]\tvalidation_0-logloss:0.69552\n",
      "[62]\tvalidation_0-logloss:0.69560\n",
      "[64]\tvalidation_0-logloss:0.69604\n",
      "[66]\tvalidation_0-logloss:0.69596\n",
      "[68]\tvalidation_0-logloss:0.69629\n",
      "[70]\tvalidation_0-logloss:0.69619\n",
      "[72]\tvalidation_0-logloss:0.69638\n",
      "[74]\tvalidation_0-logloss:0.69646\n",
      "[76]\tvalidation_0-logloss:0.69652\n",
      "[78]\tvalidation_0-logloss:0.69689\n",
      "[80]\tvalidation_0-logloss:0.69704\n",
      "[82]\tvalidation_0-logloss:0.69717\n",
      "[84]\tvalidation_0-logloss:0.69731\n",
      "[86]\tvalidation_0-logloss:0.69692\n",
      "[88]\tvalidation_0-logloss:0.69633\n",
      "[90]\tvalidation_0-logloss:0.69652\n",
      "[92]\tvalidation_0-logloss:0.69636\n",
      "[94]\tvalidation_0-logloss:0.69671\n",
      "[96]\tvalidation_0-logloss:0.69704\n",
      "[98]\tvalidation_0-logloss:0.69738\n",
      "[100]\tvalidation_0-logloss:0.69736\n",
      "[102]\tvalidation_0-logloss:0.69705\n",
      "[104]\tvalidation_0-logloss:0.69715\n",
      "[106]\tvalidation_0-logloss:0.69691\n",
      "[108]\tvalidation_0-logloss:0.69677\n",
      "[110]\tvalidation_0-logloss:0.69670\n",
      "[112]\tvalidation_0-logloss:0.69666\n",
      "[114]\tvalidation_0-logloss:0.69676\n",
      "[116]\tvalidation_0-logloss:0.69661\n",
      "[118]\tvalidation_0-logloss:0.69706\n",
      "[120]\tvalidation_0-logloss:0.69707\n",
      "[122]\tvalidation_0-logloss:0.69719\n",
      "[124]\tvalidation_0-logloss:0.69738\n",
      "[126]\tvalidation_0-logloss:0.69732\n",
      "[128]\tvalidation_0-logloss:0.69738\n",
      "[130]\tvalidation_0-logloss:0.69758\n",
      "[132]\tvalidation_0-logloss:0.69757\n",
      "[134]\tvalidation_0-logloss:0.69733\n",
      "[136]\tvalidation_0-logloss:0.69739\n",
      "[138]\tvalidation_0-logloss:0.69742\n",
      "[140]\tvalidation_0-logloss:0.69790\n",
      "[142]\tvalidation_0-logloss:0.69780\n",
      "[144]\tvalidation_0-logloss:0.69771\n",
      "[146]\tvalidation_0-logloss:0.69788\n",
      "[148]\tvalidation_0-logloss:0.69800\n",
      "[150]\tvalidation_0-logloss:0.69790\n",
      "[152]\tvalidation_0-logloss:0.69793\n",
      "[154]\tvalidation_0-logloss:0.69916\n",
      "[156]\tvalidation_0-logloss:0.69922\n",
      "[158]\tvalidation_0-logloss:0.69919\n",
      "[160]\tvalidation_0-logloss:0.69939\n",
      "[162]\tvalidation_0-logloss:0.69940\n",
      "[164]\tvalidation_0-logloss:0.69955\n",
      "[166]\tvalidation_0-logloss:0.69940\n",
      "[168]\tvalidation_0-logloss:0.69947\n",
      "[170]\tvalidation_0-logloss:0.69997\n",
      "[172]\tvalidation_0-logloss:0.70025\n",
      "[174]\tvalidation_0-logloss:0.70035\n",
      "[176]\tvalidation_0-logloss:0.70036\n",
      "[178]\tvalidation_0-logloss:0.70086\n",
      "[180]\tvalidation_0-logloss:0.70199\n",
      "[182]\tvalidation_0-logloss:0.70184\n",
      "[184]\tvalidation_0-logloss:0.70170\n",
      "[186]\tvalidation_0-logloss:0.70191\n",
      "[188]\tvalidation_0-logloss:0.70298\n",
      "[190]\tvalidation_0-logloss:0.70309\n",
      "[192]\tvalidation_0-logloss:0.70327\n",
      "[194]\tvalidation_0-logloss:0.70379\n",
      "[196]\tvalidation_0-logloss:0.70364\n",
      "[198]\tvalidation_0-logloss:0.70383\n",
      "[200]\tvalidation_0-logloss:0.70334\n",
      "[202]\tvalidation_0-logloss:0.70298\n",
      "[204]\tvalidation_0-logloss:0.70345\n",
      "[206]\tvalidation_0-logloss:0.70328\n",
      "[208]\tvalidation_0-logloss:0.70321\n",
      "[210]\tvalidation_0-logloss:0.70317\n",
      "[212]\tvalidation_0-logloss:0.70302\n",
      "[214]\tvalidation_0-logloss:0.70329\n",
      "[216]\tvalidation_0-logloss:0.70262\n",
      "[218]\tvalidation_0-logloss:0.70257\n",
      "[220]\tvalidation_0-logloss:0.70256\n",
      "[222]\tvalidation_0-logloss:0.70238\n",
      "[224]\tvalidation_0-logloss:0.70231\n",
      "[226]\tvalidation_0-logloss:0.70249\n",
      "[228]\tvalidation_0-logloss:0.70242\n",
      "[230]\tvalidation_0-logloss:0.70267\n",
      "[232]\tvalidation_0-logloss:0.70275\n",
      "[234]\tvalidation_0-logloss:0.70293\n",
      "[236]\tvalidation_0-logloss:0.70315\n",
      "[238]\tvalidation_0-logloss:0.70307\n",
      "[240]\tvalidation_0-logloss:0.70307\n",
      "[242]\tvalidation_0-logloss:0.70301\n",
      "[244]\tvalidation_0-logloss:0.70319\n",
      "[246]\tvalidation_0-logloss:0.70354\n",
      "[248]\tvalidation_0-logloss:0.70346\n",
      "[250]\tvalidation_0-logloss:0.70384\n",
      "[252]\tvalidation_0-logloss:0.70384\n",
      "[254]\tvalidation_0-logloss:0.70391\n",
      "[256]\tvalidation_0-logloss:0.70410\n",
      "[258]\tvalidation_0-logloss:0.70412\n",
      "[260]\tvalidation_0-logloss:0.70409\n",
      "[262]\tvalidation_0-logloss:0.70391\n",
      "[264]\tvalidation_0-logloss:0.70422\n",
      "[266]\tvalidation_0-logloss:0.70430\n",
      "[268]\tvalidation_0-logloss:0.70482\n",
      "[270]\tvalidation_0-logloss:0.70466\n",
      "[271]\tvalidation_0-logloss:0.70469\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 15:58:28,577] Trial 12 finished with value: 0.6943175293527067 and parameters: {'eta': 0.15906700448404595, 'gamma': 0.37094034676143683, 'max_depth': 3, 'min_child_weight': 2, 'lambda': 0.17412748092656066, 'alpha': 0.5570566644433633}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [15:58:33] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69546\n",
      "[2]\tvalidation_0-logloss:0.69534\n",
      "[4]\tvalidation_0-logloss:0.69511\n",
      "[6]\tvalidation_0-logloss:0.69522\n",
      "[8]\tvalidation_0-logloss:0.69465\n",
      "[10]\tvalidation_0-logloss:0.69454\n",
      "[12]\tvalidation_0-logloss:0.69492\n",
      "[14]\tvalidation_0-logloss:0.69484\n",
      "[16]\tvalidation_0-logloss:0.69433\n",
      "[18]\tvalidation_0-logloss:0.69464\n",
      "[20]\tvalidation_0-logloss:0.69487\n",
      "[22]\tvalidation_0-logloss:0.69498\n",
      "[24]\tvalidation_0-logloss:0.69519\n",
      "[26]\tvalidation_0-logloss:0.69605\n",
      "[28]\tvalidation_0-logloss:0.69591\n",
      "[30]\tvalidation_0-logloss:0.69571\n",
      "[32]\tvalidation_0-logloss:0.69591\n",
      "[34]\tvalidation_0-logloss:0.69624\n",
      "[36]\tvalidation_0-logloss:0.69638\n",
      "[38]\tvalidation_0-logloss:0.69643\n",
      "[40]\tvalidation_0-logloss:0.69626\n",
      "[42]\tvalidation_0-logloss:0.69682\n",
      "[44]\tvalidation_0-logloss:0.69676\n",
      "[46]\tvalidation_0-logloss:0.69680\n",
      "[48]\tvalidation_0-logloss:0.69688\n",
      "[50]\tvalidation_0-logloss:0.69710\n",
      "[52]\tvalidation_0-logloss:0.69725\n",
      "[54]\tvalidation_0-logloss:0.69639\n",
      "[56]\tvalidation_0-logloss:0.69629\n",
      "[58]\tvalidation_0-logloss:0.69655\n",
      "[60]\tvalidation_0-logloss:0.69652\n",
      "[62]\tvalidation_0-logloss:0.69664\n",
      "[64]\tvalidation_0-logloss:0.69701\n",
      "[66]\tvalidation_0-logloss:0.69697\n",
      "[68]\tvalidation_0-logloss:0.69688\n",
      "[70]\tvalidation_0-logloss:0.69682\n",
      "[72]\tvalidation_0-logloss:0.69690\n",
      "[74]\tvalidation_0-logloss:0.69750\n",
      "[76]\tvalidation_0-logloss:0.69785\n",
      "[78]\tvalidation_0-logloss:0.69806\n",
      "[80]\tvalidation_0-logloss:0.69842\n",
      "[82]\tvalidation_0-logloss:0.69844\n",
      "[84]\tvalidation_0-logloss:0.69852\n",
      "[86]\tvalidation_0-logloss:0.69888\n",
      "[88]\tvalidation_0-logloss:0.69877\n",
      "[90]\tvalidation_0-logloss:0.69883\n",
      "[92]\tvalidation_0-logloss:0.69864\n",
      "[94]\tvalidation_0-logloss:0.69893\n",
      "[96]\tvalidation_0-logloss:0.69905\n",
      "[98]\tvalidation_0-logloss:0.69900\n",
      "[100]\tvalidation_0-logloss:0.69897\n",
      "[102]\tvalidation_0-logloss:0.69912\n",
      "[104]\tvalidation_0-logloss:0.69920\n",
      "[106]\tvalidation_0-logloss:0.69995\n",
      "[108]\tvalidation_0-logloss:0.70003\n",
      "[110]\tvalidation_0-logloss:0.70002\n",
      "[112]\tvalidation_0-logloss:0.70024\n",
      "[114]\tvalidation_0-logloss:0.70004\n",
      "[116]\tvalidation_0-logloss:0.70000\n",
      "[118]\tvalidation_0-logloss:0.69992\n",
      "[120]\tvalidation_0-logloss:0.69990\n",
      "[122]\tvalidation_0-logloss:0.69975\n",
      "[124]\tvalidation_0-logloss:0.69970\n",
      "[126]\tvalidation_0-logloss:0.69991\n",
      "[128]\tvalidation_0-logloss:0.69975\n",
      "[130]\tvalidation_0-logloss:0.69988\n",
      "[132]\tvalidation_0-logloss:0.70005\n",
      "[134]\tvalidation_0-logloss:0.70007\n",
      "[136]\tvalidation_0-logloss:0.70092\n",
      "[138]\tvalidation_0-logloss:0.70109\n",
      "[140]\tvalidation_0-logloss:0.70111\n",
      "[142]\tvalidation_0-logloss:0.70167\n",
      "[144]\tvalidation_0-logloss:0.70185\n",
      "[146]\tvalidation_0-logloss:0.70166\n",
      "[148]\tvalidation_0-logloss:0.70155\n",
      "[150]\tvalidation_0-logloss:0.70140\n",
      "[152]\tvalidation_0-logloss:0.70144\n",
      "[154]\tvalidation_0-logloss:0.70134\n",
      "[156]\tvalidation_0-logloss:0.70113\n",
      "[158]\tvalidation_0-logloss:0.70203\n",
      "[160]\tvalidation_0-logloss:0.70208\n",
      "[162]\tvalidation_0-logloss:0.70213\n",
      "[164]\tvalidation_0-logloss:0.70243\n",
      "[166]\tvalidation_0-logloss:0.70423\n",
      "[168]\tvalidation_0-logloss:0.70423\n",
      "[170]\tvalidation_0-logloss:0.70408\n",
      "[172]\tvalidation_0-logloss:0.70412\n",
      "[174]\tvalidation_0-logloss:0.70414\n",
      "[176]\tvalidation_0-logloss:0.70406\n",
      "[178]\tvalidation_0-logloss:0.70462\n",
      "[180]\tvalidation_0-logloss:0.70460\n",
      "[182]\tvalidation_0-logloss:0.70530\n",
      "[184]\tvalidation_0-logloss:0.70575\n",
      "[186]\tvalidation_0-logloss:0.70567\n",
      "[188]\tvalidation_0-logloss:0.70581\n",
      "[190]\tvalidation_0-logloss:0.70592\n",
      "[192]\tvalidation_0-logloss:0.70658\n",
      "[194]\tvalidation_0-logloss:0.70671\n",
      "[196]\tvalidation_0-logloss:0.70662\n",
      "[198]\tvalidation_0-logloss:0.70666\n",
      "[200]\tvalidation_0-logloss:0.70660\n",
      "[202]\tvalidation_0-logloss:0.70657\n",
      "[204]\tvalidation_0-logloss:0.70761\n",
      "[206]\tvalidation_0-logloss:0.70764\n",
      "[208]\tvalidation_0-logloss:0.70799\n",
      "[210]\tvalidation_0-logloss:0.70800\n",
      "[212]\tvalidation_0-logloss:0.70788\n",
      "[214]\tvalidation_0-logloss:0.71000\n",
      "[216]\tvalidation_0-logloss:0.70995\n",
      "[218]\tvalidation_0-logloss:0.71048\n",
      "[220]\tvalidation_0-logloss:0.71047\n",
      "[222]\tvalidation_0-logloss:0.71054\n",
      "[224]\tvalidation_0-logloss:0.71130\n",
      "[226]\tvalidation_0-logloss:0.71094\n",
      "[228]\tvalidation_0-logloss:0.71272\n",
      "[230]\tvalidation_0-logloss:0.71263\n",
      "[232]\tvalidation_0-logloss:0.71347\n",
      "[234]\tvalidation_0-logloss:0.71349\n",
      "[236]\tvalidation_0-logloss:0.71344\n",
      "[238]\tvalidation_0-logloss:0.71318\n",
      "[240]\tvalidation_0-logloss:0.71324\n",
      "[242]\tvalidation_0-logloss:0.71303\n",
      "[244]\tvalidation_0-logloss:0.71297\n",
      "[246]\tvalidation_0-logloss:0.71255\n",
      "[248]\tvalidation_0-logloss:0.71283\n",
      "[250]\tvalidation_0-logloss:0.71280\n",
      "[252]\tvalidation_0-logloss:0.71285\n",
      "[254]\tvalidation_0-logloss:0.71312\n",
      "[256]\tvalidation_0-logloss:0.71311\n",
      "[258]\tvalidation_0-logloss:0.71321\n",
      "[260]\tvalidation_0-logloss:0.71307\n",
      "[262]\tvalidation_0-logloss:0.71348\n",
      "[264]\tvalidation_0-logloss:0.71367\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 15:59:40,596] Trial 13 finished with value: 0.6942906279892538 and parameters: {'eta': 0.1507602066538876, 'gamma': 0.0030002320173777575, 'max_depth': 3, 'min_child_weight': 0, 'lambda': 0.000244190453197457, 'alpha': 0.7137613739134007}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [15:59:45] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69524\n",
      "[2]\tvalidation_0-logloss:0.69520\n",
      "[4]\tvalidation_0-logloss:0.69520\n",
      "[6]\tvalidation_0-logloss:0.69522\n",
      "[8]\tvalidation_0-logloss:0.69529\n",
      "[10]\tvalidation_0-logloss:0.69537\n",
      "[12]\tvalidation_0-logloss:0.69544\n",
      "[14]\tvalidation_0-logloss:0.69553\n",
      "[16]\tvalidation_0-logloss:0.69576\n",
      "[18]\tvalidation_0-logloss:0.69593\n",
      "[20]\tvalidation_0-logloss:0.69610\n",
      "[22]\tvalidation_0-logloss:0.69618\n",
      "[24]\tvalidation_0-logloss:0.69619\n",
      "[26]\tvalidation_0-logloss:0.69621\n",
      "[28]\tvalidation_0-logloss:0.69623\n",
      "[30]\tvalidation_0-logloss:0.69615\n",
      "[32]\tvalidation_0-logloss:0.69617\n",
      "[34]\tvalidation_0-logloss:0.69620\n",
      "[36]\tvalidation_0-logloss:0.69610\n",
      "[38]\tvalidation_0-logloss:0.69628\n",
      "[40]\tvalidation_0-logloss:0.69623\n",
      "[42]\tvalidation_0-logloss:0.69618\n",
      "[44]\tvalidation_0-logloss:0.69612\n",
      "[46]\tvalidation_0-logloss:0.69602\n",
      "[48]\tvalidation_0-logloss:0.69592\n",
      "[50]\tvalidation_0-logloss:0.69602\n",
      "[52]\tvalidation_0-logloss:0.69601\n",
      "[54]\tvalidation_0-logloss:0.69600\n",
      "[56]\tvalidation_0-logloss:0.69609\n",
      "[58]\tvalidation_0-logloss:0.69608\n",
      "[60]\tvalidation_0-logloss:0.69610\n",
      "[62]\tvalidation_0-logloss:0.69608\n",
      "[64]\tvalidation_0-logloss:0.69606\n",
      "[66]\tvalidation_0-logloss:0.69606\n",
      "[68]\tvalidation_0-logloss:0.69599\n",
      "[70]\tvalidation_0-logloss:0.69599\n",
      "[72]\tvalidation_0-logloss:0.69594\n",
      "[74]\tvalidation_0-logloss:0.69599\n",
      "[76]\tvalidation_0-logloss:0.69594\n",
      "[78]\tvalidation_0-logloss:0.69590\n",
      "[80]\tvalidation_0-logloss:0.69592\n",
      "[82]\tvalidation_0-logloss:0.69595\n",
      "[84]\tvalidation_0-logloss:0.69589\n",
      "[86]\tvalidation_0-logloss:0.69585\n",
      "[88]\tvalidation_0-logloss:0.69584\n",
      "[90]\tvalidation_0-logloss:0.69577\n",
      "[92]\tvalidation_0-logloss:0.69578\n",
      "[94]\tvalidation_0-logloss:0.69579\n",
      "[96]\tvalidation_0-logloss:0.69583\n",
      "[98]\tvalidation_0-logloss:0.69582\n",
      "[100]\tvalidation_0-logloss:0.69578\n",
      "[102]\tvalidation_0-logloss:0.69578\n",
      "[104]\tvalidation_0-logloss:0.69580\n",
      "[106]\tvalidation_0-logloss:0.69581\n",
      "[108]\tvalidation_0-logloss:0.69584\n",
      "[110]\tvalidation_0-logloss:0.69588\n",
      "[112]\tvalidation_0-logloss:0.69590\n",
      "[114]\tvalidation_0-logloss:0.69591\n",
      "[116]\tvalidation_0-logloss:0.69584\n",
      "[118]\tvalidation_0-logloss:0.69587\n",
      "[120]\tvalidation_0-logloss:0.69590\n",
      "[122]\tvalidation_0-logloss:0.69592\n",
      "[124]\tvalidation_0-logloss:0.69595\n",
      "[126]\tvalidation_0-logloss:0.69592\n",
      "[128]\tvalidation_0-logloss:0.69596\n",
      "[130]\tvalidation_0-logloss:0.69604\n",
      "[132]\tvalidation_0-logloss:0.69609\n",
      "[134]\tvalidation_0-logloss:0.69606\n",
      "[136]\tvalidation_0-logloss:0.69608\n",
      "[138]\tvalidation_0-logloss:0.69605\n",
      "[140]\tvalidation_0-logloss:0.69608\n",
      "[142]\tvalidation_0-logloss:0.69605\n",
      "[144]\tvalidation_0-logloss:0.69608\n",
      "[146]\tvalidation_0-logloss:0.69604\n",
      "[148]\tvalidation_0-logloss:0.69604\n",
      "[150]\tvalidation_0-logloss:0.69602\n",
      "[152]\tvalidation_0-logloss:0.69602\n",
      "[154]\tvalidation_0-logloss:0.69598\n",
      "[156]\tvalidation_0-logloss:0.69595\n",
      "[158]\tvalidation_0-logloss:0.69595\n",
      "[160]\tvalidation_0-logloss:0.69596\n",
      "[162]\tvalidation_0-logloss:0.69592\n",
      "[164]\tvalidation_0-logloss:0.69596\n",
      "[166]\tvalidation_0-logloss:0.69599\n",
      "[168]\tvalidation_0-logloss:0.69599\n",
      "[170]\tvalidation_0-logloss:0.69601\n",
      "[172]\tvalidation_0-logloss:0.69606\n",
      "[174]\tvalidation_0-logloss:0.69614\n",
      "[176]\tvalidation_0-logloss:0.69612\n",
      "[178]\tvalidation_0-logloss:0.69612\n",
      "[180]\tvalidation_0-logloss:0.69615\n",
      "[182]\tvalidation_0-logloss:0.69613\n",
      "[184]\tvalidation_0-logloss:0.69612\n",
      "[186]\tvalidation_0-logloss:0.69615\n",
      "[188]\tvalidation_0-logloss:0.69615\n",
      "[190]\tvalidation_0-logloss:0.69620\n",
      "[192]\tvalidation_0-logloss:0.69625\n",
      "[194]\tvalidation_0-logloss:0.69627\n",
      "[196]\tvalidation_0-logloss:0.69626\n",
      "[198]\tvalidation_0-logloss:0.69627\n",
      "[200]\tvalidation_0-logloss:0.69635\n",
      "[202]\tvalidation_0-logloss:0.69637\n",
      "[204]\tvalidation_0-logloss:0.69639\n",
      "[206]\tvalidation_0-logloss:0.69638\n",
      "[208]\tvalidation_0-logloss:0.69639\n",
      "[210]\tvalidation_0-logloss:0.69640\n",
      "[212]\tvalidation_0-logloss:0.69643\n",
      "[214]\tvalidation_0-logloss:0.69651\n",
      "[216]\tvalidation_0-logloss:0.69652\n",
      "[218]\tvalidation_0-logloss:0.69649\n",
      "[220]\tvalidation_0-logloss:0.69649\n",
      "[222]\tvalidation_0-logloss:0.69652\n",
      "[224]\tvalidation_0-logloss:0.69650\n",
      "[226]\tvalidation_0-logloss:0.69652\n",
      "[228]\tvalidation_0-logloss:0.69649\n",
      "[230]\tvalidation_0-logloss:0.69652\n",
      "[232]\tvalidation_0-logloss:0.69652\n",
      "[234]\tvalidation_0-logloss:0.69660\n",
      "[236]\tvalidation_0-logloss:0.69657\n",
      "[238]\tvalidation_0-logloss:0.69659\n",
      "[240]\tvalidation_0-logloss:0.69663\n",
      "[242]\tvalidation_0-logloss:0.69663\n",
      "[244]\tvalidation_0-logloss:0.69668\n",
      "[246]\tvalidation_0-logloss:0.69667\n",
      "[248]\tvalidation_0-logloss:0.69667\n",
      "[250]\tvalidation_0-logloss:0.69670\n",
      "[252]\tvalidation_0-logloss:0.69671\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:01:13,277] Trial 14 finished with value: 0.6951879309706692 and parameters: {'eta': 0.010050403019838745, 'gamma': 0.6947100131515935, 'max_depth': 7, 'min_child_weight': 10, 'lambda': 0.21659248466574493, 'alpha': 0.42286906969384086}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:01:18] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69523\n",
      "[2]\tvalidation_0-logloss:0.69518\n",
      "[4]\tvalidation_0-logloss:0.69513\n",
      "[6]\tvalidation_0-logloss:0.69507\n",
      "[8]\tvalidation_0-logloss:0.69512\n",
      "[10]\tvalidation_0-logloss:0.69506\n",
      "[12]\tvalidation_0-logloss:0.69510\n",
      "[14]\tvalidation_0-logloss:0.69513\n",
      "[16]\tvalidation_0-logloss:0.69532\n",
      "[18]\tvalidation_0-logloss:0.69530\n",
      "[20]\tvalidation_0-logloss:0.69548\n",
      "[22]\tvalidation_0-logloss:0.69551\n",
      "[24]\tvalidation_0-logloss:0.69553\n",
      "[26]\tvalidation_0-logloss:0.69583\n",
      "[28]\tvalidation_0-logloss:0.69581\n",
      "[30]\tvalidation_0-logloss:0.69582\n",
      "[32]\tvalidation_0-logloss:0.69601\n",
      "[34]\tvalidation_0-logloss:0.69579\n",
      "[36]\tvalidation_0-logloss:0.69581\n",
      "[38]\tvalidation_0-logloss:0.69591\n",
      "[40]\tvalidation_0-logloss:0.69604\n",
      "[42]\tvalidation_0-logloss:0.69597\n",
      "[44]\tvalidation_0-logloss:0.69595\n",
      "[46]\tvalidation_0-logloss:0.69580\n",
      "[48]\tvalidation_0-logloss:0.69579\n",
      "[50]\tvalidation_0-logloss:0.69580\n",
      "[52]\tvalidation_0-logloss:0.69584\n",
      "[54]\tvalidation_0-logloss:0.69597\n",
      "[56]\tvalidation_0-logloss:0.69603\n",
      "[58]\tvalidation_0-logloss:0.69592\n",
      "[60]\tvalidation_0-logloss:0.69577\n",
      "[62]\tvalidation_0-logloss:0.69589\n",
      "[64]\tvalidation_0-logloss:0.69584\n",
      "[66]\tvalidation_0-logloss:0.69595\n",
      "[68]\tvalidation_0-logloss:0.69583\n",
      "[70]\tvalidation_0-logloss:0.69577\n",
      "[72]\tvalidation_0-logloss:0.69593\n",
      "[74]\tvalidation_0-logloss:0.69590\n",
      "[76]\tvalidation_0-logloss:0.69591\n",
      "[78]\tvalidation_0-logloss:0.69604\n",
      "[80]\tvalidation_0-logloss:0.69606\n",
      "[82]\tvalidation_0-logloss:0.69599\n",
      "[84]\tvalidation_0-logloss:0.69583\n",
      "[86]\tvalidation_0-logloss:0.69577\n",
      "[88]\tvalidation_0-logloss:0.69583\n",
      "[90]\tvalidation_0-logloss:0.69571\n",
      "[92]\tvalidation_0-logloss:0.69584\n",
      "[94]\tvalidation_0-logloss:0.69585\n",
      "[96]\tvalidation_0-logloss:0.69582\n",
      "[98]\tvalidation_0-logloss:0.69578\n",
      "[100]\tvalidation_0-logloss:0.69568\n",
      "[102]\tvalidation_0-logloss:0.69564\n",
      "[104]\tvalidation_0-logloss:0.69561\n",
      "[106]\tvalidation_0-logloss:0.69572\n",
      "[108]\tvalidation_0-logloss:0.69572\n",
      "[110]\tvalidation_0-logloss:0.69571\n",
      "[112]\tvalidation_0-logloss:0.69575\n",
      "[114]\tvalidation_0-logloss:0.69577\n",
      "[116]\tvalidation_0-logloss:0.69593\n",
      "[118]\tvalidation_0-logloss:0.69593\n",
      "[120]\tvalidation_0-logloss:0.69594\n",
      "[122]\tvalidation_0-logloss:0.69593\n",
      "[124]\tvalidation_0-logloss:0.69586\n",
      "[126]\tvalidation_0-logloss:0.69585\n",
      "[128]\tvalidation_0-logloss:0.69584\n",
      "[130]\tvalidation_0-logloss:0.69582\n",
      "[132]\tvalidation_0-logloss:0.69579\n",
      "[134]\tvalidation_0-logloss:0.69578\n",
      "[136]\tvalidation_0-logloss:0.69583\n",
      "[138]\tvalidation_0-logloss:0.69587\n",
      "[140]\tvalidation_0-logloss:0.69587\n",
      "[142]\tvalidation_0-logloss:0.69583\n",
      "[144]\tvalidation_0-logloss:0.69582\n",
      "[146]\tvalidation_0-logloss:0.69595\n",
      "[148]\tvalidation_0-logloss:0.69593\n",
      "[150]\tvalidation_0-logloss:0.69589\n",
      "[152]\tvalidation_0-logloss:0.69600\n",
      "[154]\tvalidation_0-logloss:0.69590\n",
      "[156]\tvalidation_0-logloss:0.69590\n",
      "[158]\tvalidation_0-logloss:0.69586\n",
      "[160]\tvalidation_0-logloss:0.69597\n",
      "[162]\tvalidation_0-logloss:0.69598\n",
      "[164]\tvalidation_0-logloss:0.69599\n",
      "[166]\tvalidation_0-logloss:0.69596\n",
      "[168]\tvalidation_0-logloss:0.69592\n",
      "[170]\tvalidation_0-logloss:0.69590\n",
      "[172]\tvalidation_0-logloss:0.69587\n",
      "[174]\tvalidation_0-logloss:0.69596\n",
      "[176]\tvalidation_0-logloss:0.69597\n",
      "[178]\tvalidation_0-logloss:0.69595\n",
      "[180]\tvalidation_0-logloss:0.69596\n",
      "[182]\tvalidation_0-logloss:0.69600\n",
      "[184]\tvalidation_0-logloss:0.69609\n",
      "[186]\tvalidation_0-logloss:0.69619\n",
      "[188]\tvalidation_0-logloss:0.69615\n",
      "[190]\tvalidation_0-logloss:0.69615\n",
      "[192]\tvalidation_0-logloss:0.69616\n",
      "[194]\tvalidation_0-logloss:0.69615\n",
      "[196]\tvalidation_0-logloss:0.69618\n",
      "[198]\tvalidation_0-logloss:0.69617\n",
      "[200]\tvalidation_0-logloss:0.69612\n",
      "[202]\tvalidation_0-logloss:0.69611\n",
      "[204]\tvalidation_0-logloss:0.69616\n",
      "[206]\tvalidation_0-logloss:0.69619\n",
      "[208]\tvalidation_0-logloss:0.69618\n",
      "[210]\tvalidation_0-logloss:0.69619\n",
      "[212]\tvalidation_0-logloss:0.69625\n",
      "[214]\tvalidation_0-logloss:0.69625\n",
      "[216]\tvalidation_0-logloss:0.69625\n",
      "[218]\tvalidation_0-logloss:0.69642\n",
      "[220]\tvalidation_0-logloss:0.69640\n",
      "[222]\tvalidation_0-logloss:0.69636\n",
      "[224]\tvalidation_0-logloss:0.69635\n",
      "[226]\tvalidation_0-logloss:0.69633\n",
      "[228]\tvalidation_0-logloss:0.69634\n",
      "[230]\tvalidation_0-logloss:0.69635\n",
      "[232]\tvalidation_0-logloss:0.69635\n",
      "[234]\tvalidation_0-logloss:0.69639\n",
      "[236]\tvalidation_0-logloss:0.69648\n",
      "[238]\tvalidation_0-logloss:0.69641\n",
      "[240]\tvalidation_0-logloss:0.69639\n",
      "[242]\tvalidation_0-logloss:0.69639\n",
      "[244]\tvalidation_0-logloss:0.69645\n",
      "[246]\tvalidation_0-logloss:0.69639\n",
      "[248]\tvalidation_0-logloss:0.69652\n",
      "[250]\tvalidation_0-logloss:0.69655\n",
      "[252]\tvalidation_0-logloss:0.69654\n",
      "[254]\tvalidation_0-logloss:0.69654\n",
      "[256]\tvalidation_0-logloss:0.69652\n",
      "[258]\tvalidation_0-logloss:0.69653\n",
      "[260]\tvalidation_0-logloss:0.69653\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:02:15,827] Trial 15 finished with value: 0.6950547852858884 and parameters: {'eta': 0.06524542956620649, 'gamma': 0.22854697611804253, 'max_depth': 1, 'min_child_weight': 4, 'lambda': 0.3267832681454592, 'alpha': 0.9797468684242204}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:02:20] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69564\n",
      "[2]\tvalidation_0-logloss:0.69475\n",
      "[4]\tvalidation_0-logloss:0.69447\n",
      "[6]\tvalidation_0-logloss:0.69546\n",
      "[8]\tvalidation_0-logloss:0.69671\n",
      "[10]\tvalidation_0-logloss:0.69576\n",
      "[12]\tvalidation_0-logloss:0.69556\n",
      "[14]\tvalidation_0-logloss:0.69552\n",
      "[16]\tvalidation_0-logloss:0.69562\n",
      "[18]\tvalidation_0-logloss:0.69557\n",
      "[20]\tvalidation_0-logloss:0.69598\n",
      "[22]\tvalidation_0-logloss:0.69606\n",
      "[24]\tvalidation_0-logloss:0.69617\n",
      "[26]\tvalidation_0-logloss:0.69611\n",
      "[28]\tvalidation_0-logloss:0.69597\n",
      "[30]\tvalidation_0-logloss:0.69615\n",
      "[32]\tvalidation_0-logloss:0.69591\n",
      "[34]\tvalidation_0-logloss:0.69624\n",
      "[36]\tvalidation_0-logloss:0.69917\n",
      "[38]\tvalidation_0-logloss:0.69910\n",
      "[40]\tvalidation_0-logloss:0.69924\n",
      "[42]\tvalidation_0-logloss:0.69989\n",
      "[44]\tvalidation_0-logloss:0.69989\n",
      "[46]\tvalidation_0-logloss:0.69985\n",
      "[48]\tvalidation_0-logloss:0.69986\n",
      "[50]\tvalidation_0-logloss:0.70005\n",
      "[52]\tvalidation_0-logloss:0.69935\n",
      "[54]\tvalidation_0-logloss:0.69845\n",
      "[56]\tvalidation_0-logloss:0.69802\n",
      "[58]\tvalidation_0-logloss:0.69799\n",
      "[60]\tvalidation_0-logloss:0.70097\n",
      "[62]\tvalidation_0-logloss:0.70086\n",
      "[64]\tvalidation_0-logloss:0.70059\n",
      "[66]\tvalidation_0-logloss:0.70068\n",
      "[68]\tvalidation_0-logloss:0.70106\n",
      "[70]\tvalidation_0-logloss:0.70167\n",
      "[72]\tvalidation_0-logloss:0.70220\n",
      "[74]\tvalidation_0-logloss:0.70214\n",
      "[76]\tvalidation_0-logloss:0.70242\n",
      "[78]\tvalidation_0-logloss:0.70282\n",
      "[80]\tvalidation_0-logloss:0.70286\n",
      "[82]\tvalidation_0-logloss:0.70286\n",
      "[84]\tvalidation_0-logloss:0.70296\n",
      "[86]\tvalidation_0-logloss:0.70293\n",
      "[88]\tvalidation_0-logloss:0.70326\n",
      "[90]\tvalidation_0-logloss:0.70299\n",
      "[92]\tvalidation_0-logloss:0.70283\n",
      "[94]\tvalidation_0-logloss:0.70296\n",
      "[96]\tvalidation_0-logloss:0.70322\n",
      "[98]\tvalidation_0-logloss:0.70309\n",
      "[100]\tvalidation_0-logloss:0.70327\n",
      "[102]\tvalidation_0-logloss:0.70329\n",
      "[104]\tvalidation_0-logloss:0.70313\n",
      "[106]\tvalidation_0-logloss:0.70468\n",
      "[108]\tvalidation_0-logloss:0.70485\n",
      "[110]\tvalidation_0-logloss:0.70501\n",
      "[112]\tvalidation_0-logloss:0.70494\n",
      "[114]\tvalidation_0-logloss:0.70556\n",
      "[116]\tvalidation_0-logloss:0.70552\n",
      "[118]\tvalidation_0-logloss:0.70537\n",
      "[120]\tvalidation_0-logloss:0.70552\n",
      "[122]\tvalidation_0-logloss:0.70591\n",
      "[124]\tvalidation_0-logloss:0.70643\n",
      "[126]\tvalidation_0-logloss:0.70682\n",
      "[128]\tvalidation_0-logloss:0.70684\n",
      "[130]\tvalidation_0-logloss:0.70710\n",
      "[132]\tvalidation_0-logloss:0.70734\n",
      "[134]\tvalidation_0-logloss:0.70725\n",
      "[136]\tvalidation_0-logloss:0.70754\n",
      "[138]\tvalidation_0-logloss:0.70749\n",
      "[140]\tvalidation_0-logloss:0.70731\n",
      "[142]\tvalidation_0-logloss:0.70713\n",
      "[144]\tvalidation_0-logloss:0.70697\n",
      "[146]\tvalidation_0-logloss:0.70732\n",
      "[148]\tvalidation_0-logloss:0.70741\n",
      "[150]\tvalidation_0-logloss:0.70751\n",
      "[152]\tvalidation_0-logloss:0.70958\n",
      "[154]\tvalidation_0-logloss:0.70970\n",
      "[156]\tvalidation_0-logloss:0.70957\n",
      "[158]\tvalidation_0-logloss:0.70957\n",
      "[160]\tvalidation_0-logloss:0.70954\n",
      "[162]\tvalidation_0-logloss:0.70964\n",
      "[164]\tvalidation_0-logloss:0.70906\n",
      "[166]\tvalidation_0-logloss:0.70909\n",
      "[168]\tvalidation_0-logloss:0.70952\n",
      "[170]\tvalidation_0-logloss:0.70966\n",
      "[172]\tvalidation_0-logloss:0.70984\n",
      "[174]\tvalidation_0-logloss:0.70982\n",
      "[176]\tvalidation_0-logloss:0.71016\n",
      "[178]\tvalidation_0-logloss:0.71015\n",
      "[180]\tvalidation_0-logloss:0.71041\n",
      "[182]\tvalidation_0-logloss:0.71101\n",
      "[184]\tvalidation_0-logloss:0.71074\n",
      "[186]\tvalidation_0-logloss:0.71058\n",
      "[188]\tvalidation_0-logloss:0.71065\n",
      "[190]\tvalidation_0-logloss:0.71088\n",
      "[192]\tvalidation_0-logloss:0.71118\n",
      "[194]\tvalidation_0-logloss:0.71113\n",
      "[196]\tvalidation_0-logloss:0.71175\n",
      "[198]\tvalidation_0-logloss:0.71173\n",
      "[200]\tvalidation_0-logloss:0.71184\n",
      "[202]\tvalidation_0-logloss:0.71156\n",
      "[204]\tvalidation_0-logloss:0.71161\n",
      "[206]\tvalidation_0-logloss:0.71177\n",
      "[208]\tvalidation_0-logloss:0.71206\n",
      "[210]\tvalidation_0-logloss:0.71215\n",
      "[212]\tvalidation_0-logloss:0.71235\n",
      "[214]\tvalidation_0-logloss:0.71262\n",
      "[216]\tvalidation_0-logloss:0.71440\n",
      "[218]\tvalidation_0-logloss:0.71468\n",
      "[220]\tvalidation_0-logloss:0.71489\n",
      "[222]\tvalidation_0-logloss:0.71500\n",
      "[224]\tvalidation_0-logloss:0.71505\n",
      "[226]\tvalidation_0-logloss:0.71514\n",
      "[228]\tvalidation_0-logloss:0.71515\n",
      "[230]\tvalidation_0-logloss:0.71495\n",
      "[232]\tvalidation_0-logloss:0.71512\n",
      "[234]\tvalidation_0-logloss:0.71532\n",
      "[236]\tvalidation_0-logloss:0.71531\n",
      "[238]\tvalidation_0-logloss:0.71563\n",
      "[240]\tvalidation_0-logloss:0.71577\n",
      "[242]\tvalidation_0-logloss:0.71577\n",
      "[244]\tvalidation_0-logloss:0.71595\n",
      "[246]\tvalidation_0-logloss:0.71554\n",
      "[248]\tvalidation_0-logloss:0.71598\n",
      "[250]\tvalidation_0-logloss:0.71860\n",
      "[252]\tvalidation_0-logloss:0.71853\n",
      "[253]\tvalidation_0-logloss:0.71859\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:03:24,661] Trial 16 finished with value: 0.6944738062247511 and parameters: {'eta': 0.21736490943038142, 'gamma': 0.44018606282442196, 'max_depth': 3, 'min_child_weight': 2, 'lambda': 0.12064241333843645, 'alpha': 0.67086285595362}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:03:29] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69540\n",
      "[2]\tvalidation_0-logloss:0.69592\n",
      "[4]\tvalidation_0-logloss:0.69625\n",
      "[6]\tvalidation_0-logloss:0.69608\n",
      "[8]\tvalidation_0-logloss:0.69598\n",
      "[10]\tvalidation_0-logloss:0.69640\n",
      "[12]\tvalidation_0-logloss:0.69664\n",
      "[14]\tvalidation_0-logloss:0.69703\n",
      "[16]\tvalidation_0-logloss:0.69681\n",
      "[18]\tvalidation_0-logloss:0.69680\n",
      "[20]\tvalidation_0-logloss:0.69663\n",
      "[22]\tvalidation_0-logloss:0.69677\n",
      "[24]\tvalidation_0-logloss:0.69679\n",
      "[26]\tvalidation_0-logloss:0.69693\n",
      "[28]\tvalidation_0-logloss:0.69732\n",
      "[30]\tvalidation_0-logloss:0.69734\n",
      "[32]\tvalidation_0-logloss:0.69709\n",
      "[34]\tvalidation_0-logloss:0.69731\n",
      "[36]\tvalidation_0-logloss:0.69706\n",
      "[38]\tvalidation_0-logloss:0.69720\n",
      "[40]\tvalidation_0-logloss:0.69719\n",
      "[42]\tvalidation_0-logloss:0.69711\n",
      "[44]\tvalidation_0-logloss:0.69653\n",
      "[46]\tvalidation_0-logloss:0.69662\n",
      "[48]\tvalidation_0-logloss:0.69671\n",
      "[50]\tvalidation_0-logloss:0.69675\n",
      "[52]\tvalidation_0-logloss:0.69681\n",
      "[54]\tvalidation_0-logloss:0.69676\n",
      "[56]\tvalidation_0-logloss:0.69692\n",
      "[58]\tvalidation_0-logloss:0.69710\n",
      "[60]\tvalidation_0-logloss:0.69724\n",
      "[62]\tvalidation_0-logloss:0.69767\n",
      "[64]\tvalidation_0-logloss:0.69773\n",
      "[66]\tvalidation_0-logloss:0.69757\n",
      "[68]\tvalidation_0-logloss:0.69773\n",
      "[70]\tvalidation_0-logloss:0.69813\n",
      "[72]\tvalidation_0-logloss:0.69807\n",
      "[74]\tvalidation_0-logloss:0.69814\n",
      "[76]\tvalidation_0-logloss:0.69820\n",
      "[78]\tvalidation_0-logloss:0.69857\n",
      "[80]\tvalidation_0-logloss:0.69848\n",
      "[82]\tvalidation_0-logloss:0.69841\n",
      "[84]\tvalidation_0-logloss:0.69840\n",
      "[86]\tvalidation_0-logloss:0.69826\n",
      "[88]\tvalidation_0-logloss:0.69832\n",
      "[90]\tvalidation_0-logloss:0.69855\n",
      "[92]\tvalidation_0-logloss:0.69902\n",
      "[94]\tvalidation_0-logloss:0.69911\n",
      "[96]\tvalidation_0-logloss:0.69910\n",
      "[98]\tvalidation_0-logloss:0.69923\n",
      "[100]\tvalidation_0-logloss:0.69906\n",
      "[102]\tvalidation_0-logloss:0.69924\n",
      "[104]\tvalidation_0-logloss:0.69944\n",
      "[106]\tvalidation_0-logloss:0.69948\n",
      "[108]\tvalidation_0-logloss:0.69956\n",
      "[110]\tvalidation_0-logloss:0.69997\n",
      "[112]\tvalidation_0-logloss:0.70108\n",
      "[114]\tvalidation_0-logloss:0.70112\n",
      "[116]\tvalidation_0-logloss:0.70132\n",
      "[118]\tvalidation_0-logloss:0.70099\n",
      "[120]\tvalidation_0-logloss:0.70107\n",
      "[122]\tvalidation_0-logloss:0.70094\n",
      "[124]\tvalidation_0-logloss:0.70114\n",
      "[126]\tvalidation_0-logloss:0.70127\n",
      "[128]\tvalidation_0-logloss:0.70118\n",
      "[130]\tvalidation_0-logloss:0.70129\n",
      "[132]\tvalidation_0-logloss:0.70130\n",
      "[134]\tvalidation_0-logloss:0.70144\n",
      "[136]\tvalidation_0-logloss:0.70129\n",
      "[138]\tvalidation_0-logloss:0.70133\n",
      "[140]\tvalidation_0-logloss:0.70154\n",
      "[142]\tvalidation_0-logloss:0.70146\n",
      "[144]\tvalidation_0-logloss:0.70178\n",
      "[146]\tvalidation_0-logloss:0.70183\n",
      "[148]\tvalidation_0-logloss:0.70217\n",
      "[150]\tvalidation_0-logloss:0.70207\n",
      "[152]\tvalidation_0-logloss:0.70187\n",
      "[154]\tvalidation_0-logloss:0.70192\n",
      "[156]\tvalidation_0-logloss:0.70178\n",
      "[158]\tvalidation_0-logloss:0.70198\n",
      "[160]\tvalidation_0-logloss:0.70191\n",
      "[162]\tvalidation_0-logloss:0.70220\n",
      "[164]\tvalidation_0-logloss:0.70227\n",
      "[166]\tvalidation_0-logloss:0.70254\n",
      "[168]\tvalidation_0-logloss:0.70275\n",
      "[170]\tvalidation_0-logloss:0.70283\n",
      "[172]\tvalidation_0-logloss:0.70293\n",
      "[174]\tvalidation_0-logloss:0.70362\n",
      "[176]\tvalidation_0-logloss:0.70379\n",
      "[178]\tvalidation_0-logloss:0.70349\n",
      "[180]\tvalidation_0-logloss:0.70370\n",
      "[182]\tvalidation_0-logloss:0.70384\n",
      "[184]\tvalidation_0-logloss:0.70383\n",
      "[186]\tvalidation_0-logloss:0.70390\n",
      "[188]\tvalidation_0-logloss:0.70398\n",
      "[190]\tvalidation_0-logloss:0.70412\n",
      "[192]\tvalidation_0-logloss:0.70532\n",
      "[194]\tvalidation_0-logloss:0.70539\n",
      "[196]\tvalidation_0-logloss:0.70630\n",
      "[198]\tvalidation_0-logloss:0.70614\n",
      "[200]\tvalidation_0-logloss:0.70659\n",
      "[202]\tvalidation_0-logloss:0.70722\n",
      "[204]\tvalidation_0-logloss:0.70707\n",
      "[206]\tvalidation_0-logloss:0.70706\n",
      "[208]\tvalidation_0-logloss:0.70737\n",
      "[210]\tvalidation_0-logloss:0.70732\n",
      "[212]\tvalidation_0-logloss:0.70734\n",
      "[214]\tvalidation_0-logloss:0.70802\n",
      "[216]\tvalidation_0-logloss:0.70824\n",
      "[218]\tvalidation_0-logloss:0.70819\n",
      "[220]\tvalidation_0-logloss:0.70802\n",
      "[222]\tvalidation_0-logloss:0.70830\n",
      "[224]\tvalidation_0-logloss:0.70812\n",
      "[226]\tvalidation_0-logloss:0.70806\n",
      "[228]\tvalidation_0-logloss:0.70818\n",
      "[230]\tvalidation_0-logloss:0.70830\n",
      "[232]\tvalidation_0-logloss:0.70839\n",
      "[234]\tvalidation_0-logloss:0.70848\n",
      "[236]\tvalidation_0-logloss:0.70845\n",
      "[238]\tvalidation_0-logloss:0.70849\n",
      "[240]\tvalidation_0-logloss:0.70846\n",
      "[242]\tvalidation_0-logloss:0.70842\n",
      "[244]\tvalidation_0-logloss:0.70837\n",
      "[246]\tvalidation_0-logloss:0.70911\n",
      "[248]\tvalidation_0-logloss:0.70908\n",
      "[250]\tvalidation_0-logloss:0.70909\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:04:39,711] Trial 17 finished with value: 0.6953989133733858 and parameters: {'eta': 0.1092888304563117, 'gamma': 0.18003648932725091, 'max_depth': 4, 'min_child_weight': 1, 'lambda': 0.10824209576831978, 'alpha': 0.8413058476446833}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:04:44] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69729\n",
      "[2]\tvalidation_0-logloss:0.69773\n",
      "[4]\tvalidation_0-logloss:0.69982\n",
      "[6]\tvalidation_0-logloss:0.70162\n",
      "[8]\tvalidation_0-logloss:0.70193\n",
      "[10]\tvalidation_0-logloss:0.70493\n",
      "[12]\tvalidation_0-logloss:0.70506\n",
      "[14]\tvalidation_0-logloss:0.70542\n",
      "[16]\tvalidation_0-logloss:0.70842\n",
      "[18]\tvalidation_0-logloss:0.70854\n",
      "[20]\tvalidation_0-logloss:0.70906\n",
      "[22]\tvalidation_0-logloss:0.71109\n",
      "[24]\tvalidation_0-logloss:0.71268\n",
      "[26]\tvalidation_0-logloss:0.71430\n",
      "[28]\tvalidation_0-logloss:0.71625\n",
      "[30]\tvalidation_0-logloss:0.71667\n",
      "[32]\tvalidation_0-logloss:0.71718\n",
      "[34]\tvalidation_0-logloss:0.71926\n",
      "[36]\tvalidation_0-logloss:0.71958\n",
      "[38]\tvalidation_0-logloss:0.72011\n",
      "[40]\tvalidation_0-logloss:0.72034\n",
      "[42]\tvalidation_0-logloss:0.72165\n",
      "[44]\tvalidation_0-logloss:0.72326\n",
      "[46]\tvalidation_0-logloss:0.72329\n",
      "[48]\tvalidation_0-logloss:0.72372\n",
      "[50]\tvalidation_0-logloss:0.72492\n",
      "[52]\tvalidation_0-logloss:0.72657\n",
      "[54]\tvalidation_0-logloss:0.72860\n",
      "[56]\tvalidation_0-logloss:0.72849\n",
      "[58]\tvalidation_0-logloss:0.73053\n",
      "[60]\tvalidation_0-logloss:0.73143\n",
      "[62]\tvalidation_0-logloss:0.73292\n",
      "[64]\tvalidation_0-logloss:0.73332\n",
      "[66]\tvalidation_0-logloss:0.73396\n",
      "[68]\tvalidation_0-logloss:0.73442\n",
      "[70]\tvalidation_0-logloss:0.73489\n",
      "[72]\tvalidation_0-logloss:0.73514\n",
      "[74]\tvalidation_0-logloss:0.73650\n",
      "[76]\tvalidation_0-logloss:0.73728\n",
      "[78]\tvalidation_0-logloss:0.73782\n",
      "[80]\tvalidation_0-logloss:0.73910\n",
      "[82]\tvalidation_0-logloss:0.73990\n",
      "[84]\tvalidation_0-logloss:0.74057\n",
      "[86]\tvalidation_0-logloss:0.74166\n",
      "[88]\tvalidation_0-logloss:0.74442\n",
      "[90]\tvalidation_0-logloss:0.74600\n",
      "[92]\tvalidation_0-logloss:0.74620\n",
      "[94]\tvalidation_0-logloss:0.74759\n",
      "[96]\tvalidation_0-logloss:0.74884\n",
      "[98]\tvalidation_0-logloss:0.74992\n",
      "[100]\tvalidation_0-logloss:0.75000\n",
      "[102]\tvalidation_0-logloss:0.75147\n",
      "[104]\tvalidation_0-logloss:0.75257\n",
      "[106]\tvalidation_0-logloss:0.75243\n",
      "[108]\tvalidation_0-logloss:0.75315\n",
      "[110]\tvalidation_0-logloss:0.75539\n",
      "[112]\tvalidation_0-logloss:0.75828\n",
      "[114]\tvalidation_0-logloss:0.76027\n",
      "[116]\tvalidation_0-logloss:0.76228\n",
      "[118]\tvalidation_0-logloss:0.76315\n",
      "[120]\tvalidation_0-logloss:0.76366\n",
      "[122]\tvalidation_0-logloss:0.76465\n",
      "[124]\tvalidation_0-logloss:0.76322\n",
      "[126]\tvalidation_0-logloss:0.76421\n",
      "[128]\tvalidation_0-logloss:0.76469\n",
      "[130]\tvalidation_0-logloss:0.76511\n",
      "[132]\tvalidation_0-logloss:0.76840\n",
      "[134]\tvalidation_0-logloss:0.76817\n",
      "[136]\tvalidation_0-logloss:0.77050\n",
      "[138]\tvalidation_0-logloss:0.77107\n",
      "[140]\tvalidation_0-logloss:0.77141\n",
      "[142]\tvalidation_0-logloss:0.77334\n",
      "[144]\tvalidation_0-logloss:0.77651\n",
      "[146]\tvalidation_0-logloss:0.77717\n",
      "[148]\tvalidation_0-logloss:0.77852\n",
      "[150]\tvalidation_0-logloss:0.77967\n",
      "[152]\tvalidation_0-logloss:0.78061\n",
      "[154]\tvalidation_0-logloss:0.78070\n",
      "[156]\tvalidation_0-logloss:0.78159\n",
      "[158]\tvalidation_0-logloss:0.78177\n",
      "[160]\tvalidation_0-logloss:0.78232\n",
      "[162]\tvalidation_0-logloss:0.78285\n",
      "[164]\tvalidation_0-logloss:0.78295\n",
      "[166]\tvalidation_0-logloss:0.78306\n",
      "[168]\tvalidation_0-logloss:0.78388\n",
      "[170]\tvalidation_0-logloss:0.78442\n",
      "[172]\tvalidation_0-logloss:0.78445\n",
      "[174]\tvalidation_0-logloss:0.78545\n",
      "[176]\tvalidation_0-logloss:0.78555\n",
      "[178]\tvalidation_0-logloss:0.78527\n",
      "[180]\tvalidation_0-logloss:0.78523\n",
      "[182]\tvalidation_0-logloss:0.78472\n",
      "[184]\tvalidation_0-logloss:0.78548\n",
      "[186]\tvalidation_0-logloss:0.78719\n",
      "[188]\tvalidation_0-logloss:0.78765\n",
      "[190]\tvalidation_0-logloss:0.78734\n",
      "[192]\tvalidation_0-logloss:0.78562\n",
      "[194]\tvalidation_0-logloss:0.78635\n",
      "[196]\tvalidation_0-logloss:0.78785\n",
      "[198]\tvalidation_0-logloss:0.78798\n",
      "[200]\tvalidation_0-logloss:0.78833\n",
      "[202]\tvalidation_0-logloss:0.78880\n",
      "[204]\tvalidation_0-logloss:0.78921\n",
      "[206]\tvalidation_0-logloss:0.79105\n",
      "[208]\tvalidation_0-logloss:0.79172\n",
      "[210]\tvalidation_0-logloss:0.79206\n",
      "[212]\tvalidation_0-logloss:0.79186\n",
      "[214]\tvalidation_0-logloss:0.79390\n",
      "[216]\tvalidation_0-logloss:0.79429\n",
      "[218]\tvalidation_0-logloss:0.79508\n",
      "[220]\tvalidation_0-logloss:0.79582\n",
      "[222]\tvalidation_0-logloss:0.79574\n",
      "[224]\tvalidation_0-logloss:0.79803\n",
      "[226]\tvalidation_0-logloss:0.79780\n",
      "[228]\tvalidation_0-logloss:0.79764\n",
      "[230]\tvalidation_0-logloss:0.79718\n",
      "[232]\tvalidation_0-logloss:0.79745\n",
      "[234]\tvalidation_0-logloss:0.79805\n",
      "[236]\tvalidation_0-logloss:0.80001\n",
      "[238]\tvalidation_0-logloss:0.80019\n",
      "[240]\tvalidation_0-logloss:0.80142\n",
      "[242]\tvalidation_0-logloss:0.80150\n",
      "[244]\tvalidation_0-logloss:0.80159\n",
      "[246]\tvalidation_0-logloss:0.80247\n",
      "[248]\tvalidation_0-logloss:0.80345\n",
      "[250]\tvalidation_0-logloss:0.80353\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:05:59,811] Trial 18 finished with value: 0.697273358561145 and parameters: {'eta': 0.28386261561122755, 'gamma': 0.08410474766780374, 'max_depth': 6, 'min_child_weight': 4, 'lambda': 0.9698882519427183, 'alpha': 0.4168378077713007}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:06:04] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69526\n",
      "[2]\tvalidation_0-logloss:0.69582\n",
      "[4]\tvalidation_0-logloss:0.69502\n",
      "[6]\tvalidation_0-logloss:0.69545\n",
      "[8]\tvalidation_0-logloss:0.69581\n",
      "[10]\tvalidation_0-logloss:0.69578\n",
      "[12]\tvalidation_0-logloss:0.69597\n",
      "[14]\tvalidation_0-logloss:0.69574\n",
      "[16]\tvalidation_0-logloss:0.69604\n",
      "[18]\tvalidation_0-logloss:0.69604\n",
      "[20]\tvalidation_0-logloss:0.69582\n",
      "[22]\tvalidation_0-logloss:0.69577\n",
      "[24]\tvalidation_0-logloss:0.69587\n",
      "[26]\tvalidation_0-logloss:0.69592\n",
      "[28]\tvalidation_0-logloss:0.69549\n",
      "[30]\tvalidation_0-logloss:0.69586\n",
      "[32]\tvalidation_0-logloss:0.69594\n",
      "[34]\tvalidation_0-logloss:0.69705\n",
      "[36]\tvalidation_0-logloss:0.69705\n",
      "[38]\tvalidation_0-logloss:0.69696\n",
      "[40]\tvalidation_0-logloss:0.69653\n",
      "[42]\tvalidation_0-logloss:0.69649\n",
      "[44]\tvalidation_0-logloss:0.69703\n",
      "[46]\tvalidation_0-logloss:0.69664\n",
      "[48]\tvalidation_0-logloss:0.69661\n",
      "[50]\tvalidation_0-logloss:0.69665\n",
      "[52]\tvalidation_0-logloss:0.69651\n",
      "[54]\tvalidation_0-logloss:0.69647\n",
      "[56]\tvalidation_0-logloss:0.69651\n",
      "[58]\tvalidation_0-logloss:0.69653\n",
      "[60]\tvalidation_0-logloss:0.69659\n",
      "[62]\tvalidation_0-logloss:0.69658\n",
      "[64]\tvalidation_0-logloss:0.69627\n",
      "[66]\tvalidation_0-logloss:0.69613\n",
      "[68]\tvalidation_0-logloss:0.69617\n",
      "[70]\tvalidation_0-logloss:0.69695\n",
      "[72]\tvalidation_0-logloss:0.69692\n",
      "[74]\tvalidation_0-logloss:0.69730\n",
      "[76]\tvalidation_0-logloss:0.69728\n",
      "[78]\tvalidation_0-logloss:0.69756\n",
      "[80]\tvalidation_0-logloss:0.69753\n",
      "[82]\tvalidation_0-logloss:0.69776\n",
      "[84]\tvalidation_0-logloss:0.69774\n",
      "[86]\tvalidation_0-logloss:0.69766\n",
      "[88]\tvalidation_0-logloss:0.69762\n",
      "[90]\tvalidation_0-logloss:0.69771\n",
      "[92]\tvalidation_0-logloss:0.69770\n",
      "[94]\tvalidation_0-logloss:0.69789\n",
      "[96]\tvalidation_0-logloss:0.69790\n",
      "[98]\tvalidation_0-logloss:0.69804\n",
      "[100]\tvalidation_0-logloss:0.69799\n",
      "[102]\tvalidation_0-logloss:0.69815\n",
      "[104]\tvalidation_0-logloss:0.69800\n",
      "[106]\tvalidation_0-logloss:0.69804\n",
      "[108]\tvalidation_0-logloss:0.69791\n",
      "[110]\tvalidation_0-logloss:0.69793\n",
      "[112]\tvalidation_0-logloss:0.69792\n",
      "[114]\tvalidation_0-logloss:0.69774\n",
      "[116]\tvalidation_0-logloss:0.69768\n",
      "[118]\tvalidation_0-logloss:0.69820\n",
      "[120]\tvalidation_0-logloss:0.69825\n",
      "[122]\tvalidation_0-logloss:0.69831\n",
      "[124]\tvalidation_0-logloss:0.69826\n",
      "[126]\tvalidation_0-logloss:0.69843\n",
      "[128]\tvalidation_0-logloss:0.69870\n",
      "[130]\tvalidation_0-logloss:0.69886\n",
      "[132]\tvalidation_0-logloss:0.69883\n",
      "[134]\tvalidation_0-logloss:0.69915\n",
      "[136]\tvalidation_0-logloss:0.69912\n",
      "[138]\tvalidation_0-logloss:0.69927\n",
      "[140]\tvalidation_0-logloss:0.69932\n",
      "[142]\tvalidation_0-logloss:0.69937\n",
      "[144]\tvalidation_0-logloss:0.69955\n",
      "[146]\tvalidation_0-logloss:0.69950\n",
      "[148]\tvalidation_0-logloss:0.69956\n",
      "[150]\tvalidation_0-logloss:0.69974\n",
      "[152]\tvalidation_0-logloss:0.70009\n",
      "[154]\tvalidation_0-logloss:0.70015\n",
      "[156]\tvalidation_0-logloss:0.70006\n",
      "[158]\tvalidation_0-logloss:0.70015\n",
      "[160]\tvalidation_0-logloss:0.70046\n",
      "[162]\tvalidation_0-logloss:0.70027\n",
      "[164]\tvalidation_0-logloss:0.70052\n",
      "[166]\tvalidation_0-logloss:0.70051\n",
      "[168]\tvalidation_0-logloss:0.70062\n",
      "[170]\tvalidation_0-logloss:0.70083\n",
      "[172]\tvalidation_0-logloss:0.70077\n",
      "[174]\tvalidation_0-logloss:0.70074\n",
      "[176]\tvalidation_0-logloss:0.70061\n",
      "[178]\tvalidation_0-logloss:0.70064\n",
      "[180]\tvalidation_0-logloss:0.70059\n",
      "[182]\tvalidation_0-logloss:0.70052\n",
      "[184]\tvalidation_0-logloss:0.70059\n",
      "[186]\tvalidation_0-logloss:0.70075\n",
      "[188]\tvalidation_0-logloss:0.70081\n",
      "[190]\tvalidation_0-logloss:0.70092\n",
      "[192]\tvalidation_0-logloss:0.70084\n",
      "[194]\tvalidation_0-logloss:0.70097\n",
      "[196]\tvalidation_0-logloss:0.70093\n",
      "[198]\tvalidation_0-logloss:0.70095\n",
      "[200]\tvalidation_0-logloss:0.70100\n",
      "[202]\tvalidation_0-logloss:0.70107\n",
      "[204]\tvalidation_0-logloss:0.70097\n",
      "[206]\tvalidation_0-logloss:0.70100\n",
      "[208]\tvalidation_0-logloss:0.70100\n",
      "[210]\tvalidation_0-logloss:0.70119\n",
      "[212]\tvalidation_0-logloss:0.70127\n",
      "[214]\tvalidation_0-logloss:0.70181\n",
      "[216]\tvalidation_0-logloss:0.70186\n",
      "[218]\tvalidation_0-logloss:0.70194\n",
      "[220]\tvalidation_0-logloss:0.70195\n",
      "[222]\tvalidation_0-logloss:0.70186\n",
      "[224]\tvalidation_0-logloss:0.70171\n",
      "[226]\tvalidation_0-logloss:0.70172\n",
      "[228]\tvalidation_0-logloss:0.70158\n",
      "[230]\tvalidation_0-logloss:0.70163\n",
      "[232]\tvalidation_0-logloss:0.70182\n",
      "[234]\tvalidation_0-logloss:0.70184\n",
      "[236]\tvalidation_0-logloss:0.70195\n",
      "[238]\tvalidation_0-logloss:0.70212\n",
      "[240]\tvalidation_0-logloss:0.70219\n",
      "[242]\tvalidation_0-logloss:0.70269\n",
      "[244]\tvalidation_0-logloss:0.70262\n",
      "[246]\tvalidation_0-logloss:0.70248\n",
      "[248]\tvalidation_0-logloss:0.70248\n",
      "[250]\tvalidation_0-logloss:0.70297\n",
      "[252]\tvalidation_0-logloss:0.70296\n",
      "[254]\tvalidation_0-logloss:0.70322\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:07:05,768] Trial 19 finished with value: 0.6950201521477735 and parameters: {'eta': 0.18666314398486286, 'gamma': 0.2598643549239951, 'max_depth': 2, 'min_child_weight': 1, 'lambda': 0.3934493542170192, 'alpha': 0.1638351888143723}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:07:10] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69515\n",
      "[2]\tvalidation_0-logloss:0.69651\n",
      "[4]\tvalidation_0-logloss:0.69699\n",
      "[6]\tvalidation_0-logloss:0.69838\n",
      "[8]\tvalidation_0-logloss:0.69913\n",
      "[10]\tvalidation_0-logloss:0.70044\n",
      "[12]\tvalidation_0-logloss:0.70202\n",
      "[14]\tvalidation_0-logloss:0.70278\n",
      "[16]\tvalidation_0-logloss:0.70276\n",
      "[18]\tvalidation_0-logloss:0.70342\n",
      "[20]\tvalidation_0-logloss:0.70406\n",
      "[22]\tvalidation_0-logloss:0.70503\n",
      "[24]\tvalidation_0-logloss:0.70502\n",
      "[26]\tvalidation_0-logloss:0.70505\n",
      "[28]\tvalidation_0-logloss:0.70529\n",
      "[30]\tvalidation_0-logloss:0.70536\n",
      "[32]\tvalidation_0-logloss:0.70643\n",
      "[34]\tvalidation_0-logloss:0.70649\n",
      "[36]\tvalidation_0-logloss:0.70755\n",
      "[38]\tvalidation_0-logloss:0.70871\n",
      "[40]\tvalidation_0-logloss:0.70876\n",
      "[42]\tvalidation_0-logloss:0.70876\n",
      "[44]\tvalidation_0-logloss:0.70892\n",
      "[46]\tvalidation_0-logloss:0.70898\n",
      "[48]\tvalidation_0-logloss:0.70935\n",
      "[50]\tvalidation_0-logloss:0.71014\n",
      "[52]\tvalidation_0-logloss:0.71207\n",
      "[54]\tvalidation_0-logloss:0.71239\n",
      "[56]\tvalidation_0-logloss:0.71299\n",
      "[58]\tvalidation_0-logloss:0.71370\n",
      "[60]\tvalidation_0-logloss:0.71479\n",
      "[62]\tvalidation_0-logloss:0.71566\n",
      "[64]\tvalidation_0-logloss:0.71644\n",
      "[66]\tvalidation_0-logloss:0.71733\n",
      "[68]\tvalidation_0-logloss:0.71768\n",
      "[70]\tvalidation_0-logloss:0.71819\n",
      "[72]\tvalidation_0-logloss:0.71842\n",
      "[74]\tvalidation_0-logloss:0.72004\n",
      "[76]\tvalidation_0-logloss:0.72069\n",
      "[78]\tvalidation_0-logloss:0.72282\n",
      "[80]\tvalidation_0-logloss:0.72348\n",
      "[82]\tvalidation_0-logloss:0.72424\n",
      "[84]\tvalidation_0-logloss:0.72495\n",
      "[86]\tvalidation_0-logloss:0.72538\n",
      "[88]\tvalidation_0-logloss:0.72556\n",
      "[90]\tvalidation_0-logloss:0.72611\n",
      "[92]\tvalidation_0-logloss:0.72660\n",
      "[94]\tvalidation_0-logloss:0.72688\n",
      "[96]\tvalidation_0-logloss:0.72780\n",
      "[98]\tvalidation_0-logloss:0.72798\n",
      "[100]\tvalidation_0-logloss:0.72888\n",
      "[102]\tvalidation_0-logloss:0.72919\n",
      "[104]\tvalidation_0-logloss:0.72942\n",
      "[106]\tvalidation_0-logloss:0.73157\n",
      "[108]\tvalidation_0-logloss:0.73232\n",
      "[110]\tvalidation_0-logloss:0.73319\n",
      "[112]\tvalidation_0-logloss:0.73385\n",
      "[114]\tvalidation_0-logloss:0.73448\n",
      "[116]\tvalidation_0-logloss:0.73485\n",
      "[118]\tvalidation_0-logloss:0.73513\n",
      "[120]\tvalidation_0-logloss:0.73506\n",
      "[122]\tvalidation_0-logloss:0.73536\n",
      "[124]\tvalidation_0-logloss:0.73552\n",
      "[126]\tvalidation_0-logloss:0.73595\n",
      "[128]\tvalidation_0-logloss:0.73689\n",
      "[130]\tvalidation_0-logloss:0.73670\n",
      "[132]\tvalidation_0-logloss:0.73517\n",
      "[134]\tvalidation_0-logloss:0.73580\n",
      "[136]\tvalidation_0-logloss:0.73609\n",
      "[138]\tvalidation_0-logloss:0.73715\n",
      "[140]\tvalidation_0-logloss:0.73751\n",
      "[142]\tvalidation_0-logloss:0.73776\n",
      "[144]\tvalidation_0-logloss:0.73835\n",
      "[146]\tvalidation_0-logloss:0.73852\n",
      "[148]\tvalidation_0-logloss:0.73919\n",
      "[150]\tvalidation_0-logloss:0.73835\n",
      "[152]\tvalidation_0-logloss:0.73846\n",
      "[154]\tvalidation_0-logloss:0.73838\n",
      "[156]\tvalidation_0-logloss:0.74026\n",
      "[158]\tvalidation_0-logloss:0.74044\n",
      "[160]\tvalidation_0-logloss:0.74075\n",
      "[162]\tvalidation_0-logloss:0.74094\n",
      "[164]\tvalidation_0-logloss:0.74168\n",
      "[166]\tvalidation_0-logloss:0.74287\n",
      "[168]\tvalidation_0-logloss:0.74312\n",
      "[170]\tvalidation_0-logloss:0.74377\n",
      "[172]\tvalidation_0-logloss:0.74448\n",
      "[174]\tvalidation_0-logloss:0.74498\n",
      "[176]\tvalidation_0-logloss:0.74581\n",
      "[178]\tvalidation_0-logloss:0.74632\n",
      "[180]\tvalidation_0-logloss:0.74708\n",
      "[182]\tvalidation_0-logloss:0.74768\n",
      "[184]\tvalidation_0-logloss:0.74872\n",
      "[186]\tvalidation_0-logloss:0.74914\n",
      "[188]\tvalidation_0-logloss:0.75108\n",
      "[190]\tvalidation_0-logloss:0.75227\n",
      "[192]\tvalidation_0-logloss:0.75330\n",
      "[194]\tvalidation_0-logloss:0.75372\n",
      "[196]\tvalidation_0-logloss:0.75413\n",
      "[198]\tvalidation_0-logloss:0.75521\n",
      "[200]\tvalidation_0-logloss:0.75524\n",
      "[202]\tvalidation_0-logloss:0.75572\n",
      "[204]\tvalidation_0-logloss:0.75582\n",
      "[206]\tvalidation_0-logloss:0.75602\n",
      "[208]\tvalidation_0-logloss:0.75643\n",
      "[210]\tvalidation_0-logloss:0.75669\n",
      "[212]\tvalidation_0-logloss:0.75709\n",
      "[214]\tvalidation_0-logloss:0.75787\n",
      "[216]\tvalidation_0-logloss:0.75842\n",
      "[218]\tvalidation_0-logloss:0.75865\n",
      "[220]\tvalidation_0-logloss:0.75881\n",
      "[222]\tvalidation_0-logloss:0.75909\n",
      "[224]\tvalidation_0-logloss:0.76029\n",
      "[226]\tvalidation_0-logloss:0.76080\n",
      "[228]\tvalidation_0-logloss:0.76003\n",
      "[230]\tvalidation_0-logloss:0.75988\n",
      "[232]\tvalidation_0-logloss:0.76070\n",
      "[234]\tvalidation_0-logloss:0.76083\n",
      "[236]\tvalidation_0-logloss:0.76159\n",
      "[238]\tvalidation_0-logloss:0.76236\n",
      "[240]\tvalidation_0-logloss:0.76300\n",
      "[242]\tvalidation_0-logloss:0.76310\n",
      "[244]\tvalidation_0-logloss:0.76308\n",
      "[246]\tvalidation_0-logloss:0.76370\n",
      "[248]\tvalidation_0-logloss:0.76351\n",
      "[249]\tvalidation_0-logloss:0.76354\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:08:37,059] Trial 20 finished with value: 0.6951535707718888 and parameters: {'eta': 0.12648068845302954, 'gamma': 0.420560437602176, 'max_depth': 8, 'min_child_weight': 3, 'lambda': 0.23099710179938332, 'alpha': 0.46521090748604216}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:08:42] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69527\n",
      "[2]\tvalidation_0-logloss:0.69460\n",
      "[4]\tvalidation_0-logloss:0.69456\n",
      "[6]\tvalidation_0-logloss:0.69531\n",
      "[8]\tvalidation_0-logloss:0.69484\n",
      "[10]\tvalidation_0-logloss:0.69547\n",
      "[12]\tvalidation_0-logloss:0.69538\n",
      "[14]\tvalidation_0-logloss:0.69518\n",
      "[16]\tvalidation_0-logloss:0.69537\n",
      "[18]\tvalidation_0-logloss:0.69544\n",
      "[20]\tvalidation_0-logloss:0.69602\n",
      "[22]\tvalidation_0-logloss:0.69629\n",
      "[24]\tvalidation_0-logloss:0.69692\n",
      "[26]\tvalidation_0-logloss:0.69718\n",
      "[28]\tvalidation_0-logloss:0.69654\n",
      "[30]\tvalidation_0-logloss:0.69672\n",
      "[32]\tvalidation_0-logloss:0.69773\n",
      "[34]\tvalidation_0-logloss:0.69755\n",
      "[36]\tvalidation_0-logloss:0.69759\n",
      "[38]\tvalidation_0-logloss:0.69735\n",
      "[40]\tvalidation_0-logloss:0.69747\n",
      "[42]\tvalidation_0-logloss:0.69755\n",
      "[44]\tvalidation_0-logloss:0.69806\n",
      "[46]\tvalidation_0-logloss:0.69816\n",
      "[48]\tvalidation_0-logloss:0.69813\n",
      "[50]\tvalidation_0-logloss:0.69809\n",
      "[52]\tvalidation_0-logloss:0.69855\n",
      "[54]\tvalidation_0-logloss:0.69843\n",
      "[56]\tvalidation_0-logloss:0.69844\n",
      "[58]\tvalidation_0-logloss:0.69936\n",
      "[60]\tvalidation_0-logloss:0.69954\n",
      "[62]\tvalidation_0-logloss:0.69966\n",
      "[64]\tvalidation_0-logloss:0.69969\n",
      "[66]\tvalidation_0-logloss:0.69981\n",
      "[68]\tvalidation_0-logloss:0.69954\n",
      "[70]\tvalidation_0-logloss:0.69946\n",
      "[72]\tvalidation_0-logloss:0.69994\n",
      "[74]\tvalidation_0-logloss:0.70043\n",
      "[76]\tvalidation_0-logloss:0.70056\n",
      "[78]\tvalidation_0-logloss:0.70061\n",
      "[80]\tvalidation_0-logloss:0.70058\n",
      "[82]\tvalidation_0-logloss:0.70021\n",
      "[84]\tvalidation_0-logloss:0.70030\n",
      "[86]\tvalidation_0-logloss:0.70036\n",
      "[88]\tvalidation_0-logloss:0.70043\n",
      "[90]\tvalidation_0-logloss:0.70063\n",
      "[92]\tvalidation_0-logloss:0.70066\n",
      "[94]\tvalidation_0-logloss:0.69995\n",
      "[96]\tvalidation_0-logloss:0.69998\n",
      "[98]\tvalidation_0-logloss:0.70007\n",
      "[100]\tvalidation_0-logloss:0.70017\n",
      "[102]\tvalidation_0-logloss:0.70023\n",
      "[104]\tvalidation_0-logloss:0.70037\n",
      "[106]\tvalidation_0-logloss:0.70035\n",
      "[108]\tvalidation_0-logloss:0.70048\n",
      "[110]\tvalidation_0-logloss:0.70086\n",
      "[112]\tvalidation_0-logloss:0.70086\n",
      "[114]\tvalidation_0-logloss:0.70062\n",
      "[116]\tvalidation_0-logloss:0.70054\n",
      "[118]\tvalidation_0-logloss:0.70054\n",
      "[120]\tvalidation_0-logloss:0.70072\n",
      "[122]\tvalidation_0-logloss:0.70116\n",
      "[124]\tvalidation_0-logloss:0.70124\n",
      "[126]\tvalidation_0-logloss:0.70130\n",
      "[128]\tvalidation_0-logloss:0.70144\n",
      "[130]\tvalidation_0-logloss:0.70142\n",
      "[132]\tvalidation_0-logloss:0.70123\n",
      "[134]\tvalidation_0-logloss:0.70113\n",
      "[136]\tvalidation_0-logloss:0.70101\n",
      "[138]\tvalidation_0-logloss:0.70095\n",
      "[140]\tvalidation_0-logloss:0.70100\n",
      "[142]\tvalidation_0-logloss:0.70100\n",
      "[144]\tvalidation_0-logloss:0.70092\n",
      "[146]\tvalidation_0-logloss:0.70176\n",
      "[148]\tvalidation_0-logloss:0.70172\n",
      "[150]\tvalidation_0-logloss:0.70175\n",
      "[152]\tvalidation_0-logloss:0.70191\n",
      "[154]\tvalidation_0-logloss:0.70190\n",
      "[156]\tvalidation_0-logloss:0.70216\n",
      "[158]\tvalidation_0-logloss:0.70214\n",
      "[160]\tvalidation_0-logloss:0.70174\n",
      "[162]\tvalidation_0-logloss:0.70204\n",
      "[164]\tvalidation_0-logloss:0.70193\n",
      "[166]\tvalidation_0-logloss:0.70199\n",
      "[168]\tvalidation_0-logloss:0.70193\n",
      "[170]\tvalidation_0-logloss:0.70227\n",
      "[172]\tvalidation_0-logloss:0.70265\n",
      "[174]\tvalidation_0-logloss:0.70193\n",
      "[176]\tvalidation_0-logloss:0.70183\n",
      "[178]\tvalidation_0-logloss:0.70180\n",
      "[180]\tvalidation_0-logloss:0.70174\n",
      "[182]\tvalidation_0-logloss:0.70202\n",
      "[184]\tvalidation_0-logloss:0.70234\n",
      "[186]\tvalidation_0-logloss:0.70255\n",
      "[188]\tvalidation_0-logloss:0.70313\n",
      "[190]\tvalidation_0-logloss:0.70312\n",
      "[192]\tvalidation_0-logloss:0.70321\n",
      "[194]\tvalidation_0-logloss:0.70305\n",
      "[196]\tvalidation_0-logloss:0.70297\n",
      "[198]\tvalidation_0-logloss:0.70290\n",
      "[200]\tvalidation_0-logloss:0.70277\n",
      "[202]\tvalidation_0-logloss:0.70303\n",
      "[204]\tvalidation_0-logloss:0.70345\n",
      "[206]\tvalidation_0-logloss:0.70395\n",
      "[208]\tvalidation_0-logloss:0.70378\n",
      "[210]\tvalidation_0-logloss:0.70367\n",
      "[212]\tvalidation_0-logloss:0.70382\n",
      "[214]\tvalidation_0-logloss:0.70413\n",
      "[216]\tvalidation_0-logloss:0.70420\n",
      "[218]\tvalidation_0-logloss:0.70362\n",
      "[220]\tvalidation_0-logloss:0.70344\n",
      "[222]\tvalidation_0-logloss:0.70351\n",
      "[224]\tvalidation_0-logloss:0.70300\n",
      "[226]\tvalidation_0-logloss:0.70274\n",
      "[228]\tvalidation_0-logloss:0.70271\n",
      "[230]\tvalidation_0-logloss:0.70268\n",
      "[232]\tvalidation_0-logloss:0.70240\n",
      "[234]\tvalidation_0-logloss:0.70245\n",
      "[236]\tvalidation_0-logloss:0.70250\n",
      "[238]\tvalidation_0-logloss:0.70300\n",
      "[240]\tvalidation_0-logloss:0.70296\n",
      "[242]\tvalidation_0-logloss:0.70311\n",
      "[244]\tvalidation_0-logloss:0.70349\n",
      "[246]\tvalidation_0-logloss:0.70348\n",
      "[248]\tvalidation_0-logloss:0.70356\n",
      "[250]\tvalidation_0-logloss:0.70353\n",
      "[252]\tvalidation_0-logloss:0.70327\n",
      "[253]\tvalidation_0-logloss:0.70339\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:09:45,252] Trial 21 finished with value: 0.6942074170648159 and parameters: {'eta': 0.22478357502735158, 'gamma': 0.018600727224185855, 'max_depth': 2, 'min_child_weight': 0, 'lambda': 0.01277723220343676, 'alpha': 0.8459566942940262}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:09:50] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69589\n",
      "[2]\tvalidation_0-logloss:0.69507\n",
      "[4]\tvalidation_0-logloss:0.69481\n",
      "[6]\tvalidation_0-logloss:0.69406\n",
      "[8]\tvalidation_0-logloss:0.69580\n",
      "[10]\tvalidation_0-logloss:0.69642\n",
      "[12]\tvalidation_0-logloss:0.69663\n",
      "[14]\tvalidation_0-logloss:0.69698\n",
      "[16]\tvalidation_0-logloss:0.69735\n",
      "[18]\tvalidation_0-logloss:0.69729\n",
      "[20]\tvalidation_0-logloss:0.69731\n",
      "[22]\tvalidation_0-logloss:0.69807\n",
      "[24]\tvalidation_0-logloss:0.69879\n",
      "[26]\tvalidation_0-logloss:0.69907\n",
      "[28]\tvalidation_0-logloss:0.69882\n",
      "[30]\tvalidation_0-logloss:0.69851\n",
      "[32]\tvalidation_0-logloss:0.69959\n",
      "[34]\tvalidation_0-logloss:0.69933\n",
      "[36]\tvalidation_0-logloss:0.69927\n",
      "[38]\tvalidation_0-logloss:0.69983\n",
      "[40]\tvalidation_0-logloss:0.70091\n",
      "[42]\tvalidation_0-logloss:0.70117\n",
      "[44]\tvalidation_0-logloss:0.70181\n",
      "[46]\tvalidation_0-logloss:0.70194\n",
      "[48]\tvalidation_0-logloss:0.70192\n",
      "[50]\tvalidation_0-logloss:0.70206\n",
      "[52]\tvalidation_0-logloss:0.70206\n",
      "[54]\tvalidation_0-logloss:0.70194\n",
      "[56]\tvalidation_0-logloss:0.70473\n",
      "[58]\tvalidation_0-logloss:0.70438\n",
      "[60]\tvalidation_0-logloss:0.70406\n",
      "[62]\tvalidation_0-logloss:0.70510\n",
      "[64]\tvalidation_0-logloss:0.70573\n",
      "[66]\tvalidation_0-logloss:0.70628\n",
      "[68]\tvalidation_0-logloss:0.70632\n",
      "[70]\tvalidation_0-logloss:0.70634\n",
      "[72]\tvalidation_0-logloss:0.70690\n",
      "[74]\tvalidation_0-logloss:0.70695\n",
      "[76]\tvalidation_0-logloss:0.70673\n",
      "[78]\tvalidation_0-logloss:0.70698\n",
      "[80]\tvalidation_0-logloss:0.70831\n",
      "[82]\tvalidation_0-logloss:0.70798\n",
      "[84]\tvalidation_0-logloss:0.70863\n",
      "[86]\tvalidation_0-logloss:0.70831\n",
      "[88]\tvalidation_0-logloss:0.70926\n",
      "[90]\tvalidation_0-logloss:0.70818\n",
      "[92]\tvalidation_0-logloss:0.70844\n",
      "[94]\tvalidation_0-logloss:0.70864\n",
      "[96]\tvalidation_0-logloss:0.70861\n",
      "[98]\tvalidation_0-logloss:0.70855\n",
      "[100]\tvalidation_0-logloss:0.70873\n",
      "[102]\tvalidation_0-logloss:0.70900\n",
      "[104]\tvalidation_0-logloss:0.70963\n",
      "[106]\tvalidation_0-logloss:0.70929\n",
      "[108]\tvalidation_0-logloss:0.70937\n",
      "[110]\tvalidation_0-logloss:0.70929\n",
      "[112]\tvalidation_0-logloss:0.70938\n",
      "[114]\tvalidation_0-logloss:0.71002\n",
      "[116]\tvalidation_0-logloss:0.71029\n",
      "[118]\tvalidation_0-logloss:0.71033\n",
      "[120]\tvalidation_0-logloss:0.71042\n",
      "[122]\tvalidation_0-logloss:0.71067\n",
      "[124]\tvalidation_0-logloss:0.71090\n",
      "[126]\tvalidation_0-logloss:0.71118\n",
      "[128]\tvalidation_0-logloss:0.71165\n",
      "[130]\tvalidation_0-logloss:0.71191\n",
      "[132]\tvalidation_0-logloss:0.71212\n",
      "[134]\tvalidation_0-logloss:0.71216\n",
      "[136]\tvalidation_0-logloss:0.71225\n",
      "[138]\tvalidation_0-logloss:0.71260\n",
      "[140]\tvalidation_0-logloss:0.71307\n",
      "[142]\tvalidation_0-logloss:0.71317\n",
      "[144]\tvalidation_0-logloss:0.71358\n",
      "[146]\tvalidation_0-logloss:0.71406\n",
      "[148]\tvalidation_0-logloss:0.71378\n",
      "[150]\tvalidation_0-logloss:0.71414\n",
      "[152]\tvalidation_0-logloss:0.71419\n",
      "[154]\tvalidation_0-logloss:0.71452\n",
      "[156]\tvalidation_0-logloss:0.71470\n",
      "[158]\tvalidation_0-logloss:0.71578\n",
      "[160]\tvalidation_0-logloss:0.71641\n",
      "[162]\tvalidation_0-logloss:0.71668\n",
      "[164]\tvalidation_0-logloss:0.71685\n",
      "[166]\tvalidation_0-logloss:0.71779\n",
      "[168]\tvalidation_0-logloss:0.71814\n",
      "[170]\tvalidation_0-logloss:0.71797\n",
      "[172]\tvalidation_0-logloss:0.71828\n",
      "[174]\tvalidation_0-logloss:0.71802\n",
      "[176]\tvalidation_0-logloss:0.71829\n",
      "[178]\tvalidation_0-logloss:0.71838\n",
      "[180]\tvalidation_0-logloss:0.71883\n",
      "[182]\tvalidation_0-logloss:0.71899\n",
      "[184]\tvalidation_0-logloss:0.71911\n",
      "[186]\tvalidation_0-logloss:0.71975\n",
      "[188]\tvalidation_0-logloss:0.71987\n",
      "[190]\tvalidation_0-logloss:0.72125\n",
      "[192]\tvalidation_0-logloss:0.72180\n",
      "[194]\tvalidation_0-logloss:0.72205\n",
      "[196]\tvalidation_0-logloss:0.72187\n",
      "[198]\tvalidation_0-logloss:0.72218\n",
      "[200]\tvalidation_0-logloss:0.72227\n",
      "[202]\tvalidation_0-logloss:0.72279\n",
      "[204]\tvalidation_0-logloss:0.72310\n",
      "[206]\tvalidation_0-logloss:0.72319\n",
      "[208]\tvalidation_0-logloss:0.72378\n",
      "[210]\tvalidation_0-logloss:0.72423\n",
      "[212]\tvalidation_0-logloss:0.72554\n",
      "[214]\tvalidation_0-logloss:0.72624\n",
      "[216]\tvalidation_0-logloss:0.72653\n",
      "[218]\tvalidation_0-logloss:0.72689\n",
      "[220]\tvalidation_0-logloss:0.72753\n",
      "[222]\tvalidation_0-logloss:0.72770\n",
      "[224]\tvalidation_0-logloss:0.72741\n",
      "[226]\tvalidation_0-logloss:0.72751\n",
      "[228]\tvalidation_0-logloss:0.72820\n",
      "[230]\tvalidation_0-logloss:0.72796\n",
      "[232]\tvalidation_0-logloss:0.72808\n",
      "[234]\tvalidation_0-logloss:0.72824\n",
      "[236]\tvalidation_0-logloss:0.72876\n",
      "[238]\tvalidation_0-logloss:0.72878\n",
      "[240]\tvalidation_0-logloss:0.72918\n",
      "[242]\tvalidation_0-logloss:0.72977\n",
      "[244]\tvalidation_0-logloss:0.73033\n",
      "[246]\tvalidation_0-logloss:0.73174\n",
      "[248]\tvalidation_0-logloss:0.73188\n",
      "[250]\tvalidation_0-logloss:0.73247\n",
      "[252]\tvalidation_0-logloss:0.73264\n",
      "[254]\tvalidation_0-logloss:0.73287\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:11:00,512] Trial 22 finished with value: 0.6939976156218651 and parameters: {'eta': 0.2271859709111192, 'gamma': 0.009063115275437222, 'max_depth': 4, 'min_child_weight': 0, 'lambda': 0.0015093213625011238, 'alpha': 0.8310201421534563}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:11:05] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69533\n",
      "[2]\tvalidation_0-logloss:0.69524\n",
      "[4]\tvalidation_0-logloss:0.69598\n",
      "[6]\tvalidation_0-logloss:0.69573\n",
      "[8]\tvalidation_0-logloss:0.69559\n",
      "[10]\tvalidation_0-logloss:0.69534\n",
      "[12]\tvalidation_0-logloss:0.69522\n",
      "[14]\tvalidation_0-logloss:0.69500\n",
      "[16]\tvalidation_0-logloss:0.69512\n",
      "[18]\tvalidation_0-logloss:0.69529\n",
      "[20]\tvalidation_0-logloss:0.69534\n",
      "[22]\tvalidation_0-logloss:0.69536\n",
      "[24]\tvalidation_0-logloss:0.69533\n",
      "[26]\tvalidation_0-logloss:0.69527\n",
      "[28]\tvalidation_0-logloss:0.69534\n",
      "[30]\tvalidation_0-logloss:0.69584\n",
      "[32]\tvalidation_0-logloss:0.69561\n",
      "[34]\tvalidation_0-logloss:0.69556\n",
      "[36]\tvalidation_0-logloss:0.69548\n",
      "[38]\tvalidation_0-logloss:0.69562\n",
      "[40]\tvalidation_0-logloss:0.69569\n",
      "[42]\tvalidation_0-logloss:0.69568\n",
      "[44]\tvalidation_0-logloss:0.69554\n",
      "[46]\tvalidation_0-logloss:0.69549\n",
      "[48]\tvalidation_0-logloss:0.69557\n",
      "[50]\tvalidation_0-logloss:0.69546\n",
      "[52]\tvalidation_0-logloss:0.69572\n",
      "[54]\tvalidation_0-logloss:0.69570\n",
      "[56]\tvalidation_0-logloss:0.69566\n",
      "[58]\tvalidation_0-logloss:0.69569\n",
      "[60]\tvalidation_0-logloss:0.69571\n",
      "[62]\tvalidation_0-logloss:0.69599\n",
      "[64]\tvalidation_0-logloss:0.69591\n",
      "[66]\tvalidation_0-logloss:0.69593\n",
      "[68]\tvalidation_0-logloss:0.69506\n",
      "[70]\tvalidation_0-logloss:0.69489\n",
      "[72]\tvalidation_0-logloss:0.69502\n",
      "[74]\tvalidation_0-logloss:0.69528\n",
      "[76]\tvalidation_0-logloss:0.69537\n",
      "[78]\tvalidation_0-logloss:0.69543\n",
      "[80]\tvalidation_0-logloss:0.69539\n",
      "[82]\tvalidation_0-logloss:0.69560\n",
      "[84]\tvalidation_0-logloss:0.69548\n",
      "[86]\tvalidation_0-logloss:0.69540\n",
      "[88]\tvalidation_0-logloss:0.69527\n",
      "[90]\tvalidation_0-logloss:0.69530\n",
      "[92]\tvalidation_0-logloss:0.69557\n",
      "[94]\tvalidation_0-logloss:0.69561\n",
      "[96]\tvalidation_0-logloss:0.69568\n",
      "[98]\tvalidation_0-logloss:0.69617\n",
      "[100]\tvalidation_0-logloss:0.69615\n",
      "[102]\tvalidation_0-logloss:0.69627\n",
      "[104]\tvalidation_0-logloss:0.69612\n",
      "[106]\tvalidation_0-logloss:0.69679\n",
      "[108]\tvalidation_0-logloss:0.69695\n",
      "[110]\tvalidation_0-logloss:0.69692\n",
      "[112]\tvalidation_0-logloss:0.69663\n",
      "[114]\tvalidation_0-logloss:0.69679\n",
      "[116]\tvalidation_0-logloss:0.69687\n",
      "[118]\tvalidation_0-logloss:0.69691\n",
      "[120]\tvalidation_0-logloss:0.69693\n",
      "[122]\tvalidation_0-logloss:0.69700\n",
      "[124]\tvalidation_0-logloss:0.69708\n",
      "[126]\tvalidation_0-logloss:0.69701\n",
      "[128]\tvalidation_0-logloss:0.69706\n",
      "[130]\tvalidation_0-logloss:0.69729\n",
      "[132]\tvalidation_0-logloss:0.69748\n",
      "[134]\tvalidation_0-logloss:0.69741\n",
      "[136]\tvalidation_0-logloss:0.69747\n",
      "[138]\tvalidation_0-logloss:0.69768\n",
      "[140]\tvalidation_0-logloss:0.69776\n",
      "[142]\tvalidation_0-logloss:0.69778\n",
      "[144]\tvalidation_0-logloss:0.69843\n",
      "[146]\tvalidation_0-logloss:0.69838\n",
      "[148]\tvalidation_0-logloss:0.69841\n",
      "[150]\tvalidation_0-logloss:0.69839\n",
      "[152]\tvalidation_0-logloss:0.69839\n",
      "[154]\tvalidation_0-logloss:0.69793\n",
      "[156]\tvalidation_0-logloss:0.69773\n",
      "[158]\tvalidation_0-logloss:0.69773\n",
      "[160]\tvalidation_0-logloss:0.69808\n",
      "[162]\tvalidation_0-logloss:0.69815\n",
      "[164]\tvalidation_0-logloss:0.69818\n",
      "[166]\tvalidation_0-logloss:0.69807\n",
      "[168]\tvalidation_0-logloss:0.69821\n",
      "[170]\tvalidation_0-logloss:0.69816\n",
      "[172]\tvalidation_0-logloss:0.69795\n",
      "[174]\tvalidation_0-logloss:0.69798\n",
      "[176]\tvalidation_0-logloss:0.69821\n",
      "[178]\tvalidation_0-logloss:0.69819\n",
      "[180]\tvalidation_0-logloss:0.69812\n",
      "[182]\tvalidation_0-logloss:0.69807\n",
      "[184]\tvalidation_0-logloss:0.69803\n",
      "[186]\tvalidation_0-logloss:0.69787\n",
      "[188]\tvalidation_0-logloss:0.69799\n",
      "[190]\tvalidation_0-logloss:0.69808\n",
      "[192]\tvalidation_0-logloss:0.69822\n",
      "[194]\tvalidation_0-logloss:0.69829\n",
      "[196]\tvalidation_0-logloss:0.69830\n",
      "[198]\tvalidation_0-logloss:0.69835\n",
      "[200]\tvalidation_0-logloss:0.69901\n",
      "[202]\tvalidation_0-logloss:0.69905\n",
      "[204]\tvalidation_0-logloss:0.69907\n",
      "[206]\tvalidation_0-logloss:0.69922\n",
      "[208]\tvalidation_0-logloss:0.69939\n",
      "[210]\tvalidation_0-logloss:0.69948\n",
      "[212]\tvalidation_0-logloss:0.69964\n",
      "[214]\tvalidation_0-logloss:0.69934\n",
      "[216]\tvalidation_0-logloss:0.69946\n",
      "[218]\tvalidation_0-logloss:0.69998\n",
      "[220]\tvalidation_0-logloss:0.70008\n",
      "[222]\tvalidation_0-logloss:0.70060\n",
      "[224]\tvalidation_0-logloss:0.70103\n",
      "[226]\tvalidation_0-logloss:0.70102\n",
      "[228]\tvalidation_0-logloss:0.70102\n",
      "[230]\tvalidation_0-logloss:0.70067\n",
      "[232]\tvalidation_0-logloss:0.70065\n",
      "[234]\tvalidation_0-logloss:0.70067\n",
      "[236]\tvalidation_0-logloss:0.70077\n",
      "[238]\tvalidation_0-logloss:0.70080\n",
      "[240]\tvalidation_0-logloss:0.70135\n",
      "[242]\tvalidation_0-logloss:0.70144\n",
      "[244]\tvalidation_0-logloss:0.70148\n",
      "[246]\tvalidation_0-logloss:0.70149\n",
      "[248]\tvalidation_0-logloss:0.70139\n",
      "[250]\tvalidation_0-logloss:0.70153\n",
      "[252]\tvalidation_0-logloss:0.70155\n",
      "[254]\tvalidation_0-logloss:0.70149\n",
      "[256]\tvalidation_0-logloss:0.70148\n",
      "[258]\tvalidation_0-logloss:0.70194\n",
      "[260]\tvalidation_0-logloss:0.70223\n",
      "[262]\tvalidation_0-logloss:0.70227\n",
      "[264]\tvalidation_0-logloss:0.70261\n",
      "[266]\tvalidation_0-logloss:0.70261\n",
      "[268]\tvalidation_0-logloss:0.70270\n",
      "[270]\tvalidation_0-logloss:0.70281\n",
      "[272]\tvalidation_0-logloss:0.70285\n",
      "[274]\tvalidation_0-logloss:0.70253\n",
      "[276]\tvalidation_0-logloss:0.70261\n",
      "[278]\tvalidation_0-logloss:0.70265\n",
      "[280]\tvalidation_0-logloss:0.70252\n",
      "[282]\tvalidation_0-logloss:0.70261\n",
      "[284]\tvalidation_0-logloss:0.70250\n",
      "[286]\tvalidation_0-logloss:0.70192\n",
      "[288]\tvalidation_0-logloss:0.70191\n",
      "[290]\tvalidation_0-logloss:0.70186\n",
      "[292]\tvalidation_0-logloss:0.70183\n",
      "[294]\tvalidation_0-logloss:0.70198\n",
      "[296]\tvalidation_0-logloss:0.70199\n",
      "[298]\tvalidation_0-logloss:0.70209\n",
      "[300]\tvalidation_0-logloss:0.70216\n",
      "[302]\tvalidation_0-logloss:0.70273\n",
      "[304]\tvalidation_0-logloss:0.70278\n",
      "[306]\tvalidation_0-logloss:0.70292\n",
      "[308]\tvalidation_0-logloss:0.70301\n",
      "[310]\tvalidation_0-logloss:0.70302\n",
      "[312]\tvalidation_0-logloss:0.70308\n",
      "[314]\tvalidation_0-logloss:0.70322\n",
      "[316]\tvalidation_0-logloss:0.70361\n",
      "[318]\tvalidation_0-logloss:0.70393\n",
      "[319]\tvalidation_0-logloss:0.70391\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:12:34,706] Trial 23 finished with value: 0.694886011021865 and parameters: {'eta': 0.07849265547765678, 'gamma': 0.12260782938409433, 'max_depth': 4, 'min_child_weight': 1, 'lambda': 0.09449598167470534, 'alpha': 0.5930432085465351}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:12:39] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69544\n",
      "[2]\tvalidation_0-logloss:0.69603\n",
      "[4]\tvalidation_0-logloss:0.69560\n",
      "[6]\tvalidation_0-logloss:0.69580\n",
      "[8]\tvalidation_0-logloss:0.69607\n",
      "[10]\tvalidation_0-logloss:0.69595\n",
      "[12]\tvalidation_0-logloss:0.69614\n",
      "[14]\tvalidation_0-logloss:0.69610\n",
      "[16]\tvalidation_0-logloss:0.69625\n",
      "[18]\tvalidation_0-logloss:0.69615\n",
      "[20]\tvalidation_0-logloss:0.69611\n",
      "[22]\tvalidation_0-logloss:0.69640\n",
      "[24]\tvalidation_0-logloss:0.69617\n",
      "[26]\tvalidation_0-logloss:0.69639\n",
      "[28]\tvalidation_0-logloss:0.69636\n",
      "[30]\tvalidation_0-logloss:0.69609\n",
      "[32]\tvalidation_0-logloss:0.69637\n",
      "[34]\tvalidation_0-logloss:0.69655\n",
      "[36]\tvalidation_0-logloss:0.69648\n",
      "[38]\tvalidation_0-logloss:0.69651\n",
      "[40]\tvalidation_0-logloss:0.69665\n",
      "[42]\tvalidation_0-logloss:0.69675\n",
      "[44]\tvalidation_0-logloss:0.69749\n",
      "[46]\tvalidation_0-logloss:0.69726\n",
      "[48]\tvalidation_0-logloss:0.69740\n",
      "[50]\tvalidation_0-logloss:0.69881\n",
      "[52]\tvalidation_0-logloss:0.69883\n",
      "[54]\tvalidation_0-logloss:0.69852\n",
      "[56]\tvalidation_0-logloss:0.69841\n",
      "[58]\tvalidation_0-logloss:0.69846\n",
      "[60]\tvalidation_0-logloss:0.69873\n",
      "[62]\tvalidation_0-logloss:0.69887\n",
      "[64]\tvalidation_0-logloss:0.69911\n",
      "[66]\tvalidation_0-logloss:0.69968\n",
      "[68]\tvalidation_0-logloss:0.69962\n",
      "[70]\tvalidation_0-logloss:0.69978\n",
      "[72]\tvalidation_0-logloss:0.69963\n",
      "[74]\tvalidation_0-logloss:0.70219\n",
      "[76]\tvalidation_0-logloss:0.70215\n",
      "[78]\tvalidation_0-logloss:0.70205\n",
      "[80]\tvalidation_0-logloss:0.70198\n",
      "[82]\tvalidation_0-logloss:0.70188\n",
      "[84]\tvalidation_0-logloss:0.70175\n",
      "[86]\tvalidation_0-logloss:0.70196\n",
      "[88]\tvalidation_0-logloss:0.70205\n",
      "[90]\tvalidation_0-logloss:0.70203\n",
      "[92]\tvalidation_0-logloss:0.70218\n",
      "[94]\tvalidation_0-logloss:0.70218\n",
      "[96]\tvalidation_0-logloss:0.70244\n",
      "[98]\tvalidation_0-logloss:0.70296\n",
      "[100]\tvalidation_0-logloss:0.70319\n",
      "[102]\tvalidation_0-logloss:0.70356\n",
      "[104]\tvalidation_0-logloss:0.70425\n",
      "[106]\tvalidation_0-logloss:0.70403\n",
      "[108]\tvalidation_0-logloss:0.70441\n",
      "[110]\tvalidation_0-logloss:0.70447\n",
      "[112]\tvalidation_0-logloss:0.70485\n",
      "[114]\tvalidation_0-logloss:0.70517\n",
      "[116]\tvalidation_0-logloss:0.70524\n",
      "[118]\tvalidation_0-logloss:0.70584\n",
      "[120]\tvalidation_0-logloss:0.70593\n",
      "[122]\tvalidation_0-logloss:0.70640\n",
      "[124]\tvalidation_0-logloss:0.70654\n",
      "[126]\tvalidation_0-logloss:0.70720\n",
      "[128]\tvalidation_0-logloss:0.70702\n",
      "[130]\tvalidation_0-logloss:0.70704\n",
      "[132]\tvalidation_0-logloss:0.70726\n",
      "[134]\tvalidation_0-logloss:0.70747\n",
      "[136]\tvalidation_0-logloss:0.70763\n",
      "[138]\tvalidation_0-logloss:0.70758\n",
      "[140]\tvalidation_0-logloss:0.70743\n",
      "[142]\tvalidation_0-logloss:0.70741\n",
      "[144]\tvalidation_0-logloss:0.70749\n",
      "[146]\tvalidation_0-logloss:0.70788\n",
      "[148]\tvalidation_0-logloss:0.70823\n",
      "[150]\tvalidation_0-logloss:0.70837\n",
      "[152]\tvalidation_0-logloss:0.70832\n",
      "[154]\tvalidation_0-logloss:0.70835\n",
      "[156]\tvalidation_0-logloss:0.70840\n",
      "[158]\tvalidation_0-logloss:0.70866\n",
      "[160]\tvalidation_0-logloss:0.70871\n",
      "[162]\tvalidation_0-logloss:0.70883\n",
      "[164]\tvalidation_0-logloss:0.70902\n",
      "[166]\tvalidation_0-logloss:0.70900\n",
      "[168]\tvalidation_0-logloss:0.70892\n",
      "[170]\tvalidation_0-logloss:0.70882\n",
      "[172]\tvalidation_0-logloss:0.70863\n",
      "[174]\tvalidation_0-logloss:0.70857\n",
      "[176]\tvalidation_0-logloss:0.70872\n",
      "[178]\tvalidation_0-logloss:0.70895\n",
      "[180]\tvalidation_0-logloss:0.70850\n",
      "[182]\tvalidation_0-logloss:0.70838\n",
      "[184]\tvalidation_0-logloss:0.70837\n",
      "[186]\tvalidation_0-logloss:0.70810\n",
      "[188]\tvalidation_0-logloss:0.70933\n",
      "[190]\tvalidation_0-logloss:0.70908\n",
      "[192]\tvalidation_0-logloss:0.70930\n",
      "[194]\tvalidation_0-logloss:0.70939\n",
      "[196]\tvalidation_0-logloss:0.71004\n",
      "[198]\tvalidation_0-logloss:0.71054\n",
      "[200]\tvalidation_0-logloss:0.71077\n",
      "[202]\tvalidation_0-logloss:0.71078\n",
      "[204]\tvalidation_0-logloss:0.71089\n",
      "[206]\tvalidation_0-logloss:0.71120\n",
      "[208]\tvalidation_0-logloss:0.71155\n",
      "[210]\tvalidation_0-logloss:0.71147\n",
      "[212]\tvalidation_0-logloss:0.71144\n",
      "[214]\tvalidation_0-logloss:0.71168\n",
      "[216]\tvalidation_0-logloss:0.71172\n",
      "[218]\tvalidation_0-logloss:0.71172\n",
      "[220]\tvalidation_0-logloss:0.71167\n",
      "[222]\tvalidation_0-logloss:0.71162\n",
      "[224]\tvalidation_0-logloss:0.71160\n",
      "[226]\tvalidation_0-logloss:0.71185\n",
      "[228]\tvalidation_0-logloss:0.71181\n",
      "[230]\tvalidation_0-logloss:0.71188\n",
      "[232]\tvalidation_0-logloss:0.71213\n",
      "[234]\tvalidation_0-logloss:0.71221\n",
      "[236]\tvalidation_0-logloss:0.71215\n",
      "[238]\tvalidation_0-logloss:0.71232\n",
      "[240]\tvalidation_0-logloss:0.71214\n",
      "[242]\tvalidation_0-logloss:0.71219\n",
      "[244]\tvalidation_0-logloss:0.71213\n",
      "[246]\tvalidation_0-logloss:0.71239\n",
      "[248]\tvalidation_0-logloss:0.71255\n",
      "[250]\tvalidation_0-logloss:0.71272\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:13:46,099] Trial 24 finished with value: 0.6950647138247021 and parameters: {'eta': 0.12429905206624559, 'gamma': 0.0788791382669092, 'max_depth': 4, 'min_child_weight': 2, 'lambda': 0.17036547291133597, 'alpha': 0.7866220063348344}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:13:50] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69605\n",
      "[2]\tvalidation_0-logloss:0.69528\n",
      "[4]\tvalidation_0-logloss:0.69516\n",
      "[6]\tvalidation_0-logloss:0.69494\n",
      "[8]\tvalidation_0-logloss:0.69509\n",
      "[10]\tvalidation_0-logloss:0.69553\n",
      "[12]\tvalidation_0-logloss:0.69610\n",
      "[14]\tvalidation_0-logloss:0.69622\n",
      "[16]\tvalidation_0-logloss:0.69678\n",
      "[18]\tvalidation_0-logloss:0.69673\n",
      "[20]\tvalidation_0-logloss:0.69713\n",
      "[22]\tvalidation_0-logloss:0.69723\n",
      "[24]\tvalidation_0-logloss:0.69713\n",
      "[26]\tvalidation_0-logloss:0.69700\n",
      "[28]\tvalidation_0-logloss:0.69756\n",
      "[30]\tvalidation_0-logloss:0.69717\n",
      "[32]\tvalidation_0-logloss:0.69858\n",
      "[34]\tvalidation_0-logloss:0.69911\n",
      "[36]\tvalidation_0-logloss:0.69972\n",
      "[38]\tvalidation_0-logloss:0.70056\n",
      "[40]\tvalidation_0-logloss:0.70059\n",
      "[42]\tvalidation_0-logloss:0.70096\n",
      "[44]\tvalidation_0-logloss:0.70104\n",
      "[46]\tvalidation_0-logloss:0.70255\n",
      "[48]\tvalidation_0-logloss:0.70299\n",
      "[50]\tvalidation_0-logloss:0.70371\n",
      "[52]\tvalidation_0-logloss:0.70440\n",
      "[54]\tvalidation_0-logloss:0.70395\n",
      "[56]\tvalidation_0-logloss:0.70530\n",
      "[58]\tvalidation_0-logloss:0.70560\n",
      "[60]\tvalidation_0-logloss:0.70645\n",
      "[62]\tvalidation_0-logloss:0.70632\n",
      "[64]\tvalidation_0-logloss:0.70724\n",
      "[66]\tvalidation_0-logloss:0.70696\n",
      "[68]\tvalidation_0-logloss:0.70761\n",
      "[70]\tvalidation_0-logloss:0.70858\n",
      "[72]\tvalidation_0-logloss:0.70979\n",
      "[74]\tvalidation_0-logloss:0.71063\n",
      "[76]\tvalidation_0-logloss:0.71099\n",
      "[78]\tvalidation_0-logloss:0.71121\n",
      "[80]\tvalidation_0-logloss:0.71206\n",
      "[82]\tvalidation_0-logloss:0.71235\n",
      "[84]\tvalidation_0-logloss:0.71276\n",
      "[86]\tvalidation_0-logloss:0.71372\n",
      "[88]\tvalidation_0-logloss:0.71347\n",
      "[90]\tvalidation_0-logloss:0.71406\n",
      "[92]\tvalidation_0-logloss:0.71373\n",
      "[94]\tvalidation_0-logloss:0.71370\n",
      "[96]\tvalidation_0-logloss:0.71423\n",
      "[98]\tvalidation_0-logloss:0.71463\n",
      "[100]\tvalidation_0-logloss:0.71482\n",
      "[102]\tvalidation_0-logloss:0.71506\n",
      "[104]\tvalidation_0-logloss:0.71552\n",
      "[106]\tvalidation_0-logloss:0.71574\n",
      "[108]\tvalidation_0-logloss:0.71591\n",
      "[110]\tvalidation_0-logloss:0.71636\n",
      "[112]\tvalidation_0-logloss:0.71697\n",
      "[114]\tvalidation_0-logloss:0.71751\n",
      "[116]\tvalidation_0-logloss:0.71728\n",
      "[118]\tvalidation_0-logloss:0.71726\n",
      "[120]\tvalidation_0-logloss:0.71774\n",
      "[122]\tvalidation_0-logloss:0.72033\n",
      "[124]\tvalidation_0-logloss:0.71997\n",
      "[126]\tvalidation_0-logloss:0.72013\n",
      "[128]\tvalidation_0-logloss:0.72047\n",
      "[130]\tvalidation_0-logloss:0.72081\n",
      "[132]\tvalidation_0-logloss:0.72095\n",
      "[134]\tvalidation_0-logloss:0.72114\n",
      "[136]\tvalidation_0-logloss:0.72149\n",
      "[138]\tvalidation_0-logloss:0.72121\n",
      "[140]\tvalidation_0-logloss:0.72221\n",
      "[142]\tvalidation_0-logloss:0.72277\n",
      "[144]\tvalidation_0-logloss:0.72264\n",
      "[146]\tvalidation_0-logloss:0.72304\n",
      "[148]\tvalidation_0-logloss:0.72323\n",
      "[150]\tvalidation_0-logloss:0.72400\n",
      "[152]\tvalidation_0-logloss:0.72501\n",
      "[154]\tvalidation_0-logloss:0.72597\n",
      "[156]\tvalidation_0-logloss:0.72604\n",
      "[158]\tvalidation_0-logloss:0.72600\n",
      "[160]\tvalidation_0-logloss:0.72703\n",
      "[162]\tvalidation_0-logloss:0.72716\n",
      "[164]\tvalidation_0-logloss:0.72701\n",
      "[166]\tvalidation_0-logloss:0.72704\n",
      "[168]\tvalidation_0-logloss:0.72696\n",
      "[170]\tvalidation_0-logloss:0.72736\n",
      "[172]\tvalidation_0-logloss:0.72750\n",
      "[174]\tvalidation_0-logloss:0.72786\n",
      "[176]\tvalidation_0-logloss:0.72818\n",
      "[178]\tvalidation_0-logloss:0.72855\n",
      "[180]\tvalidation_0-logloss:0.72873\n",
      "[182]\tvalidation_0-logloss:0.72819\n",
      "[184]\tvalidation_0-logloss:0.72862\n",
      "[186]\tvalidation_0-logloss:0.72856\n",
      "[188]\tvalidation_0-logloss:0.72904\n",
      "[190]\tvalidation_0-logloss:0.72968\n",
      "[192]\tvalidation_0-logloss:0.72998\n",
      "[194]\tvalidation_0-logloss:0.73019\n",
      "[196]\tvalidation_0-logloss:0.72996\n",
      "[198]\tvalidation_0-logloss:0.73013\n",
      "[200]\tvalidation_0-logloss:0.73047\n",
      "[202]\tvalidation_0-logloss:0.73115\n",
      "[204]\tvalidation_0-logloss:0.73130\n",
      "[206]\tvalidation_0-logloss:0.73217\n",
      "[208]\tvalidation_0-logloss:0.73268\n",
      "[210]\tvalidation_0-logloss:0.73262\n",
      "[212]\tvalidation_0-logloss:0.73202\n",
      "[214]\tvalidation_0-logloss:0.73272\n",
      "[216]\tvalidation_0-logloss:0.73321\n",
      "[218]\tvalidation_0-logloss:0.73319\n",
      "[220]\tvalidation_0-logloss:0.73348\n",
      "[222]\tvalidation_0-logloss:0.73467\n",
      "[224]\tvalidation_0-logloss:0.73458\n",
      "[226]\tvalidation_0-logloss:0.73462\n",
      "[228]\tvalidation_0-logloss:0.73519\n",
      "[230]\tvalidation_0-logloss:0.73503\n",
      "[232]\tvalidation_0-logloss:0.73510\n",
      "[234]\tvalidation_0-logloss:0.73552\n",
      "[236]\tvalidation_0-logloss:0.73546\n",
      "[238]\tvalidation_0-logloss:0.73605\n",
      "[240]\tvalidation_0-logloss:0.73582\n",
      "[242]\tvalidation_0-logloss:0.73630\n",
      "[244]\tvalidation_0-logloss:0.73635\n",
      "[246]\tvalidation_0-logloss:0.73645\n",
      "[248]\tvalidation_0-logloss:0.73719\n",
      "[250]\tvalidation_0-logloss:0.73724\n",
      "[252]\tvalidation_0-logloss:0.73708\n",
      "[254]\tvalidation_0-logloss:0.73696\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:15:04,016] Trial 25 finished with value: 0.6945322613351489 and parameters: {'eta': 0.18598104946782992, 'gamma': 0.2640644710666991, 'max_depth': 5, 'min_child_weight': 0, 'lambda': 0.06954620487355682, 'alpha': 0.6612487443776707}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:15:08] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69593\n",
      "[2]\tvalidation_0-logloss:0.69689\n",
      "[4]\tvalidation_0-logloss:0.69648\n",
      "[6]\tvalidation_0-logloss:0.69687\n",
      "[8]\tvalidation_0-logloss:0.69607\n",
      "[10]\tvalidation_0-logloss:0.69644\n",
      "[12]\tvalidation_0-logloss:0.69624\n",
      "[14]\tvalidation_0-logloss:0.69557\n",
      "[16]\tvalidation_0-logloss:0.69701\n",
      "[18]\tvalidation_0-logloss:0.69875\n",
      "[20]\tvalidation_0-logloss:0.69896\n",
      "[22]\tvalidation_0-logloss:0.69837\n",
      "[24]\tvalidation_0-logloss:0.69853\n",
      "[26]\tvalidation_0-logloss:0.69855\n",
      "[28]\tvalidation_0-logloss:0.69957\n",
      "[30]\tvalidation_0-logloss:0.69873\n",
      "[32]\tvalidation_0-logloss:0.69864\n",
      "[34]\tvalidation_0-logloss:0.69852\n",
      "[36]\tvalidation_0-logloss:0.69880\n",
      "[38]\tvalidation_0-logloss:0.69864\n",
      "[40]\tvalidation_0-logloss:0.69869\n",
      "[42]\tvalidation_0-logloss:0.69873\n",
      "[44]\tvalidation_0-logloss:0.69898\n",
      "[46]\tvalidation_0-logloss:0.69853\n",
      "[48]\tvalidation_0-logloss:0.69848\n",
      "[50]\tvalidation_0-logloss:0.69875\n",
      "[52]\tvalidation_0-logloss:0.69848\n",
      "[54]\tvalidation_0-logloss:0.69925\n",
      "[56]\tvalidation_0-logloss:0.70069\n",
      "[58]\tvalidation_0-logloss:0.70184\n",
      "[60]\tvalidation_0-logloss:0.70327\n",
      "[62]\tvalidation_0-logloss:0.70276\n",
      "[64]\tvalidation_0-logloss:0.70361\n",
      "[66]\tvalidation_0-logloss:0.70379\n",
      "[68]\tvalidation_0-logloss:0.70450\n",
      "[70]\tvalidation_0-logloss:0.70489\n",
      "[72]\tvalidation_0-logloss:0.70486\n",
      "[74]\tvalidation_0-logloss:0.70334\n",
      "[76]\tvalidation_0-logloss:0.70369\n",
      "[78]\tvalidation_0-logloss:0.70410\n",
      "[80]\tvalidation_0-logloss:0.70568\n",
      "[82]\tvalidation_0-logloss:0.70521\n",
      "[84]\tvalidation_0-logloss:0.70523\n",
      "[86]\tvalidation_0-logloss:0.70487\n",
      "[88]\tvalidation_0-logloss:0.70500\n",
      "[90]\tvalidation_0-logloss:0.70550\n",
      "[92]\tvalidation_0-logloss:0.70512\n",
      "[94]\tvalidation_0-logloss:0.70540\n",
      "[96]\tvalidation_0-logloss:0.70637\n",
      "[98]\tvalidation_0-logloss:0.70685\n",
      "[100]\tvalidation_0-logloss:0.70700\n",
      "[102]\tvalidation_0-logloss:0.70687\n",
      "[104]\tvalidation_0-logloss:0.70727\n",
      "[106]\tvalidation_0-logloss:0.70710\n",
      "[108]\tvalidation_0-logloss:0.70909\n",
      "[110]\tvalidation_0-logloss:0.70954\n",
      "[112]\tvalidation_0-logloss:0.71008\n",
      "[114]\tvalidation_0-logloss:0.71062\n",
      "[116]\tvalidation_0-logloss:0.71094\n",
      "[118]\tvalidation_0-logloss:0.71107\n",
      "[120]\tvalidation_0-logloss:0.71111\n",
      "[122]\tvalidation_0-logloss:0.71142\n",
      "[124]\tvalidation_0-logloss:0.71141\n",
      "[126]\tvalidation_0-logloss:0.71163\n",
      "[128]\tvalidation_0-logloss:0.71136\n",
      "[130]\tvalidation_0-logloss:0.71133\n",
      "[132]\tvalidation_0-logloss:0.71197\n",
      "[134]\tvalidation_0-logloss:0.71196\n",
      "[136]\tvalidation_0-logloss:0.71185\n",
      "[138]\tvalidation_0-logloss:0.71257\n",
      "[140]\tvalidation_0-logloss:0.71269\n",
      "[142]\tvalidation_0-logloss:0.71278\n",
      "[144]\tvalidation_0-logloss:0.71329\n",
      "[146]\tvalidation_0-logloss:0.71354\n",
      "[148]\tvalidation_0-logloss:0.71382\n",
      "[150]\tvalidation_0-logloss:0.71363\n",
      "[152]\tvalidation_0-logloss:0.71460\n",
      "[154]\tvalidation_0-logloss:0.71452\n",
      "[156]\tvalidation_0-logloss:0.71456\n",
      "[158]\tvalidation_0-logloss:0.71479\n",
      "[160]\tvalidation_0-logloss:0.71597\n",
      "[162]\tvalidation_0-logloss:0.71684\n",
      "[164]\tvalidation_0-logloss:0.71654\n",
      "[166]\tvalidation_0-logloss:0.71670\n",
      "[168]\tvalidation_0-logloss:0.71694\n",
      "[170]\tvalidation_0-logloss:0.71890\n",
      "[172]\tvalidation_0-logloss:0.71895\n",
      "[174]\tvalidation_0-logloss:0.71896\n",
      "[176]\tvalidation_0-logloss:0.71955\n",
      "[178]\tvalidation_0-logloss:0.71745\n",
      "[180]\tvalidation_0-logloss:0.71782\n",
      "[182]\tvalidation_0-logloss:0.71847\n",
      "[184]\tvalidation_0-logloss:0.71843\n",
      "[186]\tvalidation_0-logloss:0.71877\n",
      "[188]\tvalidation_0-logloss:0.71984\n",
      "[190]\tvalidation_0-logloss:0.71902\n",
      "[192]\tvalidation_0-logloss:0.71903\n",
      "[194]\tvalidation_0-logloss:0.72116\n",
      "[196]\tvalidation_0-logloss:0.72136\n",
      "[198]\tvalidation_0-logloss:0.72185\n",
      "[200]\tvalidation_0-logloss:0.72187\n",
      "[202]\tvalidation_0-logloss:0.72196\n",
      "[204]\tvalidation_0-logloss:0.72204\n",
      "[206]\tvalidation_0-logloss:0.72178\n",
      "[208]\tvalidation_0-logloss:0.72147\n",
      "[210]\tvalidation_0-logloss:0.72183\n",
      "[212]\tvalidation_0-logloss:0.72188\n",
      "[214]\tvalidation_0-logloss:0.72049\n",
      "[216]\tvalidation_0-logloss:0.72056\n",
      "[218]\tvalidation_0-logloss:0.72081\n",
      "[220]\tvalidation_0-logloss:0.72092\n",
      "[222]\tvalidation_0-logloss:0.72089\n",
      "[224]\tvalidation_0-logloss:0.72209\n",
      "[226]\tvalidation_0-logloss:0.72248\n",
      "[228]\tvalidation_0-logloss:0.72201\n",
      "[230]\tvalidation_0-logloss:0.72212\n",
      "[232]\tvalidation_0-logloss:0.72221\n",
      "[234]\tvalidation_0-logloss:0.72197\n",
      "[236]\tvalidation_0-logloss:0.72313\n",
      "[238]\tvalidation_0-logloss:0.72472\n",
      "[240]\tvalidation_0-logloss:0.72475\n",
      "[242]\tvalidation_0-logloss:0.72486\n",
      "[244]\tvalidation_0-logloss:0.72493\n",
      "[246]\tvalidation_0-logloss:0.72509\n",
      "[248]\tvalidation_0-logloss:0.72607\n",
      "[250]\tvalidation_0-logloss:0.72646\n",
      "[252]\tvalidation_0-logloss:0.72881\n",
      "[254]\tvalidation_0-logloss:0.72811\n",
      "[256]\tvalidation_0-logloss:0.72828\n",
      "[258]\tvalidation_0-logloss:0.72810\n",
      "[259]\tvalidation_0-logloss:0.72815\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:16:14,016] Trial 26 finished with value: 0.6955156883904604 and parameters: {'eta': 0.29444984017035564, 'gamma': 0.6829151101058504, 'max_depth': 3, 'min_child_weight': 3, 'lambda': 0.5995597693058851, 'alpha': 0.9236294448485867}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:16:18] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69533\n",
      "[2]\tvalidation_0-logloss:0.69581\n",
      "[4]\tvalidation_0-logloss:0.69583\n",
      "[6]\tvalidation_0-logloss:0.69582\n",
      "[8]\tvalidation_0-logloss:0.69556\n",
      "[10]\tvalidation_0-logloss:0.69564\n",
      "[12]\tvalidation_0-logloss:0.69556\n",
      "[14]\tvalidation_0-logloss:0.69545\n",
      "[16]\tvalidation_0-logloss:0.69481\n",
      "[18]\tvalidation_0-logloss:0.69470\n",
      "[20]\tvalidation_0-logloss:0.69474\n",
      "[22]\tvalidation_0-logloss:0.69497\n",
      "[24]\tvalidation_0-logloss:0.69482\n",
      "[26]\tvalidation_0-logloss:0.69516\n",
      "[28]\tvalidation_0-logloss:0.69487\n",
      "[30]\tvalidation_0-logloss:0.69497\n",
      "[32]\tvalidation_0-logloss:0.69495\n",
      "[34]\tvalidation_0-logloss:0.69477\n",
      "[36]\tvalidation_0-logloss:0.69498\n",
      "[38]\tvalidation_0-logloss:0.69518\n",
      "[40]\tvalidation_0-logloss:0.69530\n",
      "[42]\tvalidation_0-logloss:0.69523\n",
      "[44]\tvalidation_0-logloss:0.69539\n",
      "[46]\tvalidation_0-logloss:0.69512\n",
      "[48]\tvalidation_0-logloss:0.69491\n",
      "[50]\tvalidation_0-logloss:0.69499\n",
      "[52]\tvalidation_0-logloss:0.69496\n",
      "[54]\tvalidation_0-logloss:0.69496\n",
      "[56]\tvalidation_0-logloss:0.69494\n",
      "[58]\tvalidation_0-logloss:0.69514\n",
      "[60]\tvalidation_0-logloss:0.69532\n",
      "[62]\tvalidation_0-logloss:0.69539\n",
      "[64]\tvalidation_0-logloss:0.69517\n",
      "[66]\tvalidation_0-logloss:0.69497\n",
      "[68]\tvalidation_0-logloss:0.69500\n",
      "[70]\tvalidation_0-logloss:0.69493\n",
      "[72]\tvalidation_0-logloss:0.69509\n",
      "[74]\tvalidation_0-logloss:0.69530\n",
      "[76]\tvalidation_0-logloss:0.69553\n",
      "[78]\tvalidation_0-logloss:0.69580\n",
      "[80]\tvalidation_0-logloss:0.69583\n",
      "[82]\tvalidation_0-logloss:0.69573\n",
      "[84]\tvalidation_0-logloss:0.69572\n",
      "[86]\tvalidation_0-logloss:0.69576\n",
      "[88]\tvalidation_0-logloss:0.69581\n",
      "[90]\tvalidation_0-logloss:0.69596\n",
      "[92]\tvalidation_0-logloss:0.69606\n",
      "[94]\tvalidation_0-logloss:0.69612\n",
      "[96]\tvalidation_0-logloss:0.69603\n",
      "[98]\tvalidation_0-logloss:0.69612\n",
      "[100]\tvalidation_0-logloss:0.69611\n",
      "[102]\tvalidation_0-logloss:0.69625\n",
      "[104]\tvalidation_0-logloss:0.69610\n",
      "[106]\tvalidation_0-logloss:0.69601\n",
      "[108]\tvalidation_0-logloss:0.69638\n",
      "[110]\tvalidation_0-logloss:0.69641\n",
      "[112]\tvalidation_0-logloss:0.69631\n",
      "[114]\tvalidation_0-logloss:0.69626\n",
      "[116]\tvalidation_0-logloss:0.69656\n",
      "[118]\tvalidation_0-logloss:0.69673\n",
      "[120]\tvalidation_0-logloss:0.69689\n",
      "[122]\tvalidation_0-logloss:0.69699\n",
      "[124]\tvalidation_0-logloss:0.69712\n",
      "[126]\tvalidation_0-logloss:0.69682\n",
      "[128]\tvalidation_0-logloss:0.69672\n",
      "[130]\tvalidation_0-logloss:0.69670\n",
      "[132]\tvalidation_0-logloss:0.69678\n",
      "[134]\tvalidation_0-logloss:0.69725\n",
      "[136]\tvalidation_0-logloss:0.69796\n",
      "[138]\tvalidation_0-logloss:0.69800\n",
      "[140]\tvalidation_0-logloss:0.69792\n",
      "[142]\tvalidation_0-logloss:0.69796\n",
      "[144]\tvalidation_0-logloss:0.69817\n",
      "[146]\tvalidation_0-logloss:0.69833\n",
      "[148]\tvalidation_0-logloss:0.69881\n",
      "[150]\tvalidation_0-logloss:0.69877\n",
      "[152]\tvalidation_0-logloss:0.69907\n",
      "[154]\tvalidation_0-logloss:0.69898\n",
      "[156]\tvalidation_0-logloss:0.69913\n",
      "[158]\tvalidation_0-logloss:0.69940\n",
      "[160]\tvalidation_0-logloss:0.69961\n",
      "[162]\tvalidation_0-logloss:0.69960\n",
      "[164]\tvalidation_0-logloss:0.69974\n",
      "[166]\tvalidation_0-logloss:0.69987\n",
      "[168]\tvalidation_0-logloss:0.70022\n",
      "[170]\tvalidation_0-logloss:0.70025\n",
      "[172]\tvalidation_0-logloss:0.70024\n",
      "[174]\tvalidation_0-logloss:0.70052\n",
      "[176]\tvalidation_0-logloss:0.70055\n",
      "[178]\tvalidation_0-logloss:0.70060\n",
      "[180]\tvalidation_0-logloss:0.70071\n",
      "[182]\tvalidation_0-logloss:0.70092\n",
      "[184]\tvalidation_0-logloss:0.70096\n",
      "[186]\tvalidation_0-logloss:0.70099\n",
      "[188]\tvalidation_0-logloss:0.70111\n",
      "[190]\tvalidation_0-logloss:0.70107\n",
      "[192]\tvalidation_0-logloss:0.70105\n",
      "[194]\tvalidation_0-logloss:0.70129\n",
      "[196]\tvalidation_0-logloss:0.70128\n",
      "[198]\tvalidation_0-logloss:0.70123\n",
      "[200]\tvalidation_0-logloss:0.70174\n",
      "[202]\tvalidation_0-logloss:0.70180\n",
      "[204]\tvalidation_0-logloss:0.70175\n",
      "[206]\tvalidation_0-logloss:0.70201\n",
      "[208]\tvalidation_0-logloss:0.70192\n",
      "[210]\tvalidation_0-logloss:0.70203\n",
      "[212]\tvalidation_0-logloss:0.70201\n",
      "[214]\tvalidation_0-logloss:0.70214\n",
      "[216]\tvalidation_0-logloss:0.70216\n",
      "[218]\tvalidation_0-logloss:0.70248\n",
      "[220]\tvalidation_0-logloss:0.70251\n",
      "[222]\tvalidation_0-logloss:0.70284\n",
      "[224]\tvalidation_0-logloss:0.70299\n",
      "[226]\tvalidation_0-logloss:0.70290\n",
      "[228]\tvalidation_0-logloss:0.70296\n",
      "[230]\tvalidation_0-logloss:0.70308\n",
      "[232]\tvalidation_0-logloss:0.70320\n",
      "[234]\tvalidation_0-logloss:0.70345\n",
      "[236]\tvalidation_0-logloss:0.70376\n",
      "[238]\tvalidation_0-logloss:0.70344\n",
      "[240]\tvalidation_0-logloss:0.70369\n",
      "[242]\tvalidation_0-logloss:0.70368\n",
      "[244]\tvalidation_0-logloss:0.70406\n",
      "[246]\tvalidation_0-logloss:0.70417\n",
      "[248]\tvalidation_0-logloss:0.70429\n",
      "[250]\tvalidation_0-logloss:0.70437\n",
      "[252]\tvalidation_0-logloss:0.70462\n",
      "[254]\tvalidation_0-logloss:0.70514\n",
      "[256]\tvalidation_0-logloss:0.70504\n",
      "[258]\tvalidation_0-logloss:0.70502\n",
      "[260]\tvalidation_0-logloss:0.70509\n",
      "[262]\tvalidation_0-logloss:0.70495\n",
      "[264]\tvalidation_0-logloss:0.70546\n",
      "[265]\tvalidation_0-logloss:0.70536\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:17:41,115] Trial 27 finished with value: 0.6946767217662853 and parameters: {'eta': 0.04954464219250587, 'gamma': 0.1747834362833258, 'max_depth': 6, 'min_child_weight': 1, 'lambda': 0.80924670376492, 'alpha': 0.35630359945982226}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:17:46] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69526\n",
      "[2]\tvalidation_0-logloss:0.69564\n",
      "[4]\tvalidation_0-logloss:0.69569\n",
      "[6]\tvalidation_0-logloss:0.69601\n",
      "[8]\tvalidation_0-logloss:0.69637\n",
      "[10]\tvalidation_0-logloss:0.69610\n",
      "[12]\tvalidation_0-logloss:0.69648\n",
      "[14]\tvalidation_0-logloss:0.69604\n",
      "[16]\tvalidation_0-logloss:0.69567\n",
      "[18]\tvalidation_0-logloss:0.69557\n",
      "[20]\tvalidation_0-logloss:0.69589\n",
      "[22]\tvalidation_0-logloss:0.69586\n",
      "[24]\tvalidation_0-logloss:0.69513\n",
      "[26]\tvalidation_0-logloss:0.69492\n",
      "[28]\tvalidation_0-logloss:0.69527\n",
      "[30]\tvalidation_0-logloss:0.69566\n",
      "[32]\tvalidation_0-logloss:0.69531\n",
      "[34]\tvalidation_0-logloss:0.69550\n",
      "[36]\tvalidation_0-logloss:0.69534\n",
      "[38]\tvalidation_0-logloss:0.69538\n",
      "[40]\tvalidation_0-logloss:0.69528\n",
      "[42]\tvalidation_0-logloss:0.69551\n",
      "[44]\tvalidation_0-logloss:0.69552\n",
      "[46]\tvalidation_0-logloss:0.69563\n",
      "[48]\tvalidation_0-logloss:0.69552\n",
      "[50]\tvalidation_0-logloss:0.69557\n",
      "[52]\tvalidation_0-logloss:0.69564\n",
      "[54]\tvalidation_0-logloss:0.69605\n",
      "[56]\tvalidation_0-logloss:0.69614\n",
      "[58]\tvalidation_0-logloss:0.69597\n",
      "[60]\tvalidation_0-logloss:0.69638\n",
      "[62]\tvalidation_0-logloss:0.69628\n",
      "[64]\tvalidation_0-logloss:0.69672\n",
      "[66]\tvalidation_0-logloss:0.69671\n",
      "[68]\tvalidation_0-logloss:0.69682\n",
      "[70]\tvalidation_0-logloss:0.69690\n",
      "[72]\tvalidation_0-logloss:0.69693\n",
      "[74]\tvalidation_0-logloss:0.69693\n",
      "[76]\tvalidation_0-logloss:0.69740\n",
      "[78]\tvalidation_0-logloss:0.69734\n",
      "[80]\tvalidation_0-logloss:0.69741\n",
      "[82]\tvalidation_0-logloss:0.69729\n",
      "[84]\tvalidation_0-logloss:0.69709\n",
      "[86]\tvalidation_0-logloss:0.69735\n",
      "[88]\tvalidation_0-logloss:0.69728\n",
      "[90]\tvalidation_0-logloss:0.69765\n",
      "[92]\tvalidation_0-logloss:0.69770\n",
      "[94]\tvalidation_0-logloss:0.69784\n",
      "[96]\tvalidation_0-logloss:0.69788\n",
      "[98]\tvalidation_0-logloss:0.69776\n",
      "[100]\tvalidation_0-logloss:0.69783\n",
      "[102]\tvalidation_0-logloss:0.69775\n",
      "[104]\tvalidation_0-logloss:0.69781\n",
      "[106]\tvalidation_0-logloss:0.69789\n",
      "[108]\tvalidation_0-logloss:0.69783\n",
      "[110]\tvalidation_0-logloss:0.69801\n",
      "[112]\tvalidation_0-logloss:0.69819\n",
      "[114]\tvalidation_0-logloss:0.69859\n",
      "[116]\tvalidation_0-logloss:0.69867\n",
      "[118]\tvalidation_0-logloss:0.69875\n",
      "[120]\tvalidation_0-logloss:0.69866\n",
      "[122]\tvalidation_0-logloss:0.69853\n",
      "[124]\tvalidation_0-logloss:0.69841\n",
      "[126]\tvalidation_0-logloss:0.69832\n",
      "[128]\tvalidation_0-logloss:0.69838\n",
      "[130]\tvalidation_0-logloss:0.69844\n",
      "[132]\tvalidation_0-logloss:0.69849\n",
      "[134]\tvalidation_0-logloss:0.69844\n",
      "[136]\tvalidation_0-logloss:0.69836\n",
      "[138]\tvalidation_0-logloss:0.69863\n",
      "[140]\tvalidation_0-logloss:0.69856\n",
      "[142]\tvalidation_0-logloss:0.69885\n",
      "[144]\tvalidation_0-logloss:0.69908\n",
      "[146]\tvalidation_0-logloss:0.69907\n",
      "[148]\tvalidation_0-logloss:0.69894\n",
      "[150]\tvalidation_0-logloss:0.69901\n",
      "[152]\tvalidation_0-logloss:0.69914\n",
      "[154]\tvalidation_0-logloss:0.69912\n",
      "[156]\tvalidation_0-logloss:0.69921\n",
      "[158]\tvalidation_0-logloss:0.69915\n",
      "[160]\tvalidation_0-logloss:0.69944\n",
      "[162]\tvalidation_0-logloss:0.69949\n",
      "[164]\tvalidation_0-logloss:0.69967\n",
      "[166]\tvalidation_0-logloss:0.69968\n",
      "[168]\tvalidation_0-logloss:0.69953\n",
      "[170]\tvalidation_0-logloss:0.69939\n",
      "[172]\tvalidation_0-logloss:0.69946\n",
      "[174]\tvalidation_0-logloss:0.69950\n",
      "[176]\tvalidation_0-logloss:0.69963\n",
      "[178]\tvalidation_0-logloss:0.69958\n",
      "[180]\tvalidation_0-logloss:0.69952\n",
      "[182]\tvalidation_0-logloss:0.69947\n",
      "[184]\tvalidation_0-logloss:0.69933\n",
      "[186]\tvalidation_0-logloss:0.69944\n",
      "[188]\tvalidation_0-logloss:0.69942\n",
      "[190]\tvalidation_0-logloss:0.69941\n",
      "[192]\tvalidation_0-logloss:0.69958\n",
      "[194]\tvalidation_0-logloss:0.69978\n",
      "[196]\tvalidation_0-logloss:0.69989\n",
      "[198]\tvalidation_0-logloss:0.69983\n",
      "[200]\tvalidation_0-logloss:0.69977\n",
      "[202]\tvalidation_0-logloss:0.69986\n",
      "[204]\tvalidation_0-logloss:0.69975\n",
      "[206]\tvalidation_0-logloss:0.69968\n",
      "[208]\tvalidation_0-logloss:0.69967\n",
      "[210]\tvalidation_0-logloss:0.69973\n",
      "[212]\tvalidation_0-logloss:0.69987\n",
      "[214]\tvalidation_0-logloss:0.69990\n",
      "[216]\tvalidation_0-logloss:0.69992\n",
      "[218]\tvalidation_0-logloss:0.69990\n",
      "[220]\tvalidation_0-logloss:0.69989\n",
      "[222]\tvalidation_0-logloss:0.69969\n",
      "[224]\tvalidation_0-logloss:0.69990\n",
      "[226]\tvalidation_0-logloss:0.69987\n",
      "[228]\tvalidation_0-logloss:0.69980\n",
      "[230]\tvalidation_0-logloss:0.69983\n",
      "[232]\tvalidation_0-logloss:0.69981\n",
      "[234]\tvalidation_0-logloss:0.69982\n",
      "[236]\tvalidation_0-logloss:0.69993\n",
      "[238]\tvalidation_0-logloss:0.69999\n",
      "[240]\tvalidation_0-logloss:0.69995\n",
      "[242]\tvalidation_0-logloss:0.69994\n",
      "[244]\tvalidation_0-logloss:0.70006\n",
      "[246]\tvalidation_0-logloss:0.70015\n",
      "[248]\tvalidation_0-logloss:0.70071\n",
      "[250]\tvalidation_0-logloss:0.70069\n",
      "[252]\tvalidation_0-logloss:0.70068\n",
      "[254]\tvalidation_0-logloss:0.70101\n",
      "[256]\tvalidation_0-logloss:0.70104\n",
      "[258]\tvalidation_0-logloss:0.70108\n",
      "[260]\tvalidation_0-logloss:0.70098\n",
      "[262]\tvalidation_0-logloss:0.70109\n",
      "[264]\tvalidation_0-logloss:0.70108\n",
      "[266]\tvalidation_0-logloss:0.70118\n",
      "[268]\tvalidation_0-logloss:0.70125\n",
      "[270]\tvalidation_0-logloss:0.70127\n",
      "[272]\tvalidation_0-logloss:0.70123\n",
      "[274]\tvalidation_0-logloss:0.70136\n",
      "[276]\tvalidation_0-logloss:0.70146\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:18:55,480] Trial 28 finished with value: 0.6949211088729147 and parameters: {'eta': 0.14171553009115118, 'gamma': 0.0594146859319033, 'max_depth': 2, 'min_child_weight': 0, 'lambda': 0.35561750062622083, 'alpha': 0.5469647774633032}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:19:00] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69570\n",
      "[2]\tvalidation_0-logloss:0.69516\n",
      "[4]\tvalidation_0-logloss:0.69536\n",
      "[6]\tvalidation_0-logloss:0.69507\n",
      "[8]\tvalidation_0-logloss:0.69521\n",
      "[10]\tvalidation_0-logloss:0.69535\n",
      "[12]\tvalidation_0-logloss:0.69533\n",
      "[14]\tvalidation_0-logloss:0.69575\n",
      "[16]\tvalidation_0-logloss:0.69494\n",
      "[18]\tvalidation_0-logloss:0.69502\n",
      "[20]\tvalidation_0-logloss:0.69559\n",
      "[22]\tvalidation_0-logloss:0.69580\n",
      "[24]\tvalidation_0-logloss:0.69571\n",
      "[26]\tvalidation_0-logloss:0.69610\n",
      "[28]\tvalidation_0-logloss:0.69642\n",
      "[30]\tvalidation_0-logloss:0.69689\n",
      "[32]\tvalidation_0-logloss:0.69712\n",
      "[34]\tvalidation_0-logloss:0.69718\n",
      "[36]\tvalidation_0-logloss:0.69762\n",
      "[38]\tvalidation_0-logloss:0.69793\n",
      "[40]\tvalidation_0-logloss:0.69882\n",
      "[42]\tvalidation_0-logloss:0.69948\n",
      "[44]\tvalidation_0-logloss:0.69968\n",
      "[46]\tvalidation_0-logloss:0.70069\n",
      "[48]\tvalidation_0-logloss:0.70167\n",
      "[50]\tvalidation_0-logloss:0.70180\n",
      "[52]\tvalidation_0-logloss:0.70220\n",
      "[54]\tvalidation_0-logloss:0.70186\n",
      "[56]\tvalidation_0-logloss:0.70197\n",
      "[58]\tvalidation_0-logloss:0.70210\n",
      "[60]\tvalidation_0-logloss:0.70258\n",
      "[62]\tvalidation_0-logloss:0.70299\n",
      "[64]\tvalidation_0-logloss:0.70332\n",
      "[66]\tvalidation_0-logloss:0.70393\n",
      "[68]\tvalidation_0-logloss:0.70364\n",
      "[70]\tvalidation_0-logloss:0.70361\n",
      "[72]\tvalidation_0-logloss:0.70401\n",
      "[74]\tvalidation_0-logloss:0.70432\n",
      "[76]\tvalidation_0-logloss:0.70420\n",
      "[78]\tvalidation_0-logloss:0.70366\n",
      "[80]\tvalidation_0-logloss:0.70400\n",
      "[82]\tvalidation_0-logloss:0.70415\n",
      "[84]\tvalidation_0-logloss:0.70374\n",
      "[86]\tvalidation_0-logloss:0.70546\n",
      "[88]\tvalidation_0-logloss:0.70536\n",
      "[90]\tvalidation_0-logloss:0.70504\n",
      "[92]\tvalidation_0-logloss:0.70586\n",
      "[94]\tvalidation_0-logloss:0.70575\n",
      "[96]\tvalidation_0-logloss:0.70566\n",
      "[98]\tvalidation_0-logloss:0.70592\n",
      "[100]\tvalidation_0-logloss:0.70642\n",
      "[102]\tvalidation_0-logloss:0.70604\n",
      "[104]\tvalidation_0-logloss:0.70632\n",
      "[106]\tvalidation_0-logloss:0.70657\n",
      "[108]\tvalidation_0-logloss:0.70729\n",
      "[110]\tvalidation_0-logloss:0.70730\n",
      "[112]\tvalidation_0-logloss:0.70789\n",
      "[114]\tvalidation_0-logloss:0.70798\n",
      "[116]\tvalidation_0-logloss:0.70814\n",
      "[118]\tvalidation_0-logloss:0.70811\n",
      "[120]\tvalidation_0-logloss:0.70897\n",
      "[122]\tvalidation_0-logloss:0.70825\n",
      "[124]\tvalidation_0-logloss:0.70827\n",
      "[126]\tvalidation_0-logloss:0.70855\n",
      "[128]\tvalidation_0-logloss:0.70904\n",
      "[130]\tvalidation_0-logloss:0.70901\n",
      "[132]\tvalidation_0-logloss:0.70922\n",
      "[134]\tvalidation_0-logloss:0.70940\n",
      "[136]\tvalidation_0-logloss:0.70969\n",
      "[138]\tvalidation_0-logloss:0.70999\n",
      "[140]\tvalidation_0-logloss:0.70971\n",
      "[142]\tvalidation_0-logloss:0.70950\n",
      "[144]\tvalidation_0-logloss:0.71055\n",
      "[146]\tvalidation_0-logloss:0.71057\n",
      "[148]\tvalidation_0-logloss:0.71045\n",
      "[150]\tvalidation_0-logloss:0.71049\n",
      "[152]\tvalidation_0-logloss:0.71390\n",
      "[154]\tvalidation_0-logloss:0.71397\n",
      "[156]\tvalidation_0-logloss:0.71420\n",
      "[158]\tvalidation_0-logloss:0.71368\n",
      "[160]\tvalidation_0-logloss:0.71349\n",
      "[162]\tvalidation_0-logloss:0.71462\n",
      "[164]\tvalidation_0-logloss:0.71476\n",
      "[166]\tvalidation_0-logloss:0.71523\n",
      "[168]\tvalidation_0-logloss:0.71685\n",
      "[170]\tvalidation_0-logloss:0.71707\n",
      "[172]\tvalidation_0-logloss:0.71724\n",
      "[174]\tvalidation_0-logloss:0.71726\n",
      "[176]\tvalidation_0-logloss:0.71754\n",
      "[178]\tvalidation_0-logloss:0.71745\n",
      "[180]\tvalidation_0-logloss:0.71776\n",
      "[182]\tvalidation_0-logloss:0.71818\n",
      "[184]\tvalidation_0-logloss:0.71839\n",
      "[186]\tvalidation_0-logloss:0.71868\n",
      "[188]\tvalidation_0-logloss:0.71886\n",
      "[190]\tvalidation_0-logloss:0.71872\n",
      "[192]\tvalidation_0-logloss:0.71877\n",
      "[194]\tvalidation_0-logloss:0.71876\n",
      "[196]\tvalidation_0-logloss:0.71859\n",
      "[198]\tvalidation_0-logloss:0.71874\n",
      "[200]\tvalidation_0-logloss:0.71980\n",
      "[202]\tvalidation_0-logloss:0.71962\n",
      "[204]\tvalidation_0-logloss:0.71997\n",
      "[206]\tvalidation_0-logloss:0.72000\n",
      "[208]\tvalidation_0-logloss:0.71960\n",
      "[210]\tvalidation_0-logloss:0.71963\n",
      "[212]\tvalidation_0-logloss:0.71993\n",
      "[214]\tvalidation_0-logloss:0.72053\n",
      "[216]\tvalidation_0-logloss:0.71968\n",
      "[218]\tvalidation_0-logloss:0.71977\n",
      "[220]\tvalidation_0-logloss:0.71995\n",
      "[222]\tvalidation_0-logloss:0.71996\n",
      "[224]\tvalidation_0-logloss:0.71926\n",
      "[226]\tvalidation_0-logloss:0.71927\n",
      "[228]\tvalidation_0-logloss:0.71924\n",
      "[230]\tvalidation_0-logloss:0.71973\n",
      "[232]\tvalidation_0-logloss:0.72033\n",
      "[234]\tvalidation_0-logloss:0.72020\n",
      "[236]\tvalidation_0-logloss:0.72054\n",
      "[238]\tvalidation_0-logloss:0.72137\n",
      "[240]\tvalidation_0-logloss:0.72147\n",
      "[242]\tvalidation_0-logloss:0.72208\n",
      "[244]\tvalidation_0-logloss:0.72383\n",
      "[246]\tvalidation_0-logloss:0.72402\n",
      "[248]\tvalidation_0-logloss:0.72383\n",
      "[250]\tvalidation_0-logloss:0.72391\n",
      "[252]\tvalidation_0-logloss:0.72432\n",
      "[254]\tvalidation_0-logloss:0.72481\n",
      "[256]\tvalidation_0-logloss:0.72425\n",
      "[258]\tvalidation_0-logloss:0.72413\n",
      "[260]\tvalidation_0-logloss:0.72439\n",
      "[262]\tvalidation_0-logloss:0.72478\n",
      "[264]\tvalidation_0-logloss:0.72492\n",
      "[266]\tvalidation_0-logloss:0.72430\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:20:10,610] Trial 29 finished with value: 0.6949384843693024 and parameters: {'eta': 0.19007737463884877, 'gamma': 0.46249142730640463, 'max_depth': 4, 'min_child_weight': 6, 'lambda': 0.17728176880812183, 'alpha': 0.7677487772468488}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:20:15] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69549\n",
      "[2]\tvalidation_0-logloss:0.69563\n",
      "[4]\tvalidation_0-logloss:0.69529\n",
      "[6]\tvalidation_0-logloss:0.69479\n",
      "[8]\tvalidation_0-logloss:0.69486\n",
      "[10]\tvalidation_0-logloss:0.69511\n",
      "[12]\tvalidation_0-logloss:0.69531\n",
      "[14]\tvalidation_0-logloss:0.69539\n",
      "[16]\tvalidation_0-logloss:0.69523\n",
      "[18]\tvalidation_0-logloss:0.69495\n",
      "[20]\tvalidation_0-logloss:0.69495\n",
      "[22]\tvalidation_0-logloss:0.69483\n",
      "[24]\tvalidation_0-logloss:0.69489\n",
      "[26]\tvalidation_0-logloss:0.69504\n",
      "[28]\tvalidation_0-logloss:0.69529\n",
      "[30]\tvalidation_0-logloss:0.69496\n",
      "[32]\tvalidation_0-logloss:0.69493\n",
      "[34]\tvalidation_0-logloss:0.69457\n",
      "[36]\tvalidation_0-logloss:0.69463\n",
      "[38]\tvalidation_0-logloss:0.69424\n",
      "[40]\tvalidation_0-logloss:0.69416\n",
      "[42]\tvalidation_0-logloss:0.69406\n",
      "[44]\tvalidation_0-logloss:0.69399\n",
      "[46]\tvalidation_0-logloss:0.69391\n",
      "[48]\tvalidation_0-logloss:0.69418\n",
      "[50]\tvalidation_0-logloss:0.69397\n",
      "[52]\tvalidation_0-logloss:0.69398\n",
      "[54]\tvalidation_0-logloss:0.69399\n",
      "[56]\tvalidation_0-logloss:0.69429\n",
      "[58]\tvalidation_0-logloss:0.69435\n",
      "[60]\tvalidation_0-logloss:0.69432\n",
      "[62]\tvalidation_0-logloss:0.69443\n",
      "[64]\tvalidation_0-logloss:0.69443\n",
      "[66]\tvalidation_0-logloss:0.69436\n",
      "[68]\tvalidation_0-logloss:0.69438\n",
      "[70]\tvalidation_0-logloss:0.69434\n",
      "[72]\tvalidation_0-logloss:0.69454\n",
      "[74]\tvalidation_0-logloss:0.69448\n",
      "[76]\tvalidation_0-logloss:0.69446\n",
      "[78]\tvalidation_0-logloss:0.69445\n",
      "[80]\tvalidation_0-logloss:0.69466\n",
      "[82]\tvalidation_0-logloss:0.69472\n",
      "[84]\tvalidation_0-logloss:0.69476\n",
      "[86]\tvalidation_0-logloss:0.69488\n",
      "[88]\tvalidation_0-logloss:0.69556\n",
      "[90]\tvalidation_0-logloss:0.69547\n",
      "[92]\tvalidation_0-logloss:0.69556\n",
      "[94]\tvalidation_0-logloss:0.69575\n",
      "[96]\tvalidation_0-logloss:0.69584\n",
      "[98]\tvalidation_0-logloss:0.69588\n",
      "[100]\tvalidation_0-logloss:0.69628\n",
      "[102]\tvalidation_0-logloss:0.69630\n",
      "[104]\tvalidation_0-logloss:0.69646\n",
      "[106]\tvalidation_0-logloss:0.69657\n",
      "[108]\tvalidation_0-logloss:0.69686\n",
      "[110]\tvalidation_0-logloss:0.69707\n",
      "[112]\tvalidation_0-logloss:0.69719\n",
      "[114]\tvalidation_0-logloss:0.69742\n",
      "[116]\tvalidation_0-logloss:0.69752\n",
      "[118]\tvalidation_0-logloss:0.69777\n",
      "[120]\tvalidation_0-logloss:0.69768\n",
      "[122]\tvalidation_0-logloss:0.69843\n",
      "[124]\tvalidation_0-logloss:0.69860\n",
      "[126]\tvalidation_0-logloss:0.69865\n",
      "[128]\tvalidation_0-logloss:0.69873\n",
      "[130]\tvalidation_0-logloss:0.69914\n",
      "[132]\tvalidation_0-logloss:0.69924\n",
      "[134]\tvalidation_0-logloss:0.69939\n",
      "[136]\tvalidation_0-logloss:0.69997\n",
      "[138]\tvalidation_0-logloss:0.70038\n",
      "[140]\tvalidation_0-logloss:0.70033\n",
      "[142]\tvalidation_0-logloss:0.70033\n",
      "[144]\tvalidation_0-logloss:0.70087\n",
      "[146]\tvalidation_0-logloss:0.70091\n",
      "[148]\tvalidation_0-logloss:0.70077\n",
      "[150]\tvalidation_0-logloss:0.70101\n",
      "[152]\tvalidation_0-logloss:0.70066\n",
      "[154]\tvalidation_0-logloss:0.70098\n",
      "[156]\tvalidation_0-logloss:0.70126\n",
      "[158]\tvalidation_0-logloss:0.70135\n",
      "[160]\tvalidation_0-logloss:0.70149\n",
      "[162]\tvalidation_0-logloss:0.70146\n",
      "[164]\tvalidation_0-logloss:0.70164\n",
      "[166]\tvalidation_0-logloss:0.70188\n",
      "[168]\tvalidation_0-logloss:0.70214\n",
      "[170]\tvalidation_0-logloss:0.70224\n",
      "[172]\tvalidation_0-logloss:0.70278\n",
      "[174]\tvalidation_0-logloss:0.70277\n",
      "[176]\tvalidation_0-logloss:0.70275\n",
      "[178]\tvalidation_0-logloss:0.70316\n",
      "[180]\tvalidation_0-logloss:0.70304\n",
      "[182]\tvalidation_0-logloss:0.70322\n",
      "[184]\tvalidation_0-logloss:0.70329\n",
      "[186]\tvalidation_0-logloss:0.70351\n",
      "[188]\tvalidation_0-logloss:0.70332\n",
      "[190]\tvalidation_0-logloss:0.70370\n",
      "[192]\tvalidation_0-logloss:0.70402\n",
      "[194]\tvalidation_0-logloss:0.70401\n",
      "[196]\tvalidation_0-logloss:0.70439\n",
      "[198]\tvalidation_0-logloss:0.70442\n",
      "[200]\tvalidation_0-logloss:0.70467\n",
      "[202]\tvalidation_0-logloss:0.70520\n",
      "[204]\tvalidation_0-logloss:0.70535\n",
      "[206]\tvalidation_0-logloss:0.70553\n",
      "[208]\tvalidation_0-logloss:0.70558\n",
      "[210]\tvalidation_0-logloss:0.70580\n",
      "[212]\tvalidation_0-logloss:0.70607\n",
      "[214]\tvalidation_0-logloss:0.70638\n",
      "[216]\tvalidation_0-logloss:0.70665\n",
      "[218]\tvalidation_0-logloss:0.70667\n",
      "[220]\tvalidation_0-logloss:0.70669\n",
      "[222]\tvalidation_0-logloss:0.70678\n",
      "[224]\tvalidation_0-logloss:0.70716\n",
      "[226]\tvalidation_0-logloss:0.70704\n",
      "[228]\tvalidation_0-logloss:0.70734\n",
      "[230]\tvalidation_0-logloss:0.70749\n",
      "[232]\tvalidation_0-logloss:0.70875\n",
      "[234]\tvalidation_0-logloss:0.70895\n",
      "[236]\tvalidation_0-logloss:0.70960\n",
      "[238]\tvalidation_0-logloss:0.71006\n",
      "[240]\tvalidation_0-logloss:0.71026\n",
      "[242]\tvalidation_0-logloss:0.71023\n",
      "[244]\tvalidation_0-logloss:0.71036\n",
      "[246]\tvalidation_0-logloss:0.71033\n",
      "[248]\tvalidation_0-logloss:0.71038\n",
      "[250]\tvalidation_0-logloss:0.71066\n",
      "[252]\tvalidation_0-logloss:0.71070\n",
      "[254]\tvalidation_0-logloss:0.71077\n",
      "[256]\tvalidation_0-logloss:0.71112\n",
      "[258]\tvalidation_0-logloss:0.71121\n",
      "[260]\tvalidation_0-logloss:0.71131\n",
      "[262]\tvalidation_0-logloss:0.71125\n",
      "[264]\tvalidation_0-logloss:0.71145\n",
      "[266]\tvalidation_0-logloss:0.71159\n",
      "[268]\tvalidation_0-logloss:0.71144\n",
      "[270]\tvalidation_0-logloss:0.71144\n",
      "[272]\tvalidation_0-logloss:0.71160\n",
      "[274]\tvalidation_0-logloss:0.71193\n",
      "[276]\tvalidation_0-logloss:0.71206\n",
      "[278]\tvalidation_0-logloss:0.71201\n",
      "[280]\tvalidation_0-logloss:0.71193\n",
      "[282]\tvalidation_0-logloss:0.71192\n",
      "[284]\tvalidation_0-logloss:0.71206\n",
      "[286]\tvalidation_0-logloss:0.71214\n",
      "[288]\tvalidation_0-logloss:0.71191\n",
      "[290]\tvalidation_0-logloss:0.71192\n",
      "[292]\tvalidation_0-logloss:0.71227\n",
      "[294]\tvalidation_0-logloss:0.71268\n",
      "[296]\tvalidation_0-logloss:0.71274\n",
      "[297]\tvalidation_0-logloss:0.71279\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:21:41,846] Trial 30 finished with value: 0.6938469188318814 and parameters: {'eta': 0.0880613447597428, 'gamma': 0.5571820934855594, 'max_depth': 5, 'min_child_weight': 2, 'lambda': 0.048888802829542694, 'alpha': 0.12227223512463226}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:21:46] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69547\n",
      "[2]\tvalidation_0-logloss:0.69559\n",
      "[4]\tvalidation_0-logloss:0.69509\n",
      "[6]\tvalidation_0-logloss:0.69478\n",
      "[8]\tvalidation_0-logloss:0.69509\n",
      "[10]\tvalidation_0-logloss:0.69488\n",
      "[12]\tvalidation_0-logloss:0.69465\n",
      "[14]\tvalidation_0-logloss:0.69471\n",
      "[16]\tvalidation_0-logloss:0.69448\n",
      "[18]\tvalidation_0-logloss:0.69467\n",
      "[20]\tvalidation_0-logloss:0.69470\n",
      "[22]\tvalidation_0-logloss:0.69437\n",
      "[24]\tvalidation_0-logloss:0.69471\n",
      "[26]\tvalidation_0-logloss:0.69467\n",
      "[28]\tvalidation_0-logloss:0.69519\n",
      "[30]\tvalidation_0-logloss:0.69532\n",
      "[32]\tvalidation_0-logloss:0.69469\n",
      "[34]\tvalidation_0-logloss:0.69401\n",
      "[36]\tvalidation_0-logloss:0.69417\n",
      "[38]\tvalidation_0-logloss:0.69395\n",
      "[40]\tvalidation_0-logloss:0.69401\n",
      "[42]\tvalidation_0-logloss:0.69432\n",
      "[44]\tvalidation_0-logloss:0.69435\n",
      "[46]\tvalidation_0-logloss:0.69458\n",
      "[48]\tvalidation_0-logloss:0.69444\n",
      "[50]\tvalidation_0-logloss:0.69439\n",
      "[52]\tvalidation_0-logloss:0.69443\n",
      "[54]\tvalidation_0-logloss:0.69433\n",
      "[56]\tvalidation_0-logloss:0.69440\n",
      "[58]\tvalidation_0-logloss:0.69412\n",
      "[60]\tvalidation_0-logloss:0.69422\n",
      "[62]\tvalidation_0-logloss:0.69449\n",
      "[64]\tvalidation_0-logloss:0.69454\n",
      "[66]\tvalidation_0-logloss:0.69452\n",
      "[68]\tvalidation_0-logloss:0.69446\n",
      "[70]\tvalidation_0-logloss:0.69476\n",
      "[72]\tvalidation_0-logloss:0.69505\n",
      "[74]\tvalidation_0-logloss:0.69501\n",
      "[76]\tvalidation_0-logloss:0.69535\n",
      "[78]\tvalidation_0-logloss:0.69549\n",
      "[80]\tvalidation_0-logloss:0.69561\n",
      "[82]\tvalidation_0-logloss:0.69580\n",
      "[84]\tvalidation_0-logloss:0.69591\n",
      "[86]\tvalidation_0-logloss:0.69607\n",
      "[88]\tvalidation_0-logloss:0.69641\n",
      "[90]\tvalidation_0-logloss:0.69638\n",
      "[92]\tvalidation_0-logloss:0.69628\n",
      "[94]\tvalidation_0-logloss:0.69624\n",
      "[96]\tvalidation_0-logloss:0.69622\n",
      "[98]\tvalidation_0-logloss:0.69620\n",
      "[100]\tvalidation_0-logloss:0.69643\n",
      "[102]\tvalidation_0-logloss:0.69667\n",
      "[104]\tvalidation_0-logloss:0.69662\n",
      "[106]\tvalidation_0-logloss:0.69683\n",
      "[108]\tvalidation_0-logloss:0.69667\n",
      "[110]\tvalidation_0-logloss:0.69649\n",
      "[112]\tvalidation_0-logloss:0.69647\n",
      "[114]\tvalidation_0-logloss:0.69662\n",
      "[116]\tvalidation_0-logloss:0.69666\n",
      "[118]\tvalidation_0-logloss:0.69713\n",
      "[120]\tvalidation_0-logloss:0.69715\n",
      "[122]\tvalidation_0-logloss:0.69788\n",
      "[124]\tvalidation_0-logloss:0.69802\n",
      "[126]\tvalidation_0-logloss:0.69803\n",
      "[128]\tvalidation_0-logloss:0.69799\n",
      "[130]\tvalidation_0-logloss:0.69816\n",
      "[132]\tvalidation_0-logloss:0.69822\n",
      "[134]\tvalidation_0-logloss:0.69836\n",
      "[136]\tvalidation_0-logloss:0.69866\n",
      "[138]\tvalidation_0-logloss:0.69882\n",
      "[140]\tvalidation_0-logloss:0.69900\n",
      "[142]\tvalidation_0-logloss:0.69908\n",
      "[144]\tvalidation_0-logloss:0.69910\n",
      "[146]\tvalidation_0-logloss:0.69886\n",
      "[148]\tvalidation_0-logloss:0.69919\n",
      "[150]\tvalidation_0-logloss:0.69918\n",
      "[152]\tvalidation_0-logloss:0.70002\n",
      "[154]\tvalidation_0-logloss:0.70017\n",
      "[156]\tvalidation_0-logloss:0.70022\n",
      "[158]\tvalidation_0-logloss:0.70034\n",
      "[160]\tvalidation_0-logloss:0.70056\n",
      "[162]\tvalidation_0-logloss:0.70064\n",
      "[164]\tvalidation_0-logloss:0.70068\n",
      "[166]\tvalidation_0-logloss:0.70075\n",
      "[168]\tvalidation_0-logloss:0.70084\n",
      "[170]\tvalidation_0-logloss:0.70113\n",
      "[172]\tvalidation_0-logloss:0.70176\n",
      "[174]\tvalidation_0-logloss:0.70215\n",
      "[176]\tvalidation_0-logloss:0.70214\n",
      "[178]\tvalidation_0-logloss:0.70221\n",
      "[180]\tvalidation_0-logloss:0.70239\n",
      "[182]\tvalidation_0-logloss:0.70244\n",
      "[184]\tvalidation_0-logloss:0.70273\n",
      "[186]\tvalidation_0-logloss:0.70263\n",
      "[188]\tvalidation_0-logloss:0.70279\n",
      "[190]\tvalidation_0-logloss:0.70291\n",
      "[192]\tvalidation_0-logloss:0.70281\n",
      "[194]\tvalidation_0-logloss:0.70300\n",
      "[196]\tvalidation_0-logloss:0.70300\n",
      "[198]\tvalidation_0-logloss:0.70313\n",
      "[200]\tvalidation_0-logloss:0.70334\n",
      "[202]\tvalidation_0-logloss:0.70337\n",
      "[204]\tvalidation_0-logloss:0.70330\n",
      "[206]\tvalidation_0-logloss:0.70333\n",
      "[208]\tvalidation_0-logloss:0.70332\n",
      "[210]\tvalidation_0-logloss:0.70333\n",
      "[212]\tvalidation_0-logloss:0.70336\n",
      "[214]\tvalidation_0-logloss:0.70342\n",
      "[216]\tvalidation_0-logloss:0.70362\n",
      "[218]\tvalidation_0-logloss:0.70370\n",
      "[220]\tvalidation_0-logloss:0.70409\n",
      "[222]\tvalidation_0-logloss:0.70402\n",
      "[224]\tvalidation_0-logloss:0.70421\n",
      "[226]\tvalidation_0-logloss:0.70411\n",
      "[228]\tvalidation_0-logloss:0.70441\n",
      "[230]\tvalidation_0-logloss:0.70433\n",
      "[232]\tvalidation_0-logloss:0.70486\n",
      "[234]\tvalidation_0-logloss:0.70519\n",
      "[236]\tvalidation_0-logloss:0.70594\n",
      "[238]\tvalidation_0-logloss:0.70612\n",
      "[240]\tvalidation_0-logloss:0.70620\n",
      "[242]\tvalidation_0-logloss:0.70623\n",
      "[244]\tvalidation_0-logloss:0.70616\n",
      "[246]\tvalidation_0-logloss:0.70666\n",
      "[248]\tvalidation_0-logloss:0.70669\n",
      "[250]\tvalidation_0-logloss:0.70668\n",
      "[252]\tvalidation_0-logloss:0.70717\n",
      "[254]\tvalidation_0-logloss:0.70699\n",
      "[256]\tvalidation_0-logloss:0.70721\n",
      "[258]\tvalidation_0-logloss:0.70725\n",
      "[260]\tvalidation_0-logloss:0.70731\n",
      "[262]\tvalidation_0-logloss:0.70816\n",
      "[264]\tvalidation_0-logloss:0.70862\n",
      "[266]\tvalidation_0-logloss:0.70881\n",
      "[268]\tvalidation_0-logloss:0.70912\n",
      "[270]\tvalidation_0-logloss:0.70933\n",
      "[272]\tvalidation_0-logloss:0.70961\n",
      "[274]\tvalidation_0-logloss:0.70952\n",
      "[276]\tvalidation_0-logloss:0.70991\n",
      "[278]\tvalidation_0-logloss:0.70983\n",
      "[280]\tvalidation_0-logloss:0.70986\n",
      "[282]\tvalidation_0-logloss:0.71005\n",
      "[284]\tvalidation_0-logloss:0.71003\n",
      "[286]\tvalidation_0-logloss:0.71009\n",
      "[288]\tvalidation_0-logloss:0.71032\n",
      "[289]\tvalidation_0-logloss:0.71020\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:23:12,712] Trial 31 finished with value: 0.6937296942633275 and parameters: {'eta': 0.08368910136202935, 'gamma': 0.5475402354181457, 'max_depth': 5, 'min_child_weight': 1, 'lambda': 0.05920917488942892, 'alpha': 0.14774993054229088}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:23:17] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69545\n",
      "[2]\tvalidation_0-logloss:0.69554\n",
      "[4]\tvalidation_0-logloss:0.69512\n",
      "[6]\tvalidation_0-logloss:0.69488\n",
      "[8]\tvalidation_0-logloss:0.69498\n",
      "[10]\tvalidation_0-logloss:0.69511\n",
      "[12]\tvalidation_0-logloss:0.69496\n",
      "[14]\tvalidation_0-logloss:0.69414\n",
      "[16]\tvalidation_0-logloss:0.69411\n",
      "[18]\tvalidation_0-logloss:0.69416\n",
      "[20]\tvalidation_0-logloss:0.69380\n",
      "[22]\tvalidation_0-logloss:0.69432\n",
      "[24]\tvalidation_0-logloss:0.69414\n",
      "[26]\tvalidation_0-logloss:0.69418\n",
      "[28]\tvalidation_0-logloss:0.69422\n",
      "[30]\tvalidation_0-logloss:0.69431\n",
      "[32]\tvalidation_0-logloss:0.69438\n",
      "[34]\tvalidation_0-logloss:0.69413\n",
      "[36]\tvalidation_0-logloss:0.69415\n",
      "[38]\tvalidation_0-logloss:0.69394\n",
      "[40]\tvalidation_0-logloss:0.69414\n",
      "[42]\tvalidation_0-logloss:0.69415\n",
      "[44]\tvalidation_0-logloss:0.69437\n",
      "[46]\tvalidation_0-logloss:0.69458\n",
      "[48]\tvalidation_0-logloss:0.69466\n",
      "[50]\tvalidation_0-logloss:0.69460\n",
      "[52]\tvalidation_0-logloss:0.69453\n",
      "[54]\tvalidation_0-logloss:0.69462\n",
      "[56]\tvalidation_0-logloss:0.69462\n",
      "[58]\tvalidation_0-logloss:0.69478\n",
      "[60]\tvalidation_0-logloss:0.69471\n",
      "[62]\tvalidation_0-logloss:0.69488\n",
      "[64]\tvalidation_0-logloss:0.69491\n",
      "[66]\tvalidation_0-logloss:0.69492\n",
      "[68]\tvalidation_0-logloss:0.69486\n",
      "[70]\tvalidation_0-logloss:0.69485\n",
      "[72]\tvalidation_0-logloss:0.69462\n",
      "[74]\tvalidation_0-logloss:0.69449\n",
      "[76]\tvalidation_0-logloss:0.69463\n",
      "[78]\tvalidation_0-logloss:0.69498\n",
      "[80]\tvalidation_0-logloss:0.69503\n",
      "[82]\tvalidation_0-logloss:0.69512\n",
      "[84]\tvalidation_0-logloss:0.69527\n",
      "[86]\tvalidation_0-logloss:0.69544\n",
      "[88]\tvalidation_0-logloss:0.69560\n",
      "[90]\tvalidation_0-logloss:0.69562\n",
      "[92]\tvalidation_0-logloss:0.69598\n",
      "[94]\tvalidation_0-logloss:0.69606\n",
      "[96]\tvalidation_0-logloss:0.69617\n",
      "[98]\tvalidation_0-logloss:0.69593\n",
      "[100]\tvalidation_0-logloss:0.69624\n",
      "[102]\tvalidation_0-logloss:0.69685\n",
      "[104]\tvalidation_0-logloss:0.69698\n",
      "[106]\tvalidation_0-logloss:0.69695\n",
      "[108]\tvalidation_0-logloss:0.69695\n",
      "[110]\tvalidation_0-logloss:0.69717\n",
      "[112]\tvalidation_0-logloss:0.69739\n",
      "[114]\tvalidation_0-logloss:0.69722\n",
      "[116]\tvalidation_0-logloss:0.69728\n",
      "[118]\tvalidation_0-logloss:0.69739\n",
      "[120]\tvalidation_0-logloss:0.69733\n",
      "[122]\tvalidation_0-logloss:0.69736\n",
      "[124]\tvalidation_0-logloss:0.69777\n",
      "[126]\tvalidation_0-logloss:0.69799\n",
      "[128]\tvalidation_0-logloss:0.69782\n",
      "[130]\tvalidation_0-logloss:0.69793\n",
      "[132]\tvalidation_0-logloss:0.69810\n",
      "[134]\tvalidation_0-logloss:0.69798\n",
      "[136]\tvalidation_0-logloss:0.69808\n",
      "[138]\tvalidation_0-logloss:0.69822\n",
      "[140]\tvalidation_0-logloss:0.69859\n",
      "[142]\tvalidation_0-logloss:0.69842\n",
      "[144]\tvalidation_0-logloss:0.69855\n",
      "[146]\tvalidation_0-logloss:0.69860\n",
      "[148]\tvalidation_0-logloss:0.69888\n",
      "[150]\tvalidation_0-logloss:0.69890\n",
      "[152]\tvalidation_0-logloss:0.69844\n",
      "[154]\tvalidation_0-logloss:0.69870\n",
      "[156]\tvalidation_0-logloss:0.69888\n",
      "[158]\tvalidation_0-logloss:0.69927\n",
      "[160]\tvalidation_0-logloss:0.69943\n",
      "[162]\tvalidation_0-logloss:0.69936\n",
      "[164]\tvalidation_0-logloss:0.69964\n",
      "[166]\tvalidation_0-logloss:0.69970\n",
      "[168]\tvalidation_0-logloss:0.69992\n",
      "[170]\tvalidation_0-logloss:0.70052\n",
      "[172]\tvalidation_0-logloss:0.70066\n",
      "[174]\tvalidation_0-logloss:0.70070\n",
      "[176]\tvalidation_0-logloss:0.70076\n",
      "[178]\tvalidation_0-logloss:0.70070\n",
      "[180]\tvalidation_0-logloss:0.70126\n",
      "[182]\tvalidation_0-logloss:0.70149\n",
      "[184]\tvalidation_0-logloss:0.70190\n",
      "[186]\tvalidation_0-logloss:0.70200\n",
      "[188]\tvalidation_0-logloss:0.70200\n",
      "[190]\tvalidation_0-logloss:0.70211\n",
      "[192]\tvalidation_0-logloss:0.70218\n",
      "[194]\tvalidation_0-logloss:0.70188\n",
      "[196]\tvalidation_0-logloss:0.70190\n",
      "[198]\tvalidation_0-logloss:0.70220\n",
      "[200]\tvalidation_0-logloss:0.70210\n",
      "[202]\tvalidation_0-logloss:0.70203\n",
      "[204]\tvalidation_0-logloss:0.70211\n",
      "[206]\tvalidation_0-logloss:0.70222\n",
      "[208]\tvalidation_0-logloss:0.70263\n",
      "[210]\tvalidation_0-logloss:0.70261\n",
      "[212]\tvalidation_0-logloss:0.70269\n",
      "[214]\tvalidation_0-logloss:0.70270\n",
      "[216]\tvalidation_0-logloss:0.70275\n",
      "[218]\tvalidation_0-logloss:0.70294\n",
      "[220]\tvalidation_0-logloss:0.70295\n",
      "[222]\tvalidation_0-logloss:0.70289\n",
      "[224]\tvalidation_0-logloss:0.70351\n",
      "[226]\tvalidation_0-logloss:0.70375\n",
      "[228]\tvalidation_0-logloss:0.70388\n",
      "[230]\tvalidation_0-logloss:0.70408\n",
      "[232]\tvalidation_0-logloss:0.70407\n",
      "[234]\tvalidation_0-logloss:0.70393\n",
      "[236]\tvalidation_0-logloss:0.70394\n",
      "[238]\tvalidation_0-logloss:0.70392\n",
      "[240]\tvalidation_0-logloss:0.70408\n",
      "[242]\tvalidation_0-logloss:0.70397\n",
      "[244]\tvalidation_0-logloss:0.70418\n",
      "[246]\tvalidation_0-logloss:0.70419\n",
      "[248]\tvalidation_0-logloss:0.70413\n",
      "[250]\tvalidation_0-logloss:0.70417\n",
      "[252]\tvalidation_0-logloss:0.70433\n",
      "[254]\tvalidation_0-logloss:0.70463\n",
      "[256]\tvalidation_0-logloss:0.70484\n",
      "[258]\tvalidation_0-logloss:0.70510\n",
      "[260]\tvalidation_0-logloss:0.70564\n",
      "[262]\tvalidation_0-logloss:0.70628\n",
      "[264]\tvalidation_0-logloss:0.70634\n",
      "[266]\tvalidation_0-logloss:0.70648\n",
      "[268]\tvalidation_0-logloss:0.70673\n",
      "[270]\tvalidation_0-logloss:0.70682\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:24:35,367] Trial 32 finished with value: 0.6938038061732397 and parameters: {'eta': 0.07827436070857045, 'gamma': 0.544597424911939, 'max_depth': 5, 'min_child_weight': 2, 'lambda': 0.25042519348067277, 'alpha': 0.10173572351736193}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:24:40] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69514\n",
      "[2]\tvalidation_0-logloss:0.69635\n",
      "[4]\tvalidation_0-logloss:0.69641\n",
      "[6]\tvalidation_0-logloss:0.69630\n",
      "[8]\tvalidation_0-logloss:0.69666\n",
      "[10]\tvalidation_0-logloss:0.69675\n",
      "[12]\tvalidation_0-logloss:0.69707\n",
      "[14]\tvalidation_0-logloss:0.69767\n",
      "[16]\tvalidation_0-logloss:0.69721\n",
      "[18]\tvalidation_0-logloss:0.69746\n",
      "[20]\tvalidation_0-logloss:0.69757\n",
      "[22]\tvalidation_0-logloss:0.69725\n",
      "[24]\tvalidation_0-logloss:0.69771\n",
      "[26]\tvalidation_0-logloss:0.69786\n",
      "[28]\tvalidation_0-logloss:0.69832\n",
      "[30]\tvalidation_0-logloss:0.69827\n",
      "[32]\tvalidation_0-logloss:0.69842\n",
      "[34]\tvalidation_0-logloss:0.69839\n",
      "[36]\tvalidation_0-logloss:0.69850\n",
      "[38]\tvalidation_0-logloss:0.69857\n",
      "[40]\tvalidation_0-logloss:0.69925\n",
      "[42]\tvalidation_0-logloss:0.69932\n",
      "[44]\tvalidation_0-logloss:0.69936\n",
      "[46]\tvalidation_0-logloss:0.69947\n",
      "[48]\tvalidation_0-logloss:0.69937\n",
      "[50]\tvalidation_0-logloss:0.69969\n",
      "[52]\tvalidation_0-logloss:0.70026\n",
      "[54]\tvalidation_0-logloss:0.70028\n",
      "[56]\tvalidation_0-logloss:0.70028\n",
      "[58]\tvalidation_0-logloss:0.70010\n",
      "[60]\tvalidation_0-logloss:0.69999\n",
      "[62]\tvalidation_0-logloss:0.70077\n",
      "[64]\tvalidation_0-logloss:0.70110\n",
      "[66]\tvalidation_0-logloss:0.70082\n",
      "[68]\tvalidation_0-logloss:0.70166\n",
      "[70]\tvalidation_0-logloss:0.70215\n",
      "[72]\tvalidation_0-logloss:0.70226\n",
      "[74]\tvalidation_0-logloss:0.70261\n",
      "[76]\tvalidation_0-logloss:0.70270\n",
      "[78]\tvalidation_0-logloss:0.70268\n",
      "[80]\tvalidation_0-logloss:0.70292\n",
      "[82]\tvalidation_0-logloss:0.70341\n",
      "[84]\tvalidation_0-logloss:0.70337\n",
      "[86]\tvalidation_0-logloss:0.70400\n",
      "[88]\tvalidation_0-logloss:0.70418\n",
      "[90]\tvalidation_0-logloss:0.70408\n",
      "[92]\tvalidation_0-logloss:0.70433\n",
      "[94]\tvalidation_0-logloss:0.70472\n",
      "[96]\tvalidation_0-logloss:0.70504\n",
      "[98]\tvalidation_0-logloss:0.70523\n",
      "[100]\tvalidation_0-logloss:0.70555\n",
      "[102]\tvalidation_0-logloss:0.70542\n",
      "[104]\tvalidation_0-logloss:0.70586\n",
      "[106]\tvalidation_0-logloss:0.70590\n",
      "[108]\tvalidation_0-logloss:0.70585\n",
      "[110]\tvalidation_0-logloss:0.70596\n",
      "[112]\tvalidation_0-logloss:0.70596\n",
      "[114]\tvalidation_0-logloss:0.70658\n",
      "[116]\tvalidation_0-logloss:0.70693\n",
      "[118]\tvalidation_0-logloss:0.70723\n",
      "[120]\tvalidation_0-logloss:0.70751\n",
      "[122]\tvalidation_0-logloss:0.70761\n",
      "[124]\tvalidation_0-logloss:0.70769\n",
      "[126]\tvalidation_0-logloss:0.70793\n",
      "[128]\tvalidation_0-logloss:0.70804\n",
      "[130]\tvalidation_0-logloss:0.70854\n",
      "[132]\tvalidation_0-logloss:0.70890\n",
      "[134]\tvalidation_0-logloss:0.70861\n",
      "[136]\tvalidation_0-logloss:0.70907\n",
      "[138]\tvalidation_0-logloss:0.70939\n",
      "[140]\tvalidation_0-logloss:0.70987\n",
      "[142]\tvalidation_0-logloss:0.71021\n",
      "[144]\tvalidation_0-logloss:0.71034\n",
      "[146]\tvalidation_0-logloss:0.71046\n",
      "[148]\tvalidation_0-logloss:0.71051\n",
      "[150]\tvalidation_0-logloss:0.71066\n",
      "[152]\tvalidation_0-logloss:0.71079\n",
      "[154]\tvalidation_0-logloss:0.71066\n",
      "[156]\tvalidation_0-logloss:0.71065\n",
      "[158]\tvalidation_0-logloss:0.71075\n",
      "[160]\tvalidation_0-logloss:0.71101\n",
      "[162]\tvalidation_0-logloss:0.71125\n",
      "[164]\tvalidation_0-logloss:0.71143\n",
      "[166]\tvalidation_0-logloss:0.71165\n",
      "[168]\tvalidation_0-logloss:0.71208\n",
      "[170]\tvalidation_0-logloss:0.71216\n",
      "[172]\tvalidation_0-logloss:0.71215\n",
      "[174]\tvalidation_0-logloss:0.71224\n",
      "[176]\tvalidation_0-logloss:0.71284\n",
      "[178]\tvalidation_0-logloss:0.71286\n",
      "[180]\tvalidation_0-logloss:0.71300\n",
      "[182]\tvalidation_0-logloss:0.71303\n",
      "[184]\tvalidation_0-logloss:0.71310\n",
      "[186]\tvalidation_0-logloss:0.71343\n",
      "[188]\tvalidation_0-logloss:0.71363\n",
      "[190]\tvalidation_0-logloss:0.71396\n",
      "[192]\tvalidation_0-logloss:0.71412\n",
      "[194]\tvalidation_0-logloss:0.71424\n",
      "[196]\tvalidation_0-logloss:0.71439\n",
      "[198]\tvalidation_0-logloss:0.71442\n",
      "[200]\tvalidation_0-logloss:0.71432\n",
      "[202]\tvalidation_0-logloss:0.71438\n",
      "[204]\tvalidation_0-logloss:0.71438\n",
      "[206]\tvalidation_0-logloss:0.71495\n",
      "[208]\tvalidation_0-logloss:0.71510\n",
      "[210]\tvalidation_0-logloss:0.71601\n",
      "[212]\tvalidation_0-logloss:0.71597\n",
      "[214]\tvalidation_0-logloss:0.71630\n",
      "[216]\tvalidation_0-logloss:0.71615\n",
      "[218]\tvalidation_0-logloss:0.71634\n",
      "[220]\tvalidation_0-logloss:0.71630\n",
      "[222]\tvalidation_0-logloss:0.71650\n",
      "[224]\tvalidation_0-logloss:0.71611\n",
      "[226]\tvalidation_0-logloss:0.71625\n",
      "[228]\tvalidation_0-logloss:0.71641\n",
      "[230]\tvalidation_0-logloss:0.71626\n",
      "[232]\tvalidation_0-logloss:0.71650\n",
      "[234]\tvalidation_0-logloss:0.71675\n",
      "[236]\tvalidation_0-logloss:0.71700\n",
      "[238]\tvalidation_0-logloss:0.71729\n",
      "[240]\tvalidation_0-logloss:0.71778\n",
      "[242]\tvalidation_0-logloss:0.71804\n",
      "[244]\tvalidation_0-logloss:0.71843\n",
      "[246]\tvalidation_0-logloss:0.71846\n",
      "[248]\tvalidation_0-logloss:0.71866\n",
      "[250]\tvalidation_0-logloss:0.71865\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:26:04,550] Trial 33 finished with value: 0.6951439960850073 and parameters: {'eta': 0.06604163425369414, 'gamma': 0.6608122283644117, 'max_depth': 7, 'min_child_weight': 3, 'lambda': 0.27337030411690394, 'alpha': 0.12482732044052416}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:26:09] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69557\n",
      "[2]\tvalidation_0-logloss:0.69582\n",
      "[4]\tvalidation_0-logloss:0.69526\n",
      "[6]\tvalidation_0-logloss:0.69551\n",
      "[8]\tvalidation_0-logloss:0.69568\n",
      "[10]\tvalidation_0-logloss:0.69544\n",
      "[12]\tvalidation_0-logloss:0.69632\n",
      "[14]\tvalidation_0-logloss:0.69668\n",
      "[16]\tvalidation_0-logloss:0.69666\n",
      "[18]\tvalidation_0-logloss:0.69583\n",
      "[20]\tvalidation_0-logloss:0.69604\n",
      "[22]\tvalidation_0-logloss:0.69595\n",
      "[24]\tvalidation_0-logloss:0.69623\n",
      "[26]\tvalidation_0-logloss:0.69597\n",
      "[28]\tvalidation_0-logloss:0.69614\n",
      "[30]\tvalidation_0-logloss:0.69547\n",
      "[32]\tvalidation_0-logloss:0.69549\n",
      "[34]\tvalidation_0-logloss:0.69502\n",
      "[36]\tvalidation_0-logloss:0.69495\n",
      "[38]\tvalidation_0-logloss:0.69526\n",
      "[40]\tvalidation_0-logloss:0.69561\n",
      "[42]\tvalidation_0-logloss:0.69608\n",
      "[44]\tvalidation_0-logloss:0.69602\n",
      "[46]\tvalidation_0-logloss:0.69616\n",
      "[48]\tvalidation_0-logloss:0.69633\n",
      "[50]\tvalidation_0-logloss:0.69718\n",
      "[52]\tvalidation_0-logloss:0.69700\n",
      "[54]\tvalidation_0-logloss:0.69716\n",
      "[56]\tvalidation_0-logloss:0.69684\n",
      "[58]\tvalidation_0-logloss:0.69697\n",
      "[60]\tvalidation_0-logloss:0.69705\n",
      "[62]\tvalidation_0-logloss:0.69699\n",
      "[64]\tvalidation_0-logloss:0.69696\n",
      "[66]\tvalidation_0-logloss:0.69706\n",
      "[68]\tvalidation_0-logloss:0.69758\n",
      "[70]\tvalidation_0-logloss:0.69788\n",
      "[72]\tvalidation_0-logloss:0.69802\n",
      "[74]\tvalidation_0-logloss:0.69802\n",
      "[76]\tvalidation_0-logloss:0.69798\n",
      "[78]\tvalidation_0-logloss:0.69766\n",
      "[80]\tvalidation_0-logloss:0.69765\n",
      "[82]\tvalidation_0-logloss:0.69795\n",
      "[84]\tvalidation_0-logloss:0.69804\n",
      "[86]\tvalidation_0-logloss:0.69838\n",
      "[88]\tvalidation_0-logloss:0.69834\n",
      "[90]\tvalidation_0-logloss:0.69852\n",
      "[92]\tvalidation_0-logloss:0.69880\n",
      "[94]\tvalidation_0-logloss:0.69844\n",
      "[96]\tvalidation_0-logloss:0.69913\n",
      "[98]\tvalidation_0-logloss:0.69913\n",
      "[100]\tvalidation_0-logloss:0.69962\n",
      "[102]\tvalidation_0-logloss:0.69976\n",
      "[104]\tvalidation_0-logloss:0.70050\n",
      "[106]\tvalidation_0-logloss:0.70084\n",
      "[108]\tvalidation_0-logloss:0.70091\n",
      "[110]\tvalidation_0-logloss:0.70108\n",
      "[112]\tvalidation_0-logloss:0.70160\n",
      "[114]\tvalidation_0-logloss:0.70172\n",
      "[116]\tvalidation_0-logloss:0.70205\n",
      "[118]\tvalidation_0-logloss:0.70237\n",
      "[120]\tvalidation_0-logloss:0.70242\n",
      "[122]\tvalidation_0-logloss:0.70258\n",
      "[124]\tvalidation_0-logloss:0.70290\n",
      "[126]\tvalidation_0-logloss:0.70363\n",
      "[128]\tvalidation_0-logloss:0.70387\n",
      "[130]\tvalidation_0-logloss:0.70410\n",
      "[132]\tvalidation_0-logloss:0.70421\n",
      "[134]\tvalidation_0-logloss:0.70447\n",
      "[136]\tvalidation_0-logloss:0.70478\n",
      "[138]\tvalidation_0-logloss:0.70472\n",
      "[140]\tvalidation_0-logloss:0.70492\n",
      "[142]\tvalidation_0-logloss:0.70588\n",
      "[144]\tvalidation_0-logloss:0.70629\n",
      "[146]\tvalidation_0-logloss:0.70625\n",
      "[148]\tvalidation_0-logloss:0.70622\n",
      "[150]\tvalidation_0-logloss:0.70606\n",
      "[152]\tvalidation_0-logloss:0.70635\n",
      "[154]\tvalidation_0-logloss:0.70624\n",
      "[156]\tvalidation_0-logloss:0.70631\n",
      "[158]\tvalidation_0-logloss:0.70697\n",
      "[160]\tvalidation_0-logloss:0.70735\n",
      "[162]\tvalidation_0-logloss:0.70733\n",
      "[164]\tvalidation_0-logloss:0.70749\n",
      "[166]\tvalidation_0-logloss:0.70761\n",
      "[168]\tvalidation_0-logloss:0.70745\n",
      "[170]\tvalidation_0-logloss:0.70766\n",
      "[172]\tvalidation_0-logloss:0.70799\n",
      "[174]\tvalidation_0-logloss:0.70818\n",
      "[176]\tvalidation_0-logloss:0.70854\n",
      "[178]\tvalidation_0-logloss:0.70883\n",
      "[180]\tvalidation_0-logloss:0.70893\n",
      "[182]\tvalidation_0-logloss:0.70908\n",
      "[184]\tvalidation_0-logloss:0.70922\n",
      "[186]\tvalidation_0-logloss:0.70961\n",
      "[188]\tvalidation_0-logloss:0.70981\n",
      "[190]\tvalidation_0-logloss:0.71007\n",
      "[192]\tvalidation_0-logloss:0.71007\n",
      "[194]\tvalidation_0-logloss:0.71048\n",
      "[196]\tvalidation_0-logloss:0.71066\n",
      "[198]\tvalidation_0-logloss:0.71062\n",
      "[200]\tvalidation_0-logloss:0.71084\n",
      "[202]\tvalidation_0-logloss:0.71096\n",
      "[204]\tvalidation_0-logloss:0.71162\n",
      "[206]\tvalidation_0-logloss:0.71194\n",
      "[208]\tvalidation_0-logloss:0.71187\n",
      "[210]\tvalidation_0-logloss:0.71238\n",
      "[212]\tvalidation_0-logloss:0.71270\n",
      "[214]\tvalidation_0-logloss:0.71292\n",
      "[216]\tvalidation_0-logloss:0.71310\n",
      "[218]\tvalidation_0-logloss:0.71309\n",
      "[220]\tvalidation_0-logloss:0.71310\n",
      "[222]\tvalidation_0-logloss:0.71297\n",
      "[224]\tvalidation_0-logloss:0.71336\n",
      "[226]\tvalidation_0-logloss:0.71381\n",
      "[228]\tvalidation_0-logloss:0.71400\n",
      "[230]\tvalidation_0-logloss:0.71369\n",
      "[232]\tvalidation_0-logloss:0.71375\n",
      "[234]\tvalidation_0-logloss:0.71402\n",
      "[236]\tvalidation_0-logloss:0.71409\n",
      "[238]\tvalidation_0-logloss:0.71417\n",
      "[240]\tvalidation_0-logloss:0.71437\n",
      "[242]\tvalidation_0-logloss:0.71437\n",
      "[244]\tvalidation_0-logloss:0.71462\n",
      "[246]\tvalidation_0-logloss:0.71473\n",
      "[248]\tvalidation_0-logloss:0.71548\n",
      "[250]\tvalidation_0-logloss:0.71569\n",
      "[252]\tvalidation_0-logloss:0.71607\n",
      "[254]\tvalidation_0-logloss:0.71610\n",
      "[256]\tvalidation_0-logloss:0.71643\n",
      "[258]\tvalidation_0-logloss:0.71602\n",
      "[260]\tvalidation_0-logloss:0.71617\n",
      "[262]\tvalidation_0-logloss:0.71631\n",
      "[264]\tvalidation_0-logloss:0.71656\n",
      "[266]\tvalidation_0-logloss:0.71719\n",
      "[268]\tvalidation_0-logloss:0.71794\n",
      "[270]\tvalidation_0-logloss:0.71823\n",
      "[272]\tvalidation_0-logloss:0.71828\n",
      "[274]\tvalidation_0-logloss:0.71805\n",
      "[276]\tvalidation_0-logloss:0.71815\n",
      "[278]\tvalidation_0-logloss:0.71807\n",
      "[280]\tvalidation_0-logloss:0.71819\n",
      "[282]\tvalidation_0-logloss:0.71819\n",
      "[284]\tvalidation_0-logloss:0.71835\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:27:29,717] Trial 34 finished with value: 0.69489464984344 and parameters: {'eta': 0.10644952089152304, 'gamma': 0.7599959265663178, 'max_depth': 5, 'min_child_weight': 5, 'lambda': 0.1529965455086058, 'alpha': 0.18242772274457436}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:27:34] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69514\n",
      "[2]\tvalidation_0-logloss:0.69571\n",
      "[4]\tvalidation_0-logloss:0.69641\n",
      "[6]\tvalidation_0-logloss:0.69662\n",
      "[8]\tvalidation_0-logloss:0.69632\n",
      "[10]\tvalidation_0-logloss:0.69630\n",
      "[12]\tvalidation_0-logloss:0.69661\n",
      "[14]\tvalidation_0-logloss:0.69635\n",
      "[16]\tvalidation_0-logloss:0.69656\n",
      "[18]\tvalidation_0-logloss:0.69660\n",
      "[20]\tvalidation_0-logloss:0.69643\n",
      "[22]\tvalidation_0-logloss:0.69667\n",
      "[24]\tvalidation_0-logloss:0.69696\n",
      "[26]\tvalidation_0-logloss:0.69694\n",
      "[28]\tvalidation_0-logloss:0.69692\n",
      "[30]\tvalidation_0-logloss:0.69715\n",
      "[32]\tvalidation_0-logloss:0.69722\n",
      "[34]\tvalidation_0-logloss:0.69721\n",
      "[36]\tvalidation_0-logloss:0.69716\n",
      "[38]\tvalidation_0-logloss:0.69726\n",
      "[40]\tvalidation_0-logloss:0.69760\n",
      "[42]\tvalidation_0-logloss:0.69776\n",
      "[44]\tvalidation_0-logloss:0.69801\n",
      "[46]\tvalidation_0-logloss:0.69818\n",
      "[48]\tvalidation_0-logloss:0.69848\n",
      "[50]\tvalidation_0-logloss:0.69832\n",
      "[52]\tvalidation_0-logloss:0.69867\n",
      "[54]\tvalidation_0-logloss:0.69858\n",
      "[56]\tvalidation_0-logloss:0.69867\n",
      "[58]\tvalidation_0-logloss:0.69863\n",
      "[60]\tvalidation_0-logloss:0.69875\n",
      "[62]\tvalidation_0-logloss:0.69935\n",
      "[64]\tvalidation_0-logloss:0.69939\n",
      "[66]\tvalidation_0-logloss:0.69953\n",
      "[68]\tvalidation_0-logloss:0.69954\n",
      "[70]\tvalidation_0-logloss:0.69950\n",
      "[72]\tvalidation_0-logloss:0.70001\n",
      "[74]\tvalidation_0-logloss:0.69998\n",
      "[76]\tvalidation_0-logloss:0.70006\n",
      "[78]\tvalidation_0-logloss:0.70017\n",
      "[80]\tvalidation_0-logloss:0.70065\n",
      "[82]\tvalidation_0-logloss:0.70116\n",
      "[84]\tvalidation_0-logloss:0.70116\n",
      "[86]\tvalidation_0-logloss:0.70173\n",
      "[88]\tvalidation_0-logloss:0.70158\n",
      "[90]\tvalidation_0-logloss:0.70201\n",
      "[92]\tvalidation_0-logloss:0.70196\n",
      "[94]\tvalidation_0-logloss:0.70221\n",
      "[96]\tvalidation_0-logloss:0.70237\n",
      "[98]\tvalidation_0-logloss:0.70248\n",
      "[100]\tvalidation_0-logloss:0.70253\n",
      "[102]\tvalidation_0-logloss:0.70242\n",
      "[104]\tvalidation_0-logloss:0.70337\n",
      "[106]\tvalidation_0-logloss:0.70342\n",
      "[108]\tvalidation_0-logloss:0.70377\n",
      "[110]\tvalidation_0-logloss:0.70390\n",
      "[112]\tvalidation_0-logloss:0.70407\n",
      "[114]\tvalidation_0-logloss:0.70450\n",
      "[116]\tvalidation_0-logloss:0.70437\n",
      "[118]\tvalidation_0-logloss:0.70462\n",
      "[120]\tvalidation_0-logloss:0.70476\n",
      "[122]\tvalidation_0-logloss:0.70500\n",
      "[124]\tvalidation_0-logloss:0.70517\n",
      "[126]\tvalidation_0-logloss:0.70514\n",
      "[128]\tvalidation_0-logloss:0.70535\n",
      "[130]\tvalidation_0-logloss:0.70575\n",
      "[132]\tvalidation_0-logloss:0.70594\n",
      "[134]\tvalidation_0-logloss:0.70613\n",
      "[136]\tvalidation_0-logloss:0.70664\n",
      "[138]\tvalidation_0-logloss:0.70653\n",
      "[140]\tvalidation_0-logloss:0.70693\n",
      "[142]\tvalidation_0-logloss:0.70719\n",
      "[144]\tvalidation_0-logloss:0.70728\n",
      "[146]\tvalidation_0-logloss:0.70736\n",
      "[148]\tvalidation_0-logloss:0.70748\n",
      "[150]\tvalidation_0-logloss:0.70757\n",
      "[152]\tvalidation_0-logloss:0.70815\n",
      "[154]\tvalidation_0-logloss:0.70832\n",
      "[156]\tvalidation_0-logloss:0.70830\n",
      "[158]\tvalidation_0-logloss:0.70834\n",
      "[160]\tvalidation_0-logloss:0.70847\n",
      "[162]\tvalidation_0-logloss:0.70846\n",
      "[164]\tvalidation_0-logloss:0.70864\n",
      "[166]\tvalidation_0-logloss:0.70896\n",
      "[168]\tvalidation_0-logloss:0.70894\n",
      "[170]\tvalidation_0-logloss:0.70899\n",
      "[172]\tvalidation_0-logloss:0.70914\n",
      "[174]\tvalidation_0-logloss:0.70916\n",
      "[176]\tvalidation_0-logloss:0.70933\n",
      "[178]\tvalidation_0-logloss:0.70924\n",
      "[180]\tvalidation_0-logloss:0.70926\n",
      "[182]\tvalidation_0-logloss:0.70946\n",
      "[184]\tvalidation_0-logloss:0.70979\n",
      "[186]\tvalidation_0-logloss:0.71005\n",
      "[188]\tvalidation_0-logloss:0.71019\n",
      "[190]\tvalidation_0-logloss:0.71017\n",
      "[192]\tvalidation_0-logloss:0.71035\n",
      "[194]\tvalidation_0-logloss:0.71044\n",
      "[196]\tvalidation_0-logloss:0.71048\n",
      "[198]\tvalidation_0-logloss:0.71057\n",
      "[200]\tvalidation_0-logloss:0.71048\n",
      "[202]\tvalidation_0-logloss:0.71053\n",
      "[204]\tvalidation_0-logloss:0.71076\n",
      "[206]\tvalidation_0-logloss:0.71104\n",
      "[208]\tvalidation_0-logloss:0.71120\n",
      "[210]\tvalidation_0-logloss:0.71142\n",
      "[212]\tvalidation_0-logloss:0.71156\n",
      "[214]\tvalidation_0-logloss:0.71210\n",
      "[216]\tvalidation_0-logloss:0.71231\n",
      "[218]\tvalidation_0-logloss:0.71273\n",
      "[220]\tvalidation_0-logloss:0.71289\n",
      "[222]\tvalidation_0-logloss:0.71315\n",
      "[224]\tvalidation_0-logloss:0.71331\n",
      "[226]\tvalidation_0-logloss:0.71341\n",
      "[228]\tvalidation_0-logloss:0.71349\n",
      "[230]\tvalidation_0-logloss:0.71341\n",
      "[232]\tvalidation_0-logloss:0.71363\n",
      "[234]\tvalidation_0-logloss:0.71363\n",
      "[236]\tvalidation_0-logloss:0.71397\n",
      "[238]\tvalidation_0-logloss:0.71399\n",
      "[240]\tvalidation_0-logloss:0.71402\n",
      "[242]\tvalidation_0-logloss:0.71404\n",
      "[244]\tvalidation_0-logloss:0.71384\n",
      "[246]\tvalidation_0-logloss:0.71392\n",
      "[248]\tvalidation_0-logloss:0.71395\n",
      "[249]\tvalidation_0-logloss:0.71405\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:28:55,825] Trial 35 finished with value: 0.6951374979402641 and parameters: {'eta': 0.055962745341250196, 'gamma': 0.5077932385234948, 'max_depth': 7, 'min_child_weight': 1, 'lambda': 0.23710950269913272, 'alpha': 0.07340123228373706}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:29:00] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69530\n",
      "[2]\tvalidation_0-logloss:0.69563\n",
      "[4]\tvalidation_0-logloss:0.69602\n",
      "[6]\tvalidation_0-logloss:0.69601\n",
      "[8]\tvalidation_0-logloss:0.69574\n",
      "[10]\tvalidation_0-logloss:0.69576\n",
      "[12]\tvalidation_0-logloss:0.69565\n",
      "[14]\tvalidation_0-logloss:0.69561\n",
      "[16]\tvalidation_0-logloss:0.69525\n",
      "[18]\tvalidation_0-logloss:0.69506\n",
      "[20]\tvalidation_0-logloss:0.69504\n",
      "[22]\tvalidation_0-logloss:0.69510\n",
      "[24]\tvalidation_0-logloss:0.69521\n",
      "[26]\tvalidation_0-logloss:0.69520\n",
      "[28]\tvalidation_0-logloss:0.69523\n",
      "[30]\tvalidation_0-logloss:0.69550\n",
      "[32]\tvalidation_0-logloss:0.69547\n",
      "[34]\tvalidation_0-logloss:0.69580\n",
      "[36]\tvalidation_0-logloss:0.69572\n",
      "[38]\tvalidation_0-logloss:0.69562\n",
      "[40]\tvalidation_0-logloss:0.69596\n",
      "[42]\tvalidation_0-logloss:0.69586\n",
      "[44]\tvalidation_0-logloss:0.69602\n",
      "[46]\tvalidation_0-logloss:0.69594\n",
      "[48]\tvalidation_0-logloss:0.69607\n",
      "[50]\tvalidation_0-logloss:0.69606\n",
      "[52]\tvalidation_0-logloss:0.69598\n",
      "[54]\tvalidation_0-logloss:0.69612\n",
      "[56]\tvalidation_0-logloss:0.69602\n",
      "[58]\tvalidation_0-logloss:0.69602\n",
      "[60]\tvalidation_0-logloss:0.69608\n",
      "[62]\tvalidation_0-logloss:0.69600\n",
      "[64]\tvalidation_0-logloss:0.69622\n",
      "[66]\tvalidation_0-logloss:0.69637\n",
      "[68]\tvalidation_0-logloss:0.69648\n",
      "[70]\tvalidation_0-logloss:0.69644\n",
      "[72]\tvalidation_0-logloss:0.69655\n",
      "[74]\tvalidation_0-logloss:0.69659\n",
      "[76]\tvalidation_0-logloss:0.69646\n",
      "[78]\tvalidation_0-logloss:0.69654\n",
      "[80]\tvalidation_0-logloss:0.69660\n",
      "[82]\tvalidation_0-logloss:0.69672\n",
      "[84]\tvalidation_0-logloss:0.69685\n",
      "[86]\tvalidation_0-logloss:0.69679\n",
      "[88]\tvalidation_0-logloss:0.69679\n",
      "[90]\tvalidation_0-logloss:0.69692\n",
      "[92]\tvalidation_0-logloss:0.69683\n",
      "[94]\tvalidation_0-logloss:0.69697\n",
      "[96]\tvalidation_0-logloss:0.69719\n",
      "[98]\tvalidation_0-logloss:0.69718\n",
      "[100]\tvalidation_0-logloss:0.69723\n",
      "[102]\tvalidation_0-logloss:0.69716\n",
      "[104]\tvalidation_0-logloss:0.69727\n",
      "[106]\tvalidation_0-logloss:0.69728\n",
      "[108]\tvalidation_0-logloss:0.69716\n",
      "[110]\tvalidation_0-logloss:0.69709\n",
      "[112]\tvalidation_0-logloss:0.69706\n",
      "[114]\tvalidation_0-logloss:0.69710\n",
      "[116]\tvalidation_0-logloss:0.69706\n",
      "[118]\tvalidation_0-logloss:0.69732\n",
      "[120]\tvalidation_0-logloss:0.69722\n",
      "[122]\tvalidation_0-logloss:0.69718\n",
      "[124]\tvalidation_0-logloss:0.69709\n",
      "[126]\tvalidation_0-logloss:0.69725\n",
      "[128]\tvalidation_0-logloss:0.69732\n",
      "[130]\tvalidation_0-logloss:0.69736\n",
      "[132]\tvalidation_0-logloss:0.69750\n",
      "[134]\tvalidation_0-logloss:0.69752\n",
      "[136]\tvalidation_0-logloss:0.69739\n",
      "[138]\tvalidation_0-logloss:0.69732\n",
      "[140]\tvalidation_0-logloss:0.69727\n",
      "[142]\tvalidation_0-logloss:0.69737\n",
      "[144]\tvalidation_0-logloss:0.69767\n",
      "[146]\tvalidation_0-logloss:0.69768\n",
      "[148]\tvalidation_0-logloss:0.69774\n",
      "[150]\tvalidation_0-logloss:0.69784\n",
      "[152]\tvalidation_0-logloss:0.69797\n",
      "[154]\tvalidation_0-logloss:0.69801\n",
      "[156]\tvalidation_0-logloss:0.69806\n",
      "[158]\tvalidation_0-logloss:0.69824\n",
      "[160]\tvalidation_0-logloss:0.69826\n",
      "[162]\tvalidation_0-logloss:0.69834\n",
      "[164]\tvalidation_0-logloss:0.69827\n",
      "[166]\tvalidation_0-logloss:0.69844\n",
      "[168]\tvalidation_0-logloss:0.69847\n",
      "[170]\tvalidation_0-logloss:0.69856\n",
      "[172]\tvalidation_0-logloss:0.69861\n",
      "[174]\tvalidation_0-logloss:0.69895\n",
      "[176]\tvalidation_0-logloss:0.69896\n",
      "[178]\tvalidation_0-logloss:0.69901\n",
      "[180]\tvalidation_0-logloss:0.69901\n",
      "[182]\tvalidation_0-logloss:0.69902\n",
      "[184]\tvalidation_0-logloss:0.69904\n",
      "[186]\tvalidation_0-logloss:0.69925\n",
      "[188]\tvalidation_0-logloss:0.69948\n",
      "[190]\tvalidation_0-logloss:0.69936\n",
      "[192]\tvalidation_0-logloss:0.69955\n",
      "[194]\tvalidation_0-logloss:0.69953\n",
      "[196]\tvalidation_0-logloss:0.69984\n",
      "[198]\tvalidation_0-logloss:0.69996\n",
      "[200]\tvalidation_0-logloss:0.70004\n",
      "[202]\tvalidation_0-logloss:0.70011\n",
      "[204]\tvalidation_0-logloss:0.70061\n",
      "[206]\tvalidation_0-logloss:0.70067\n",
      "[208]\tvalidation_0-logloss:0.70078\n",
      "[210]\tvalidation_0-logloss:0.70083\n",
      "[212]\tvalidation_0-logloss:0.70084\n",
      "[214]\tvalidation_0-logloss:0.70094\n",
      "[216]\tvalidation_0-logloss:0.70104\n",
      "[218]\tvalidation_0-logloss:0.70109\n",
      "[220]\tvalidation_0-logloss:0.70105\n",
      "[222]\tvalidation_0-logloss:0.70148\n",
      "[224]\tvalidation_0-logloss:0.70153\n",
      "[226]\tvalidation_0-logloss:0.70195\n",
      "[228]\tvalidation_0-logloss:0.70190\n",
      "[230]\tvalidation_0-logloss:0.70194\n",
      "[232]\tvalidation_0-logloss:0.70194\n",
      "[234]\tvalidation_0-logloss:0.70192\n",
      "[236]\tvalidation_0-logloss:0.70196\n",
      "[238]\tvalidation_0-logloss:0.70218\n",
      "[240]\tvalidation_0-logloss:0.70234\n",
      "[242]\tvalidation_0-logloss:0.70243\n",
      "[244]\tvalidation_0-logloss:0.70255\n",
      "[246]\tvalidation_0-logloss:0.70268\n",
      "[248]\tvalidation_0-logloss:0.70259\n",
      "[250]\tvalidation_0-logloss:0.70257\n",
      "[252]\tvalidation_0-logloss:0.70280\n",
      "[254]\tvalidation_0-logloss:0.70287\n",
      "[256]\tvalidation_0-logloss:0.70288\n",
      "[258]\tvalidation_0-logloss:0.70308\n",
      "[260]\tvalidation_0-logloss:0.70339\n",
      "[262]\tvalidation_0-logloss:0.70344\n",
      "[264]\tvalidation_0-logloss:0.70351\n",
      "[266]\tvalidation_0-logloss:0.70342\n",
      "[268]\tvalidation_0-logloss:0.70348\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:30:21,322] Trial 36 finished with value: 0.6949877922981799 and parameters: {'eta': 0.03704341528073675, 'gamma': 0.5930055522195647, 'max_depth': 6, 'min_child_weight': 2, 'lambda': 0.4069753754869778, 'alpha': 0.24091576745778787}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:30:26] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69546\n",
      "[2]\tvalidation_0-logloss:0.69557\n",
      "[4]\tvalidation_0-logloss:0.69507\n",
      "[6]\tvalidation_0-logloss:0.69524\n",
      "[8]\tvalidation_0-logloss:0.69486\n",
      "[10]\tvalidation_0-logloss:0.69476\n",
      "[12]\tvalidation_0-logloss:0.69501\n",
      "[14]\tvalidation_0-logloss:0.69442\n",
      "[16]\tvalidation_0-logloss:0.69421\n",
      "[18]\tvalidation_0-logloss:0.69433\n",
      "[20]\tvalidation_0-logloss:0.69425\n",
      "[22]\tvalidation_0-logloss:0.69451\n",
      "[24]\tvalidation_0-logloss:0.69473\n",
      "[26]\tvalidation_0-logloss:0.69492\n",
      "[28]\tvalidation_0-logloss:0.69527\n",
      "[30]\tvalidation_0-logloss:0.69516\n",
      "[32]\tvalidation_0-logloss:0.69529\n",
      "[34]\tvalidation_0-logloss:0.69512\n",
      "[36]\tvalidation_0-logloss:0.69485\n",
      "[38]\tvalidation_0-logloss:0.69464\n",
      "[40]\tvalidation_0-logloss:0.69431\n",
      "[42]\tvalidation_0-logloss:0.69452\n",
      "[44]\tvalidation_0-logloss:0.69461\n",
      "[46]\tvalidation_0-logloss:0.69459\n",
      "[48]\tvalidation_0-logloss:0.69449\n",
      "[50]\tvalidation_0-logloss:0.69434\n",
      "[52]\tvalidation_0-logloss:0.69459\n",
      "[54]\tvalidation_0-logloss:0.69471\n",
      "[56]\tvalidation_0-logloss:0.69494\n",
      "[58]\tvalidation_0-logloss:0.69453\n",
      "[60]\tvalidation_0-logloss:0.69463\n",
      "[62]\tvalidation_0-logloss:0.69479\n",
      "[64]\tvalidation_0-logloss:0.69489\n",
      "[66]\tvalidation_0-logloss:0.69508\n",
      "[68]\tvalidation_0-logloss:0.69485\n",
      "[70]\tvalidation_0-logloss:0.69468\n",
      "[72]\tvalidation_0-logloss:0.69511\n",
      "[74]\tvalidation_0-logloss:0.69506\n",
      "[76]\tvalidation_0-logloss:0.69560\n",
      "[78]\tvalidation_0-logloss:0.69558\n",
      "[80]\tvalidation_0-logloss:0.69574\n",
      "[82]\tvalidation_0-logloss:0.69604\n",
      "[84]\tvalidation_0-logloss:0.69606\n",
      "[86]\tvalidation_0-logloss:0.69654\n",
      "[88]\tvalidation_0-logloss:0.69646\n",
      "[90]\tvalidation_0-logloss:0.69703\n",
      "[92]\tvalidation_0-logloss:0.69690\n",
      "[94]\tvalidation_0-logloss:0.69738\n",
      "[96]\tvalidation_0-logloss:0.69747\n",
      "[98]\tvalidation_0-logloss:0.69749\n",
      "[100]\tvalidation_0-logloss:0.69766\n",
      "[102]\tvalidation_0-logloss:0.69763\n",
      "[104]\tvalidation_0-logloss:0.69767\n",
      "[106]\tvalidation_0-logloss:0.69775\n",
      "[108]\tvalidation_0-logloss:0.69778\n",
      "[110]\tvalidation_0-logloss:0.69780\n",
      "[112]\tvalidation_0-logloss:0.69790\n",
      "[114]\tvalidation_0-logloss:0.69821\n",
      "[116]\tvalidation_0-logloss:0.69823\n",
      "[118]\tvalidation_0-logloss:0.69809\n",
      "[120]\tvalidation_0-logloss:0.69824\n",
      "[122]\tvalidation_0-logloss:0.69837\n",
      "[124]\tvalidation_0-logloss:0.69847\n",
      "[126]\tvalidation_0-logloss:0.69874\n",
      "[128]\tvalidation_0-logloss:0.69872\n",
      "[130]\tvalidation_0-logloss:0.69867\n",
      "[132]\tvalidation_0-logloss:0.69915\n",
      "[134]\tvalidation_0-logloss:0.69943\n",
      "[136]\tvalidation_0-logloss:0.70012\n",
      "[138]\tvalidation_0-logloss:0.70078\n",
      "[140]\tvalidation_0-logloss:0.70079\n",
      "[142]\tvalidation_0-logloss:0.70095\n",
      "[144]\tvalidation_0-logloss:0.70088\n",
      "[146]\tvalidation_0-logloss:0.70098\n",
      "[148]\tvalidation_0-logloss:0.70118\n",
      "[150]\tvalidation_0-logloss:0.70134\n",
      "[152]\tvalidation_0-logloss:0.70142\n",
      "[154]\tvalidation_0-logloss:0.70138\n",
      "[156]\tvalidation_0-logloss:0.70158\n",
      "[158]\tvalidation_0-logloss:0.70151\n",
      "[160]\tvalidation_0-logloss:0.70142\n",
      "[162]\tvalidation_0-logloss:0.70147\n",
      "[164]\tvalidation_0-logloss:0.70178\n",
      "[166]\tvalidation_0-logloss:0.70179\n",
      "[168]\tvalidation_0-logloss:0.70170\n",
      "[170]\tvalidation_0-logloss:0.70171\n",
      "[172]\tvalidation_0-logloss:0.70176\n",
      "[174]\tvalidation_0-logloss:0.70203\n",
      "[176]\tvalidation_0-logloss:0.70185\n",
      "[178]\tvalidation_0-logloss:0.70197\n",
      "[180]\tvalidation_0-logloss:0.70225\n",
      "[182]\tvalidation_0-logloss:0.70249\n",
      "[184]\tvalidation_0-logloss:0.70280\n",
      "[186]\tvalidation_0-logloss:0.70285\n",
      "[188]\tvalidation_0-logloss:0.70277\n",
      "[190]\tvalidation_0-logloss:0.70295\n",
      "[192]\tvalidation_0-logloss:0.70320\n",
      "[194]\tvalidation_0-logloss:0.70356\n",
      "[196]\tvalidation_0-logloss:0.70376\n",
      "[198]\tvalidation_0-logloss:0.70382\n",
      "[200]\tvalidation_0-logloss:0.70373\n",
      "[202]\tvalidation_0-logloss:0.70371\n",
      "[204]\tvalidation_0-logloss:0.70371\n",
      "[206]\tvalidation_0-logloss:0.70420\n",
      "[208]\tvalidation_0-logloss:0.70423\n",
      "[210]\tvalidation_0-logloss:0.70434\n",
      "[212]\tvalidation_0-logloss:0.70458\n",
      "[214]\tvalidation_0-logloss:0.70464\n",
      "[216]\tvalidation_0-logloss:0.70481\n",
      "[218]\tvalidation_0-logloss:0.70487\n",
      "[220]\tvalidation_0-logloss:0.70482\n",
      "[222]\tvalidation_0-logloss:0.70503\n",
      "[224]\tvalidation_0-logloss:0.70491\n",
      "[226]\tvalidation_0-logloss:0.70550\n",
      "[228]\tvalidation_0-logloss:0.70544\n",
      "[230]\tvalidation_0-logloss:0.70550\n",
      "[232]\tvalidation_0-logloss:0.70618\n",
      "[234]\tvalidation_0-logloss:0.70646\n",
      "[236]\tvalidation_0-logloss:0.70662\n",
      "[238]\tvalidation_0-logloss:0.70636\n",
      "[240]\tvalidation_0-logloss:0.70601\n",
      "[242]\tvalidation_0-logloss:0.70619\n",
      "[244]\tvalidation_0-logloss:0.70699\n",
      "[246]\tvalidation_0-logloss:0.70712\n",
      "[248]\tvalidation_0-logloss:0.70785\n",
      "[250]\tvalidation_0-logloss:0.70814\n",
      "[252]\tvalidation_0-logloss:0.70843\n",
      "[254]\tvalidation_0-logloss:0.70851\n",
      "[256]\tvalidation_0-logloss:0.70888\n",
      "[258]\tvalidation_0-logloss:0.70907\n",
      "[260]\tvalidation_0-logloss:0.70936\n",
      "[262]\tvalidation_0-logloss:0.70967\n",
      "[264]\tvalidation_0-logloss:0.70980\n",
      "[266]\tvalidation_0-logloss:0.70991\n",
      "[267]\tvalidation_0-logloss:0.70976\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:31:43,386] Trial 37 finished with value: 0.6941211765477538 and parameters: {'eta': 0.08440159752358672, 'gamma': 0.769404176614004, 'max_depth': 5, 'min_child_weight': 7, 'lambda': 0.5393928170063457, 'alpha': 0.30387100759212043}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:31:48] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69531\n",
      "[2]\tvalidation_0-logloss:0.69545\n",
      "[4]\tvalidation_0-logloss:0.69552\n",
      "[6]\tvalidation_0-logloss:0.69525\n",
      "[8]\tvalidation_0-logloss:0.69512\n",
      "[10]\tvalidation_0-logloss:0.69502\n",
      "[12]\tvalidation_0-logloss:0.69509\n",
      "[14]\tvalidation_0-logloss:0.69511\n",
      "[16]\tvalidation_0-logloss:0.69474\n",
      "[18]\tvalidation_0-logloss:0.69496\n",
      "[20]\tvalidation_0-logloss:0.69540\n",
      "[22]\tvalidation_0-logloss:0.69550\n",
      "[24]\tvalidation_0-logloss:0.69564\n",
      "[26]\tvalidation_0-logloss:0.69559\n",
      "[28]\tvalidation_0-logloss:0.69586\n",
      "[30]\tvalidation_0-logloss:0.69583\n",
      "[32]\tvalidation_0-logloss:0.69597\n",
      "[34]\tvalidation_0-logloss:0.69576\n",
      "[36]\tvalidation_0-logloss:0.69580\n",
      "[38]\tvalidation_0-logloss:0.69587\n",
      "[40]\tvalidation_0-logloss:0.69595\n",
      "[42]\tvalidation_0-logloss:0.69625\n",
      "[44]\tvalidation_0-logloss:0.69625\n",
      "[46]\tvalidation_0-logloss:0.69626\n",
      "[48]\tvalidation_0-logloss:0.69620\n",
      "[50]\tvalidation_0-logloss:0.69628\n",
      "[52]\tvalidation_0-logloss:0.69616\n",
      "[54]\tvalidation_0-logloss:0.69600\n",
      "[56]\tvalidation_0-logloss:0.69614\n",
      "[58]\tvalidation_0-logloss:0.69622\n",
      "[60]\tvalidation_0-logloss:0.69663\n",
      "[62]\tvalidation_0-logloss:0.69637\n",
      "[64]\tvalidation_0-logloss:0.69644\n",
      "[66]\tvalidation_0-logloss:0.69634\n",
      "[68]\tvalidation_0-logloss:0.69593\n",
      "[70]\tvalidation_0-logloss:0.69581\n",
      "[72]\tvalidation_0-logloss:0.69573\n",
      "[74]\tvalidation_0-logloss:0.69603\n",
      "[76]\tvalidation_0-logloss:0.69588\n",
      "[78]\tvalidation_0-logloss:0.69542\n",
      "[80]\tvalidation_0-logloss:0.69536\n",
      "[82]\tvalidation_0-logloss:0.69553\n",
      "[84]\tvalidation_0-logloss:0.69561\n",
      "[86]\tvalidation_0-logloss:0.69557\n",
      "[88]\tvalidation_0-logloss:0.69556\n",
      "[90]\tvalidation_0-logloss:0.69569\n",
      "[92]\tvalidation_0-logloss:0.69586\n",
      "[94]\tvalidation_0-logloss:0.69592\n",
      "[96]\tvalidation_0-logloss:0.69618\n",
      "[98]\tvalidation_0-logloss:0.69623\n",
      "[100]\tvalidation_0-logloss:0.69629\n",
      "[102]\tvalidation_0-logloss:0.69622\n",
      "[104]\tvalidation_0-logloss:0.69628\n",
      "[106]\tvalidation_0-logloss:0.69621\n",
      "[108]\tvalidation_0-logloss:0.69620\n",
      "[110]\tvalidation_0-logloss:0.69623\n",
      "[112]\tvalidation_0-logloss:0.69620\n",
      "[114]\tvalidation_0-logloss:0.69632\n",
      "[116]\tvalidation_0-logloss:0.69626\n",
      "[118]\tvalidation_0-logloss:0.69704\n",
      "[120]\tvalidation_0-logloss:0.69710\n",
      "[122]\tvalidation_0-logloss:0.69712\n",
      "[124]\tvalidation_0-logloss:0.69699\n",
      "[126]\tvalidation_0-logloss:0.69688\n",
      "[128]\tvalidation_0-logloss:0.69690\n",
      "[130]\tvalidation_0-logloss:0.69697\n",
      "[132]\tvalidation_0-logloss:0.69688\n",
      "[134]\tvalidation_0-logloss:0.69702\n",
      "[136]\tvalidation_0-logloss:0.69700\n",
      "[138]\tvalidation_0-logloss:0.69704\n",
      "[140]\tvalidation_0-logloss:0.69721\n",
      "[142]\tvalidation_0-logloss:0.69713\n",
      "[144]\tvalidation_0-logloss:0.69758\n",
      "[146]\tvalidation_0-logloss:0.69755\n",
      "[148]\tvalidation_0-logloss:0.69748\n",
      "[150]\tvalidation_0-logloss:0.69754\n",
      "[152]\tvalidation_0-logloss:0.69751\n",
      "[154]\tvalidation_0-logloss:0.69756\n",
      "[156]\tvalidation_0-logloss:0.69762\n",
      "[158]\tvalidation_0-logloss:0.69773\n",
      "[160]\tvalidation_0-logloss:0.69795\n",
      "[162]\tvalidation_0-logloss:0.69790\n",
      "[164]\tvalidation_0-logloss:0.69818\n",
      "[166]\tvalidation_0-logloss:0.69822\n",
      "[168]\tvalidation_0-logloss:0.69820\n",
      "[170]\tvalidation_0-logloss:0.69831\n",
      "[172]\tvalidation_0-logloss:0.69832\n",
      "[174]\tvalidation_0-logloss:0.69844\n",
      "[176]\tvalidation_0-logloss:0.69842\n",
      "[178]\tvalidation_0-logloss:0.69851\n",
      "[180]\tvalidation_0-logloss:0.69879\n",
      "[182]\tvalidation_0-logloss:0.69878\n",
      "[184]\tvalidation_0-logloss:0.69879\n",
      "[186]\tvalidation_0-logloss:0.69890\n",
      "[188]\tvalidation_0-logloss:0.69916\n",
      "[190]\tvalidation_0-logloss:0.69923\n",
      "[192]\tvalidation_0-logloss:0.69920\n",
      "[194]\tvalidation_0-logloss:0.69924\n",
      "[196]\tvalidation_0-logloss:0.69923\n",
      "[198]\tvalidation_0-logloss:0.69926\n",
      "[200]\tvalidation_0-logloss:0.69921\n",
      "[202]\tvalidation_0-logloss:0.69932\n",
      "[204]\tvalidation_0-logloss:0.69925\n",
      "[206]\tvalidation_0-logloss:0.69938\n",
      "[208]\tvalidation_0-logloss:0.69953\n",
      "[210]\tvalidation_0-logloss:0.69953\n",
      "[212]\tvalidation_0-logloss:0.69960\n",
      "[214]\tvalidation_0-logloss:0.69954\n",
      "[216]\tvalidation_0-logloss:0.69955\n",
      "[218]\tvalidation_0-logloss:0.69962\n",
      "[220]\tvalidation_0-logloss:0.69965\n",
      "[222]\tvalidation_0-logloss:0.69986\n",
      "[224]\tvalidation_0-logloss:0.69979\n",
      "[226]\tvalidation_0-logloss:0.69994\n",
      "[228]\tvalidation_0-logloss:0.70004\n",
      "[230]\tvalidation_0-logloss:0.70010\n",
      "[232]\tvalidation_0-logloss:0.70006\n",
      "[234]\tvalidation_0-logloss:0.69998\n",
      "[236]\tvalidation_0-logloss:0.69986\n",
      "[238]\tvalidation_0-logloss:0.69985\n",
      "[240]\tvalidation_0-logloss:0.70008\n",
      "[242]\tvalidation_0-logloss:0.70027\n",
      "[244]\tvalidation_0-logloss:0.70018\n",
      "[246]\tvalidation_0-logloss:0.70028\n",
      "[248]\tvalidation_0-logloss:0.70029\n",
      "[250]\tvalidation_0-logloss:0.70010\n",
      "[252]\tvalidation_0-logloss:0.70020\n",
      "[254]\tvalidation_0-logloss:0.70014\n",
      "[256]\tvalidation_0-logloss:0.70034\n",
      "[258]\tvalidation_0-logloss:0.70038\n",
      "[260]\tvalidation_0-logloss:0.70053\n",
      "[262]\tvalidation_0-logloss:0.70041\n",
      "[264]\tvalidation_0-logloss:0.70038\n",
      "[265]\tvalidation_0-logloss:0.70042\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:32:55,577] Trial 38 finished with value: 0.6947424975868393 and parameters: {'eta': 0.07051564352651195, 'gamma': 0.8662932272376491, 'max_depth': 3, 'min_child_weight': 3, 'lambda': 0.28436012333080946, 'alpha': 0.057649171419971224}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:33:00] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69565\n",
      "[2]\tvalidation_0-logloss:0.69602\n",
      "[4]\tvalidation_0-logloss:0.69530\n",
      "[6]\tvalidation_0-logloss:0.69564\n",
      "[8]\tvalidation_0-logloss:0.69579\n",
      "[10]\tvalidation_0-logloss:0.69530\n",
      "[12]\tvalidation_0-logloss:0.69497\n",
      "[14]\tvalidation_0-logloss:0.69514\n",
      "[16]\tvalidation_0-logloss:0.69509\n",
      "[18]\tvalidation_0-logloss:0.69547\n",
      "[20]\tvalidation_0-logloss:0.69534\n",
      "[22]\tvalidation_0-logloss:0.69535\n",
      "[24]\tvalidation_0-logloss:0.69549\n",
      "[26]\tvalidation_0-logloss:0.69576\n",
      "[28]\tvalidation_0-logloss:0.69586\n",
      "[30]\tvalidation_0-logloss:0.69578\n",
      "[32]\tvalidation_0-logloss:0.69571\n",
      "[34]\tvalidation_0-logloss:0.69567\n",
      "[36]\tvalidation_0-logloss:0.69569\n",
      "[38]\tvalidation_0-logloss:0.69605\n",
      "[40]\tvalidation_0-logloss:0.69633\n",
      "[42]\tvalidation_0-logloss:0.69642\n",
      "[44]\tvalidation_0-logloss:0.69623\n",
      "[46]\tvalidation_0-logloss:0.69628\n",
      "[48]\tvalidation_0-logloss:0.69687\n",
      "[50]\tvalidation_0-logloss:0.69691\n",
      "[52]\tvalidation_0-logloss:0.69735\n",
      "[54]\tvalidation_0-logloss:0.69758\n",
      "[56]\tvalidation_0-logloss:0.69724\n",
      "[58]\tvalidation_0-logloss:0.69764\n",
      "[60]\tvalidation_0-logloss:0.69768\n",
      "[62]\tvalidation_0-logloss:0.69797\n",
      "[64]\tvalidation_0-logloss:0.69795\n",
      "[66]\tvalidation_0-logloss:0.69831\n",
      "[68]\tvalidation_0-logloss:0.69842\n",
      "[70]\tvalidation_0-logloss:0.69904\n",
      "[72]\tvalidation_0-logloss:0.69885\n",
      "[74]\tvalidation_0-logloss:0.69944\n",
      "[76]\tvalidation_0-logloss:0.69963\n",
      "[78]\tvalidation_0-logloss:0.70000\n",
      "[80]\tvalidation_0-logloss:0.70079\n",
      "[82]\tvalidation_0-logloss:0.70152\n",
      "[84]\tvalidation_0-logloss:0.70146\n",
      "[86]\tvalidation_0-logloss:0.70174\n",
      "[88]\tvalidation_0-logloss:0.70223\n",
      "[90]\tvalidation_0-logloss:0.70251\n",
      "[92]\tvalidation_0-logloss:0.70253\n",
      "[94]\tvalidation_0-logloss:0.70272\n",
      "[96]\tvalidation_0-logloss:0.70254\n",
      "[98]\tvalidation_0-logloss:0.70263\n",
      "[100]\tvalidation_0-logloss:0.70286\n",
      "[102]\tvalidation_0-logloss:0.70314\n",
      "[104]\tvalidation_0-logloss:0.70292\n",
      "[106]\tvalidation_0-logloss:0.70300\n",
      "[108]\tvalidation_0-logloss:0.70317\n",
      "[110]\tvalidation_0-logloss:0.70332\n",
      "[112]\tvalidation_0-logloss:0.70343\n",
      "[114]\tvalidation_0-logloss:0.70341\n",
      "[116]\tvalidation_0-logloss:0.70509\n",
      "[118]\tvalidation_0-logloss:0.70523\n",
      "[120]\tvalidation_0-logloss:0.70535\n",
      "[122]\tvalidation_0-logloss:0.70651\n",
      "[124]\tvalidation_0-logloss:0.70672\n",
      "[126]\tvalidation_0-logloss:0.70702\n",
      "[128]\tvalidation_0-logloss:0.70721\n",
      "[130]\tvalidation_0-logloss:0.70741\n",
      "[132]\tvalidation_0-logloss:0.70723\n",
      "[134]\tvalidation_0-logloss:0.70720\n",
      "[136]\tvalidation_0-logloss:0.70763\n",
      "[138]\tvalidation_0-logloss:0.70781\n",
      "[140]\tvalidation_0-logloss:0.70797\n",
      "[142]\tvalidation_0-logloss:0.70832\n",
      "[144]\tvalidation_0-logloss:0.70852\n",
      "[146]\tvalidation_0-logloss:0.70877\n",
      "[148]\tvalidation_0-logloss:0.70885\n",
      "[150]\tvalidation_0-logloss:0.70896\n",
      "[152]\tvalidation_0-logloss:0.70917\n",
      "[154]\tvalidation_0-logloss:0.70976\n",
      "[156]\tvalidation_0-logloss:0.71044\n",
      "[158]\tvalidation_0-logloss:0.71066\n",
      "[160]\tvalidation_0-logloss:0.71126\n",
      "[162]\tvalidation_0-logloss:0.71116\n",
      "[164]\tvalidation_0-logloss:0.71122\n",
      "[166]\tvalidation_0-logloss:0.71129\n",
      "[168]\tvalidation_0-logloss:0.71169\n",
      "[170]\tvalidation_0-logloss:0.71259\n",
      "[172]\tvalidation_0-logloss:0.71264\n",
      "[174]\tvalidation_0-logloss:0.71265\n",
      "[176]\tvalidation_0-logloss:0.71266\n",
      "[178]\tvalidation_0-logloss:0.71313\n",
      "[180]\tvalidation_0-logloss:0.71317\n",
      "[182]\tvalidation_0-logloss:0.71355\n",
      "[184]\tvalidation_0-logloss:0.71397\n",
      "[186]\tvalidation_0-logloss:0.71444\n",
      "[188]\tvalidation_0-logloss:0.71482\n",
      "[190]\tvalidation_0-logloss:0.71458\n",
      "[192]\tvalidation_0-logloss:0.71441\n",
      "[194]\tvalidation_0-logloss:0.71430\n",
      "[196]\tvalidation_0-logloss:0.71434\n",
      "[198]\tvalidation_0-logloss:0.71425\n",
      "[200]\tvalidation_0-logloss:0.71466\n",
      "[202]\tvalidation_0-logloss:0.71459\n",
      "[204]\tvalidation_0-logloss:0.71497\n",
      "[206]\tvalidation_0-logloss:0.71675\n",
      "[208]\tvalidation_0-logloss:0.71692\n",
      "[210]\tvalidation_0-logloss:0.71711\n",
      "[212]\tvalidation_0-logloss:0.71707\n",
      "[214]\tvalidation_0-logloss:0.71723\n",
      "[216]\tvalidation_0-logloss:0.71785\n",
      "[218]\tvalidation_0-logloss:0.71777\n",
      "[220]\tvalidation_0-logloss:0.71760\n",
      "[222]\tvalidation_0-logloss:0.71778\n",
      "[224]\tvalidation_0-logloss:0.71768\n",
      "[226]\tvalidation_0-logloss:0.71780\n",
      "[228]\tvalidation_0-logloss:0.71790\n",
      "[230]\tvalidation_0-logloss:0.71800\n",
      "[232]\tvalidation_0-logloss:0.71799\n",
      "[234]\tvalidation_0-logloss:0.71851\n",
      "[236]\tvalidation_0-logloss:0.71896\n",
      "[238]\tvalidation_0-logloss:0.71900\n",
      "[240]\tvalidation_0-logloss:0.71972\n",
      "[242]\tvalidation_0-logloss:0.71973\n",
      "[244]\tvalidation_0-logloss:0.72019\n",
      "[246]\tvalidation_0-logloss:0.72039\n",
      "[248]\tvalidation_0-logloss:0.72084\n",
      "[250]\tvalidation_0-logloss:0.72086\n",
      "[252]\tvalidation_0-logloss:0.72119\n",
      "[254]\tvalidation_0-logloss:0.72203\n",
      "[256]\tvalidation_0-logloss:0.72193\n",
      "[258]\tvalidation_0-logloss:0.72200\n",
      "[260]\tvalidation_0-logloss:0.72217\n",
      "[262]\tvalidation_0-logloss:0.72187\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:34:17,648] Trial 39 finished with value: 0.6949723544968102 and parameters: {'eta': 0.12226405491145842, 'gamma': 0.3598829915524428, 'max_depth': 5, 'min_child_weight': 5, 'lambda': 0.21504941919036208, 'alpha': 0.2109045952248797}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:34:22] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69534\n",
      "[2]\tvalidation_0-logloss:0.69588\n",
      "[4]\tvalidation_0-logloss:0.69578\n",
      "[6]\tvalidation_0-logloss:0.69563\n",
      "[8]\tvalidation_0-logloss:0.69548\n",
      "[10]\tvalidation_0-logloss:0.69541\n",
      "[12]\tvalidation_0-logloss:0.69499\n",
      "[14]\tvalidation_0-logloss:0.69485\n",
      "[16]\tvalidation_0-logloss:0.69487\n",
      "[18]\tvalidation_0-logloss:0.69512\n",
      "[20]\tvalidation_0-logloss:0.69501\n",
      "[22]\tvalidation_0-logloss:0.69468\n",
      "[24]\tvalidation_0-logloss:0.69450\n",
      "[26]\tvalidation_0-logloss:0.69475\n",
      "[28]\tvalidation_0-logloss:0.69496\n",
      "[30]\tvalidation_0-logloss:0.69499\n",
      "[32]\tvalidation_0-logloss:0.69532\n",
      "[34]\tvalidation_0-logloss:0.69543\n",
      "[36]\tvalidation_0-logloss:0.69546\n",
      "[38]\tvalidation_0-logloss:0.69558\n",
      "[40]\tvalidation_0-logloss:0.69555\n",
      "[42]\tvalidation_0-logloss:0.69537\n",
      "[44]\tvalidation_0-logloss:0.69533\n",
      "[46]\tvalidation_0-logloss:0.69509\n",
      "[48]\tvalidation_0-logloss:0.69503\n",
      "[50]\tvalidation_0-logloss:0.69499\n",
      "[52]\tvalidation_0-logloss:0.69517\n",
      "[54]\tvalidation_0-logloss:0.69516\n",
      "[56]\tvalidation_0-logloss:0.69517\n",
      "[58]\tvalidation_0-logloss:0.69523\n",
      "[60]\tvalidation_0-logloss:0.69527\n",
      "[62]\tvalidation_0-logloss:0.69528\n",
      "[64]\tvalidation_0-logloss:0.69528\n",
      "[66]\tvalidation_0-logloss:0.69558\n",
      "[68]\tvalidation_0-logloss:0.69550\n",
      "[70]\tvalidation_0-logloss:0.69541\n",
      "[72]\tvalidation_0-logloss:0.69544\n",
      "[74]\tvalidation_0-logloss:0.69539\n",
      "[76]\tvalidation_0-logloss:0.69539\n",
      "[78]\tvalidation_0-logloss:0.69542\n",
      "[80]\tvalidation_0-logloss:0.69536\n",
      "[82]\tvalidation_0-logloss:0.69545\n",
      "[84]\tvalidation_0-logloss:0.69570\n",
      "[86]\tvalidation_0-logloss:0.69580\n",
      "[88]\tvalidation_0-logloss:0.69573\n",
      "[90]\tvalidation_0-logloss:0.69580\n",
      "[92]\tvalidation_0-logloss:0.69634\n",
      "[94]\tvalidation_0-logloss:0.69645\n",
      "[96]\tvalidation_0-logloss:0.69619\n",
      "[98]\tvalidation_0-logloss:0.69621\n",
      "[100]\tvalidation_0-logloss:0.69647\n",
      "[102]\tvalidation_0-logloss:0.69650\n",
      "[104]\tvalidation_0-logloss:0.69697\n",
      "[106]\tvalidation_0-logloss:0.69704\n",
      "[108]\tvalidation_0-logloss:0.69695\n",
      "[110]\tvalidation_0-logloss:0.69717\n",
      "[112]\tvalidation_0-logloss:0.69713\n",
      "[114]\tvalidation_0-logloss:0.69708\n",
      "[116]\tvalidation_0-logloss:0.69703\n",
      "[118]\tvalidation_0-logloss:0.69692\n",
      "[120]\tvalidation_0-logloss:0.69717\n",
      "[122]\tvalidation_0-logloss:0.69721\n",
      "[124]\tvalidation_0-logloss:0.69728\n",
      "[126]\tvalidation_0-logloss:0.69735\n",
      "[128]\tvalidation_0-logloss:0.69737\n",
      "[130]\tvalidation_0-logloss:0.69779\n",
      "[132]\tvalidation_0-logloss:0.69779\n",
      "[134]\tvalidation_0-logloss:0.69797\n",
      "[136]\tvalidation_0-logloss:0.69802\n",
      "[138]\tvalidation_0-logloss:0.69810\n",
      "[140]\tvalidation_0-logloss:0.69824\n",
      "[142]\tvalidation_0-logloss:0.69841\n",
      "[144]\tvalidation_0-logloss:0.69838\n",
      "[146]\tvalidation_0-logloss:0.69846\n",
      "[148]\tvalidation_0-logloss:0.69862\n",
      "[150]\tvalidation_0-logloss:0.69888\n",
      "[152]\tvalidation_0-logloss:0.69893\n",
      "[154]\tvalidation_0-logloss:0.69897\n",
      "[156]\tvalidation_0-logloss:0.69905\n",
      "[158]\tvalidation_0-logloss:0.69919\n",
      "[160]\tvalidation_0-logloss:0.69916\n",
      "[162]\tvalidation_0-logloss:0.69912\n",
      "[164]\tvalidation_0-logloss:0.69922\n",
      "[166]\tvalidation_0-logloss:0.69926\n",
      "[168]\tvalidation_0-logloss:0.69941\n",
      "[170]\tvalidation_0-logloss:0.69944\n",
      "[172]\tvalidation_0-logloss:0.69957\n",
      "[174]\tvalidation_0-logloss:0.69962\n",
      "[176]\tvalidation_0-logloss:0.69975\n",
      "[178]\tvalidation_0-logloss:0.69986\n",
      "[180]\tvalidation_0-logloss:0.70061\n",
      "[182]\tvalidation_0-logloss:0.70140\n",
      "[184]\tvalidation_0-logloss:0.70150\n",
      "[186]\tvalidation_0-logloss:0.70203\n",
      "[188]\tvalidation_0-logloss:0.70200\n",
      "[190]\tvalidation_0-logloss:0.70221\n",
      "[192]\tvalidation_0-logloss:0.70223\n",
      "[194]\tvalidation_0-logloss:0.70224\n",
      "[196]\tvalidation_0-logloss:0.70231\n",
      "[198]\tvalidation_0-logloss:0.70234\n",
      "[200]\tvalidation_0-logloss:0.70259\n",
      "[202]\tvalidation_0-logloss:0.70264\n",
      "[204]\tvalidation_0-logloss:0.70251\n",
      "[206]\tvalidation_0-logloss:0.70238\n",
      "[208]\tvalidation_0-logloss:0.70259\n",
      "[210]\tvalidation_0-logloss:0.70256\n",
      "[212]\tvalidation_0-logloss:0.70253\n",
      "[214]\tvalidation_0-logloss:0.70266\n",
      "[216]\tvalidation_0-logloss:0.70294\n",
      "[218]\tvalidation_0-logloss:0.70314\n",
      "[220]\tvalidation_0-logloss:0.70332\n",
      "[222]\tvalidation_0-logloss:0.70346\n",
      "[224]\tvalidation_0-logloss:0.70405\n",
      "[226]\tvalidation_0-logloss:0.70399\n",
      "[228]\tvalidation_0-logloss:0.70416\n",
      "[230]\tvalidation_0-logloss:0.70428\n",
      "[232]\tvalidation_0-logloss:0.70434\n",
      "[234]\tvalidation_0-logloss:0.70430\n",
      "[236]\tvalidation_0-logloss:0.70439\n",
      "[238]\tvalidation_0-logloss:0.70478\n",
      "[240]\tvalidation_0-logloss:0.70466\n",
      "[242]\tvalidation_0-logloss:0.70461\n",
      "[244]\tvalidation_0-logloss:0.70467\n",
      "[246]\tvalidation_0-logloss:0.70479\n",
      "[248]\tvalidation_0-logloss:0.70488\n",
      "[250]\tvalidation_0-logloss:0.70492\n",
      "[252]\tvalidation_0-logloss:0.70493\n",
      "[254]\tvalidation_0-logloss:0.70545\n",
      "[256]\tvalidation_0-logloss:0.70548\n",
      "[258]\tvalidation_0-logloss:0.70539\n",
      "[260]\tvalidation_0-logloss:0.70568\n",
      "[262]\tvalidation_0-logloss:0.70608\n",
      "[264]\tvalidation_0-logloss:0.70629\n",
      "[266]\tvalidation_0-logloss:0.70636\n",
      "[268]\tvalidation_0-logloss:0.70638\n",
      "[270]\tvalidation_0-logloss:0.70640\n",
      "[272]\tvalidation_0-logloss:0.70637\n",
      "[274]\tvalidation_0-logloss:0.70653\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:35:47,637] Trial 40 finished with value: 0.6945039717625141 and parameters: {'eta': 0.056155432868601585, 'gamma': 0.510505107199364, 'max_depth': 6, 'min_child_weight': 1, 'lambda': 0.05588528949813765, 'alpha': 0.35664242984617206}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:35:52] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69548\n",
      "[2]\tvalidation_0-logloss:0.69561\n",
      "[4]\tvalidation_0-logloss:0.69527\n",
      "[6]\tvalidation_0-logloss:0.69478\n",
      "[8]\tvalidation_0-logloss:0.69486\n",
      "[10]\tvalidation_0-logloss:0.69509\n",
      "[12]\tvalidation_0-logloss:0.69511\n",
      "[14]\tvalidation_0-logloss:0.69527\n",
      "[16]\tvalidation_0-logloss:0.69559\n",
      "[18]\tvalidation_0-logloss:0.69569\n",
      "[20]\tvalidation_0-logloss:0.69566\n",
      "[22]\tvalidation_0-logloss:0.69581\n",
      "[24]\tvalidation_0-logloss:0.69591\n",
      "[26]\tvalidation_0-logloss:0.69604\n",
      "[28]\tvalidation_0-logloss:0.69611\n",
      "[30]\tvalidation_0-logloss:0.69616\n",
      "[32]\tvalidation_0-logloss:0.69578\n",
      "[34]\tvalidation_0-logloss:0.69598\n",
      "[36]\tvalidation_0-logloss:0.69597\n",
      "[38]\tvalidation_0-logloss:0.69562\n",
      "[40]\tvalidation_0-logloss:0.69566\n",
      "[42]\tvalidation_0-logloss:0.69617\n",
      "[44]\tvalidation_0-logloss:0.69633\n",
      "[46]\tvalidation_0-logloss:0.69626\n",
      "[48]\tvalidation_0-logloss:0.69619\n",
      "[50]\tvalidation_0-logloss:0.69617\n",
      "[52]\tvalidation_0-logloss:0.69693\n",
      "[54]\tvalidation_0-logloss:0.69692\n",
      "[56]\tvalidation_0-logloss:0.69723\n",
      "[58]\tvalidation_0-logloss:0.69734\n",
      "[60]\tvalidation_0-logloss:0.69718\n",
      "[62]\tvalidation_0-logloss:0.69725\n",
      "[64]\tvalidation_0-logloss:0.69724\n",
      "[66]\tvalidation_0-logloss:0.69762\n",
      "[68]\tvalidation_0-logloss:0.69754\n",
      "[70]\tvalidation_0-logloss:0.69775\n",
      "[72]\tvalidation_0-logloss:0.69810\n",
      "[74]\tvalidation_0-logloss:0.69789\n",
      "[76]\tvalidation_0-logloss:0.69779\n",
      "[78]\tvalidation_0-logloss:0.69796\n",
      "[80]\tvalidation_0-logloss:0.69791\n",
      "[82]\tvalidation_0-logloss:0.69801\n",
      "[84]\tvalidation_0-logloss:0.69816\n",
      "[86]\tvalidation_0-logloss:0.69845\n",
      "[88]\tvalidation_0-logloss:0.69861\n",
      "[90]\tvalidation_0-logloss:0.69871\n",
      "[92]\tvalidation_0-logloss:0.69887\n",
      "[94]\tvalidation_0-logloss:0.69903\n",
      "[96]\tvalidation_0-logloss:0.69938\n",
      "[98]\tvalidation_0-logloss:0.69980\n",
      "[100]\tvalidation_0-logloss:0.69989\n",
      "[102]\tvalidation_0-logloss:0.70037\n",
      "[104]\tvalidation_0-logloss:0.70046\n",
      "[106]\tvalidation_0-logloss:0.70063\n",
      "[108]\tvalidation_0-logloss:0.70053\n",
      "[110]\tvalidation_0-logloss:0.70066\n",
      "[112]\tvalidation_0-logloss:0.70103\n",
      "[114]\tvalidation_0-logloss:0.70161\n",
      "[116]\tvalidation_0-logloss:0.70160\n",
      "[118]\tvalidation_0-logloss:0.70197\n",
      "[120]\tvalidation_0-logloss:0.70181\n",
      "[122]\tvalidation_0-logloss:0.70236\n",
      "[124]\tvalidation_0-logloss:0.70247\n",
      "[126]\tvalidation_0-logloss:0.70335\n",
      "[128]\tvalidation_0-logloss:0.70373\n",
      "[130]\tvalidation_0-logloss:0.70358\n",
      "[132]\tvalidation_0-logloss:0.70353\n",
      "[134]\tvalidation_0-logloss:0.70342\n",
      "[136]\tvalidation_0-logloss:0.70348\n",
      "[138]\tvalidation_0-logloss:0.70376\n",
      "[140]\tvalidation_0-logloss:0.70412\n",
      "[142]\tvalidation_0-logloss:0.70435\n",
      "[144]\tvalidation_0-logloss:0.70430\n",
      "[146]\tvalidation_0-logloss:0.70467\n",
      "[148]\tvalidation_0-logloss:0.70498\n",
      "[150]\tvalidation_0-logloss:0.70521\n",
      "[152]\tvalidation_0-logloss:0.70538\n",
      "[154]\tvalidation_0-logloss:0.70540\n",
      "[156]\tvalidation_0-logloss:0.70559\n",
      "[158]\tvalidation_0-logloss:0.70563\n",
      "[160]\tvalidation_0-logloss:0.70570\n",
      "[162]\tvalidation_0-logloss:0.70592\n",
      "[164]\tvalidation_0-logloss:0.70607\n",
      "[166]\tvalidation_0-logloss:0.70625\n",
      "[168]\tvalidation_0-logloss:0.70670\n",
      "[170]\tvalidation_0-logloss:0.70689\n",
      "[172]\tvalidation_0-logloss:0.70724\n",
      "[174]\tvalidation_0-logloss:0.70723\n",
      "[176]\tvalidation_0-logloss:0.70729\n",
      "[178]\tvalidation_0-logloss:0.70705\n",
      "[180]\tvalidation_0-logloss:0.70695\n",
      "[182]\tvalidation_0-logloss:0.70714\n",
      "[184]\tvalidation_0-logloss:0.70747\n",
      "[186]\tvalidation_0-logloss:0.70793\n",
      "[188]\tvalidation_0-logloss:0.70779\n",
      "[190]\tvalidation_0-logloss:0.70770\n",
      "[192]\tvalidation_0-logloss:0.70839\n",
      "[194]\tvalidation_0-logloss:0.70790\n",
      "[196]\tvalidation_0-logloss:0.70785\n",
      "[198]\tvalidation_0-logloss:0.70763\n",
      "[200]\tvalidation_0-logloss:0.70770\n",
      "[202]\tvalidation_0-logloss:0.70805\n",
      "[204]\tvalidation_0-logloss:0.70811\n",
      "[206]\tvalidation_0-logloss:0.70812\n",
      "[208]\tvalidation_0-logloss:0.70867\n",
      "[210]\tvalidation_0-logloss:0.70889\n",
      "[212]\tvalidation_0-logloss:0.70880\n",
      "[214]\tvalidation_0-logloss:0.70884\n",
      "[216]\tvalidation_0-logloss:0.70873\n",
      "[218]\tvalidation_0-logloss:0.70910\n",
      "[220]\tvalidation_0-logloss:0.70926\n",
      "[222]\tvalidation_0-logloss:0.70916\n",
      "[224]\tvalidation_0-logloss:0.70922\n",
      "[226]\tvalidation_0-logloss:0.70923\n",
      "[228]\tvalidation_0-logloss:0.70918\n",
      "[230]\tvalidation_0-logloss:0.70916\n",
      "[232]\tvalidation_0-logloss:0.70969\n",
      "[234]\tvalidation_0-logloss:0.70975\n",
      "[236]\tvalidation_0-logloss:0.70990\n",
      "[238]\tvalidation_0-logloss:0.71000\n",
      "[240]\tvalidation_0-logloss:0.71001\n",
      "[242]\tvalidation_0-logloss:0.71000\n",
      "[244]\tvalidation_0-logloss:0.71011\n",
      "[246]\tvalidation_0-logloss:0.71031\n",
      "[248]\tvalidation_0-logloss:0.71022\n",
      "[250]\tvalidation_0-logloss:0.71028\n",
      "[252]\tvalidation_0-logloss:0.71067\n",
      "[254]\tvalidation_0-logloss:0.71058\n",
      "[256]\tvalidation_0-logloss:0.71043\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:37:07,130] Trial 41 finished with value: 0.694749762604215 and parameters: {'eta': 0.08639329687212041, 'gamma': 0.5682944679106042, 'max_depth': 5, 'min_child_weight': 2, 'lambda': 0.06365381326787109, 'alpha': 0.11094544121074909}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:37:11] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69554\n",
      "[2]\tvalidation_0-logloss:0.69576\n",
      "[4]\tvalidation_0-logloss:0.69553\n",
      "[6]\tvalidation_0-logloss:0.69556\n",
      "[8]\tvalidation_0-logloss:0.69566\n",
      "[10]\tvalidation_0-logloss:0.69539\n",
      "[12]\tvalidation_0-logloss:0.69576\n",
      "[14]\tvalidation_0-logloss:0.69595\n",
      "[16]\tvalidation_0-logloss:0.69530\n",
      "[18]\tvalidation_0-logloss:0.69517\n",
      "[20]\tvalidation_0-logloss:0.69502\n",
      "[22]\tvalidation_0-logloss:0.69524\n",
      "[24]\tvalidation_0-logloss:0.69558\n",
      "[26]\tvalidation_0-logloss:0.69550\n",
      "[28]\tvalidation_0-logloss:0.69569\n",
      "[30]\tvalidation_0-logloss:0.69561\n",
      "[32]\tvalidation_0-logloss:0.69587\n",
      "[34]\tvalidation_0-logloss:0.69603\n",
      "[36]\tvalidation_0-logloss:0.69597\n",
      "[38]\tvalidation_0-logloss:0.69600\n",
      "[40]\tvalidation_0-logloss:0.69636\n",
      "[42]\tvalidation_0-logloss:0.69657\n",
      "[44]\tvalidation_0-logloss:0.69654\n",
      "[46]\tvalidation_0-logloss:0.69641\n",
      "[48]\tvalidation_0-logloss:0.69652\n",
      "[50]\tvalidation_0-logloss:0.69658\n",
      "[52]\tvalidation_0-logloss:0.69678\n",
      "[54]\tvalidation_0-logloss:0.69657\n",
      "[56]\tvalidation_0-logloss:0.69652\n",
      "[58]\tvalidation_0-logloss:0.69651\n",
      "[60]\tvalidation_0-logloss:0.69662\n",
      "[62]\tvalidation_0-logloss:0.69663\n",
      "[64]\tvalidation_0-logloss:0.69681\n",
      "[66]\tvalidation_0-logloss:0.69664\n",
      "[68]\tvalidation_0-logloss:0.69684\n",
      "[70]\tvalidation_0-logloss:0.69664\n",
      "[72]\tvalidation_0-logloss:0.69709\n",
      "[74]\tvalidation_0-logloss:0.69736\n",
      "[76]\tvalidation_0-logloss:0.69782\n",
      "[78]\tvalidation_0-logloss:0.69801\n",
      "[80]\tvalidation_0-logloss:0.69832\n",
      "[82]\tvalidation_0-logloss:0.69831\n",
      "[84]\tvalidation_0-logloss:0.69832\n",
      "[86]\tvalidation_0-logloss:0.69833\n",
      "[88]\tvalidation_0-logloss:0.69826\n",
      "[90]\tvalidation_0-logloss:0.69836\n",
      "[92]\tvalidation_0-logloss:0.69882\n",
      "[94]\tvalidation_0-logloss:0.69911\n",
      "[96]\tvalidation_0-logloss:0.69929\n",
      "[98]\tvalidation_0-logloss:0.69992\n",
      "[100]\tvalidation_0-logloss:0.70016\n",
      "[102]\tvalidation_0-logloss:0.70019\n",
      "[104]\tvalidation_0-logloss:0.70068\n",
      "[106]\tvalidation_0-logloss:0.70083\n",
      "[108]\tvalidation_0-logloss:0.70105\n",
      "[110]\tvalidation_0-logloss:0.70093\n",
      "[112]\tvalidation_0-logloss:0.70131\n",
      "[114]\tvalidation_0-logloss:0.70139\n",
      "[116]\tvalidation_0-logloss:0.70158\n",
      "[118]\tvalidation_0-logloss:0.70164\n",
      "[120]\tvalidation_0-logloss:0.70169\n",
      "[122]\tvalidation_0-logloss:0.70138\n",
      "[124]\tvalidation_0-logloss:0.70163\n",
      "[126]\tvalidation_0-logloss:0.70249\n",
      "[128]\tvalidation_0-logloss:0.70221\n",
      "[130]\tvalidation_0-logloss:0.70225\n",
      "[132]\tvalidation_0-logloss:0.70285\n",
      "[134]\tvalidation_0-logloss:0.70324\n",
      "[136]\tvalidation_0-logloss:0.70339\n",
      "[138]\tvalidation_0-logloss:0.70400\n",
      "[140]\tvalidation_0-logloss:0.70461\n",
      "[142]\tvalidation_0-logloss:0.70482\n",
      "[144]\tvalidation_0-logloss:0.70511\n",
      "[146]\tvalidation_0-logloss:0.70526\n",
      "[148]\tvalidation_0-logloss:0.70530\n",
      "[150]\tvalidation_0-logloss:0.70570\n",
      "[152]\tvalidation_0-logloss:0.70561\n",
      "[154]\tvalidation_0-logloss:0.70601\n",
      "[156]\tvalidation_0-logloss:0.70607\n",
      "[158]\tvalidation_0-logloss:0.70623\n",
      "[160]\tvalidation_0-logloss:0.70665\n",
      "[162]\tvalidation_0-logloss:0.70675\n",
      "[164]\tvalidation_0-logloss:0.70680\n",
      "[166]\tvalidation_0-logloss:0.70710\n",
      "[168]\tvalidation_0-logloss:0.70710\n",
      "[170]\tvalidation_0-logloss:0.70740\n",
      "[172]\tvalidation_0-logloss:0.70730\n",
      "[174]\tvalidation_0-logloss:0.70731\n",
      "[176]\tvalidation_0-logloss:0.70754\n",
      "[178]\tvalidation_0-logloss:0.70775\n",
      "[180]\tvalidation_0-logloss:0.70818\n",
      "[182]\tvalidation_0-logloss:0.70789\n",
      "[184]\tvalidation_0-logloss:0.70819\n",
      "[186]\tvalidation_0-logloss:0.70872\n",
      "[188]\tvalidation_0-logloss:0.70891\n",
      "[190]\tvalidation_0-logloss:0.70875\n",
      "[192]\tvalidation_0-logloss:0.70890\n",
      "[194]\tvalidation_0-logloss:0.70882\n",
      "[196]\tvalidation_0-logloss:0.70909\n",
      "[198]\tvalidation_0-logloss:0.70917\n",
      "[200]\tvalidation_0-logloss:0.70966\n",
      "[202]\tvalidation_0-logloss:0.70983\n",
      "[204]\tvalidation_0-logloss:0.71029\n",
      "[206]\tvalidation_0-logloss:0.71048\n",
      "[208]\tvalidation_0-logloss:0.71128\n",
      "[210]\tvalidation_0-logloss:0.71149\n",
      "[212]\tvalidation_0-logloss:0.71178\n",
      "[214]\tvalidation_0-logloss:0.71174\n",
      "[216]\tvalidation_0-logloss:0.71174\n",
      "[218]\tvalidation_0-logloss:0.71170\n",
      "[220]\tvalidation_0-logloss:0.71170\n",
      "[222]\tvalidation_0-logloss:0.71239\n",
      "[224]\tvalidation_0-logloss:0.71231\n",
      "[226]\tvalidation_0-logloss:0.71213\n",
      "[228]\tvalidation_0-logloss:0.71228\n",
      "[230]\tvalidation_0-logloss:0.71219\n",
      "[232]\tvalidation_0-logloss:0.71263\n",
      "[234]\tvalidation_0-logloss:0.71246\n",
      "[236]\tvalidation_0-logloss:0.71244\n",
      "[238]\tvalidation_0-logloss:0.71281\n",
      "[240]\tvalidation_0-logloss:0.71277\n",
      "[242]\tvalidation_0-logloss:0.71346\n",
      "[244]\tvalidation_0-logloss:0.71348\n",
      "[246]\tvalidation_0-logloss:0.71349\n",
      "[248]\tvalidation_0-logloss:0.71381\n",
      "[250]\tvalidation_0-logloss:0.71438\n",
      "[252]\tvalidation_0-logloss:0.71464\n",
      "[254]\tvalidation_0-logloss:0.71469\n",
      "[256]\tvalidation_0-logloss:0.71485\n",
      "[258]\tvalidation_0-logloss:0.71505\n",
      "[260]\tvalidation_0-logloss:0.71487\n",
      "[262]\tvalidation_0-logloss:0.71515\n",
      "[264]\tvalidation_0-logloss:0.71543\n",
      "[266]\tvalidation_0-logloss:0.71591\n",
      "[268]\tvalidation_0-logloss:0.71605\n",
      "[269]\tvalidation_0-logloss:0.71608\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:38:29,403] Trial 42 finished with value: 0.6950201803587505 and parameters: {'eta': 0.10044314951204313, 'gamma': 0.6293727175846439, 'max_depth': 5, 'min_child_weight': 1, 'lambda': 0.1358751695088594, 'alpha': 0.12028389592032995}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:38:34] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69536\n",
      "[2]\tvalidation_0-logloss:0.69530\n",
      "[4]\tvalidation_0-logloss:0.69587\n",
      "[6]\tvalidation_0-logloss:0.69569\n",
      "[8]\tvalidation_0-logloss:0.69540\n",
      "[10]\tvalidation_0-logloss:0.69526\n",
      "[12]\tvalidation_0-logloss:0.69545\n",
      "[14]\tvalidation_0-logloss:0.69534\n",
      "[16]\tvalidation_0-logloss:0.69525\n",
      "[18]\tvalidation_0-logloss:0.69556\n",
      "[20]\tvalidation_0-logloss:0.69513\n",
      "[22]\tvalidation_0-logloss:0.69542\n",
      "[24]\tvalidation_0-logloss:0.69554\n",
      "[26]\tvalidation_0-logloss:0.69540\n",
      "[28]\tvalidation_0-logloss:0.69478\n",
      "[30]\tvalidation_0-logloss:0.69500\n",
      "[32]\tvalidation_0-logloss:0.69480\n",
      "[34]\tvalidation_0-logloss:0.69484\n",
      "[36]\tvalidation_0-logloss:0.69510\n",
      "[38]\tvalidation_0-logloss:0.69506\n",
      "[40]\tvalidation_0-logloss:0.69549\n",
      "[42]\tvalidation_0-logloss:0.69554\n",
      "[44]\tvalidation_0-logloss:0.69556\n",
      "[46]\tvalidation_0-logloss:0.69548\n",
      "[48]\tvalidation_0-logloss:0.69536\n",
      "[50]\tvalidation_0-logloss:0.69554\n",
      "[52]\tvalidation_0-logloss:0.69557\n",
      "[54]\tvalidation_0-logloss:0.69544\n",
      "[56]\tvalidation_0-logloss:0.69538\n",
      "[58]\tvalidation_0-logloss:0.69544\n",
      "[60]\tvalidation_0-logloss:0.69554\n",
      "[62]\tvalidation_0-logloss:0.69579\n",
      "[64]\tvalidation_0-logloss:0.69581\n",
      "[66]\tvalidation_0-logloss:0.69605\n",
      "[68]\tvalidation_0-logloss:0.69614\n",
      "[70]\tvalidation_0-logloss:0.69627\n",
      "[72]\tvalidation_0-logloss:0.69673\n",
      "[74]\tvalidation_0-logloss:0.69664\n",
      "[76]\tvalidation_0-logloss:0.69664\n",
      "[78]\tvalidation_0-logloss:0.69678\n",
      "[80]\tvalidation_0-logloss:0.69763\n",
      "[82]\tvalidation_0-logloss:0.69748\n",
      "[84]\tvalidation_0-logloss:0.69753\n",
      "[86]\tvalidation_0-logloss:0.69809\n",
      "[88]\tvalidation_0-logloss:0.69829\n",
      "[90]\tvalidation_0-logloss:0.69856\n",
      "[92]\tvalidation_0-logloss:0.69888\n",
      "[94]\tvalidation_0-logloss:0.69879\n",
      "[96]\tvalidation_0-logloss:0.69887\n",
      "[98]\tvalidation_0-logloss:0.69886\n",
      "[100]\tvalidation_0-logloss:0.69895\n",
      "[102]\tvalidation_0-logloss:0.69953\n",
      "[104]\tvalidation_0-logloss:0.69949\n",
      "[106]\tvalidation_0-logloss:0.69962\n",
      "[108]\tvalidation_0-logloss:0.69975\n",
      "[110]\tvalidation_0-logloss:0.69965\n",
      "[112]\tvalidation_0-logloss:0.69995\n",
      "[114]\tvalidation_0-logloss:0.70010\n",
      "[116]\tvalidation_0-logloss:0.69982\n",
      "[118]\tvalidation_0-logloss:0.70009\n",
      "[120]\tvalidation_0-logloss:0.70007\n",
      "[122]\tvalidation_0-logloss:0.70010\n",
      "[124]\tvalidation_0-logloss:0.70030\n",
      "[126]\tvalidation_0-logloss:0.70016\n",
      "[128]\tvalidation_0-logloss:0.70018\n",
      "[130]\tvalidation_0-logloss:0.70040\n",
      "[132]\tvalidation_0-logloss:0.70036\n",
      "[134]\tvalidation_0-logloss:0.70071\n",
      "[136]\tvalidation_0-logloss:0.70108\n",
      "[138]\tvalidation_0-logloss:0.70155\n",
      "[140]\tvalidation_0-logloss:0.70168\n",
      "[142]\tvalidation_0-logloss:0.70164\n",
      "[144]\tvalidation_0-logloss:0.70164\n",
      "[146]\tvalidation_0-logloss:0.70154\n",
      "[148]\tvalidation_0-logloss:0.70157\n",
      "[150]\tvalidation_0-logloss:0.70177\n",
      "[152]\tvalidation_0-logloss:0.70153\n",
      "[154]\tvalidation_0-logloss:0.70140\n",
      "[156]\tvalidation_0-logloss:0.70124\n",
      "[158]\tvalidation_0-logloss:0.70154\n",
      "[160]\tvalidation_0-logloss:0.70147\n",
      "[162]\tvalidation_0-logloss:0.70144\n",
      "[164]\tvalidation_0-logloss:0.70137\n",
      "[166]\tvalidation_0-logloss:0.70119\n",
      "[168]\tvalidation_0-logloss:0.70106\n",
      "[170]\tvalidation_0-logloss:0.70120\n",
      "[172]\tvalidation_0-logloss:0.70108\n",
      "[174]\tvalidation_0-logloss:0.70090\n",
      "[176]\tvalidation_0-logloss:0.70140\n",
      "[178]\tvalidation_0-logloss:0.70151\n",
      "[180]\tvalidation_0-logloss:0.70131\n",
      "[182]\tvalidation_0-logloss:0.70134\n",
      "[184]\tvalidation_0-logloss:0.70140\n",
      "[186]\tvalidation_0-logloss:0.70146\n",
      "[188]\tvalidation_0-logloss:0.70146\n",
      "[190]\tvalidation_0-logloss:0.70145\n",
      "[192]\tvalidation_0-logloss:0.70199\n",
      "[194]\tvalidation_0-logloss:0.70199\n",
      "[196]\tvalidation_0-logloss:0.70216\n",
      "[198]\tvalidation_0-logloss:0.70214\n",
      "[200]\tvalidation_0-logloss:0.70225\n",
      "[202]\tvalidation_0-logloss:0.70229\n",
      "[204]\tvalidation_0-logloss:0.70235\n",
      "[206]\tvalidation_0-logloss:0.70248\n",
      "[208]\tvalidation_0-logloss:0.70284\n",
      "[210]\tvalidation_0-logloss:0.70284\n",
      "[212]\tvalidation_0-logloss:0.70293\n",
      "[214]\tvalidation_0-logloss:0.70314\n",
      "[216]\tvalidation_0-logloss:0.70337\n",
      "[218]\tvalidation_0-logloss:0.70334\n",
      "[220]\tvalidation_0-logloss:0.70341\n",
      "[222]\tvalidation_0-logloss:0.70348\n",
      "[224]\tvalidation_0-logloss:0.70311\n",
      "[226]\tvalidation_0-logloss:0.70375\n",
      "[228]\tvalidation_0-logloss:0.70339\n",
      "[230]\tvalidation_0-logloss:0.70313\n",
      "[232]\tvalidation_0-logloss:0.70356\n",
      "[234]\tvalidation_0-logloss:0.70377\n",
      "[236]\tvalidation_0-logloss:0.70383\n",
      "[238]\tvalidation_0-logloss:0.70390\n",
      "[240]\tvalidation_0-logloss:0.70381\n",
      "[242]\tvalidation_0-logloss:0.70398\n",
      "[244]\tvalidation_0-logloss:0.70414\n",
      "[246]\tvalidation_0-logloss:0.70467\n",
      "[248]\tvalidation_0-logloss:0.70471\n",
      "[250]\tvalidation_0-logloss:0.70468\n",
      "[252]\tvalidation_0-logloss:0.70495\n",
      "[254]\tvalidation_0-logloss:0.70533\n",
      "[256]\tvalidation_0-logloss:0.70537\n",
      "[258]\tvalidation_0-logloss:0.70558\n",
      "[260]\tvalidation_0-logloss:0.70569\n",
      "[262]\tvalidation_0-logloss:0.70560\n",
      "[264]\tvalidation_0-logloss:0.70547\n",
      "[266]\tvalidation_0-logloss:0.70544\n",
      "[268]\tvalidation_0-logloss:0.70543\n",
      "[270]\tvalidation_0-logloss:0.70536\n",
      "[272]\tvalidation_0-logloss:0.70540\n",
      "[274]\tvalidation_0-logloss:0.70555\n",
      "[276]\tvalidation_0-logloss:0.70570\n",
      "[277]\tvalidation_0-logloss:0.70576\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:39:53,219] Trial 43 finished with value: 0.6947782803970359 and parameters: {'eta': 0.09240582029601685, 'gamma': 0.5456938330985388, 'max_depth': 4, 'min_child_weight': 2, 'lambda': 0.7454773703164362, 'alpha': 0.2654088766545525}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:39:57] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69528\n",
      "[2]\tvalidation_0-logloss:0.69542\n",
      "[4]\tvalidation_0-logloss:0.69554\n",
      "[6]\tvalidation_0-logloss:0.69546\n",
      "[8]\tvalidation_0-logloss:0.69546\n",
      "[10]\tvalidation_0-logloss:0.69545\n",
      "[12]\tvalidation_0-logloss:0.69521\n",
      "[14]\tvalidation_0-logloss:0.69531\n",
      "[16]\tvalidation_0-logloss:0.69532\n",
      "[18]\tvalidation_0-logloss:0.69504\n",
      "[20]\tvalidation_0-logloss:0.69503\n",
      "[22]\tvalidation_0-logloss:0.69510\n",
      "[24]\tvalidation_0-logloss:0.69524\n",
      "[26]\tvalidation_0-logloss:0.69529\n",
      "[28]\tvalidation_0-logloss:0.69529\n",
      "[30]\tvalidation_0-logloss:0.69551\n",
      "[32]\tvalidation_0-logloss:0.69550\n",
      "[34]\tvalidation_0-logloss:0.69565\n",
      "[36]\tvalidation_0-logloss:0.69557\n",
      "[38]\tvalidation_0-logloss:0.69567\n",
      "[40]\tvalidation_0-logloss:0.69568\n",
      "[42]\tvalidation_0-logloss:0.69590\n",
      "[44]\tvalidation_0-logloss:0.69590\n",
      "[46]\tvalidation_0-logloss:0.69592\n",
      "[48]\tvalidation_0-logloss:0.69598\n",
      "[50]\tvalidation_0-logloss:0.69592\n",
      "[52]\tvalidation_0-logloss:0.69583\n",
      "[54]\tvalidation_0-logloss:0.69587\n",
      "[56]\tvalidation_0-logloss:0.69581\n",
      "[58]\tvalidation_0-logloss:0.69594\n",
      "[60]\tvalidation_0-logloss:0.69592\n",
      "[62]\tvalidation_0-logloss:0.69586\n",
      "[64]\tvalidation_0-logloss:0.69587\n",
      "[66]\tvalidation_0-logloss:0.69590\n",
      "[68]\tvalidation_0-logloss:0.69582\n",
      "[70]\tvalidation_0-logloss:0.69587\n",
      "[72]\tvalidation_0-logloss:0.69595\n",
      "[74]\tvalidation_0-logloss:0.69603\n",
      "[76]\tvalidation_0-logloss:0.69590\n",
      "[78]\tvalidation_0-logloss:0.69581\n",
      "[80]\tvalidation_0-logloss:0.69573\n",
      "[82]\tvalidation_0-logloss:0.69575\n",
      "[84]\tvalidation_0-logloss:0.69590\n",
      "[86]\tvalidation_0-logloss:0.69610\n",
      "[88]\tvalidation_0-logloss:0.69616\n",
      "[90]\tvalidation_0-logloss:0.69616\n",
      "[92]\tvalidation_0-logloss:0.69626\n",
      "[94]\tvalidation_0-logloss:0.69630\n",
      "[96]\tvalidation_0-logloss:0.69629\n",
      "[98]\tvalidation_0-logloss:0.69616\n",
      "[100]\tvalidation_0-logloss:0.69615\n",
      "[102]\tvalidation_0-logloss:0.69612\n",
      "[104]\tvalidation_0-logloss:0.69609\n",
      "[106]\tvalidation_0-logloss:0.69617\n",
      "[108]\tvalidation_0-logloss:0.69636\n",
      "[110]\tvalidation_0-logloss:0.69638\n",
      "[112]\tvalidation_0-logloss:0.69629\n",
      "[114]\tvalidation_0-logloss:0.69642\n",
      "[116]\tvalidation_0-logloss:0.69640\n",
      "[118]\tvalidation_0-logloss:0.69644\n",
      "[120]\tvalidation_0-logloss:0.69647\n",
      "[122]\tvalidation_0-logloss:0.69620\n",
      "[124]\tvalidation_0-logloss:0.69619\n",
      "[126]\tvalidation_0-logloss:0.69618\n",
      "[128]\tvalidation_0-logloss:0.69621\n",
      "[130]\tvalidation_0-logloss:0.69615\n",
      "[132]\tvalidation_0-logloss:0.69620\n",
      "[134]\tvalidation_0-logloss:0.69607\n",
      "[136]\tvalidation_0-logloss:0.69636\n",
      "[138]\tvalidation_0-logloss:0.69644\n",
      "[140]\tvalidation_0-logloss:0.69644\n",
      "[142]\tvalidation_0-logloss:0.69646\n",
      "[144]\tvalidation_0-logloss:0.69653\n",
      "[146]\tvalidation_0-logloss:0.69624\n",
      "[148]\tvalidation_0-logloss:0.69616\n",
      "[150]\tvalidation_0-logloss:0.69624\n",
      "[152]\tvalidation_0-logloss:0.69644\n",
      "[154]\tvalidation_0-logloss:0.69642\n",
      "[156]\tvalidation_0-logloss:0.69636\n",
      "[158]\tvalidation_0-logloss:0.69637\n",
      "[160]\tvalidation_0-logloss:0.69636\n",
      "[162]\tvalidation_0-logloss:0.69636\n",
      "[164]\tvalidation_0-logloss:0.69635\n",
      "[166]\tvalidation_0-logloss:0.69639\n",
      "[168]\tvalidation_0-logloss:0.69637\n",
      "[170]\tvalidation_0-logloss:0.69647\n",
      "[172]\tvalidation_0-logloss:0.69656\n",
      "[174]\tvalidation_0-logloss:0.69660\n",
      "[176]\tvalidation_0-logloss:0.69704\n",
      "[178]\tvalidation_0-logloss:0.69710\n",
      "[180]\tvalidation_0-logloss:0.69716\n",
      "[182]\tvalidation_0-logloss:0.69716\n",
      "[184]\tvalidation_0-logloss:0.69728\n",
      "[186]\tvalidation_0-logloss:0.69726\n",
      "[188]\tvalidation_0-logloss:0.69722\n",
      "[190]\tvalidation_0-logloss:0.69737\n",
      "[192]\tvalidation_0-logloss:0.69738\n",
      "[194]\tvalidation_0-logloss:0.69737\n",
      "[196]\tvalidation_0-logloss:0.69730\n",
      "[198]\tvalidation_0-logloss:0.69724\n",
      "[200]\tvalidation_0-logloss:0.69728\n",
      "[202]\tvalidation_0-logloss:0.69730\n",
      "[204]\tvalidation_0-logloss:0.69731\n",
      "[206]\tvalidation_0-logloss:0.69728\n",
      "[208]\tvalidation_0-logloss:0.69737\n",
      "[210]\tvalidation_0-logloss:0.69740\n",
      "[212]\tvalidation_0-logloss:0.69748\n",
      "[214]\tvalidation_0-logloss:0.69748\n",
      "[216]\tvalidation_0-logloss:0.69749\n",
      "[218]\tvalidation_0-logloss:0.69761\n",
      "[220]\tvalidation_0-logloss:0.69768\n",
      "[222]\tvalidation_0-logloss:0.69770\n",
      "[224]\tvalidation_0-logloss:0.69772\n",
      "[226]\tvalidation_0-logloss:0.69773\n",
      "[228]\tvalidation_0-logloss:0.69776\n",
      "[230]\tvalidation_0-logloss:0.69783\n",
      "[232]\tvalidation_0-logloss:0.69783\n",
      "[234]\tvalidation_0-logloss:0.69785\n",
      "[236]\tvalidation_0-logloss:0.69791\n",
      "[238]\tvalidation_0-logloss:0.69799\n",
      "[240]\tvalidation_0-logloss:0.69804\n",
      "[242]\tvalidation_0-logloss:0.69808\n",
      "[244]\tvalidation_0-logloss:0.69808\n",
      "[246]\tvalidation_0-logloss:0.69811\n",
      "[248]\tvalidation_0-logloss:0.69814\n",
      "[250]\tvalidation_0-logloss:0.69818\n",
      "[252]\tvalidation_0-logloss:0.69819\n",
      "[254]\tvalidation_0-logloss:0.69816\n",
      "[256]\tvalidation_0-logloss:0.69816\n",
      "[258]\tvalidation_0-logloss:0.69819\n",
      "[260]\tvalidation_0-logloss:0.69821\n",
      "[262]\tvalidation_0-logloss:0.69828\n",
      "[264]\tvalidation_0-logloss:0.69833\n",
      "[266]\tvalidation_0-logloss:0.69877\n",
      "[268]\tvalidation_0-logloss:0.69874\n",
      "[270]\tvalidation_0-logloss:0.69870\n",
      "[271]\tvalidation_0-logloss:0.69870\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:41:09,123] Trial 44 finished with value: 0.6950083170824178 and parameters: {'eta': 0.041303580522220475, 'gamma': 0.3989515432407207, 'max_depth': 3, 'min_child_weight': 3, 'lambda': 0.04957559500897066, 'alpha': 0.03091520390169411}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:41:13] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69529\n",
      "[2]\tvalidation_0-logloss:0.69544\n",
      "[4]\tvalidation_0-logloss:0.69566\n",
      "[6]\tvalidation_0-logloss:0.69592\n",
      "[8]\tvalidation_0-logloss:0.69599\n",
      "[10]\tvalidation_0-logloss:0.69586\n",
      "[12]\tvalidation_0-logloss:0.69589\n",
      "[14]\tvalidation_0-logloss:0.69574\n",
      "[16]\tvalidation_0-logloss:0.69560\n",
      "[18]\tvalidation_0-logloss:0.69567\n",
      "[20]\tvalidation_0-logloss:0.69563\n",
      "[22]\tvalidation_0-logloss:0.69547\n",
      "[24]\tvalidation_0-logloss:0.69539\n",
      "[26]\tvalidation_0-logloss:0.69529\n",
      "[28]\tvalidation_0-logloss:0.69537\n",
      "[30]\tvalidation_0-logloss:0.69521\n",
      "[32]\tvalidation_0-logloss:0.69517\n",
      "[34]\tvalidation_0-logloss:0.69524\n",
      "[36]\tvalidation_0-logloss:0.69520\n",
      "[38]\tvalidation_0-logloss:0.69514\n",
      "[40]\tvalidation_0-logloss:0.69515\n",
      "[42]\tvalidation_0-logloss:0.69515\n",
      "[44]\tvalidation_0-logloss:0.69525\n",
      "[46]\tvalidation_0-logloss:0.69534\n",
      "[48]\tvalidation_0-logloss:0.69548\n",
      "[50]\tvalidation_0-logloss:0.69547\n",
      "[52]\tvalidation_0-logloss:0.69541\n",
      "[54]\tvalidation_0-logloss:0.69554\n",
      "[56]\tvalidation_0-logloss:0.69558\n",
      "[58]\tvalidation_0-logloss:0.69557\n",
      "[60]\tvalidation_0-logloss:0.69567\n",
      "[62]\tvalidation_0-logloss:0.69576\n",
      "[64]\tvalidation_0-logloss:0.69571\n",
      "[66]\tvalidation_0-logloss:0.69575\n",
      "[68]\tvalidation_0-logloss:0.69577\n",
      "[70]\tvalidation_0-logloss:0.69570\n",
      "[72]\tvalidation_0-logloss:0.69569\n",
      "[74]\tvalidation_0-logloss:0.69574\n",
      "[76]\tvalidation_0-logloss:0.69574\n",
      "[78]\tvalidation_0-logloss:0.69571\n",
      "[80]\tvalidation_0-logloss:0.69578\n",
      "[82]\tvalidation_0-logloss:0.69573\n",
      "[84]\tvalidation_0-logloss:0.69570\n",
      "[86]\tvalidation_0-logloss:0.69576\n",
      "[88]\tvalidation_0-logloss:0.69571\n",
      "[90]\tvalidation_0-logloss:0.69576\n",
      "[92]\tvalidation_0-logloss:0.69585\n",
      "[94]\tvalidation_0-logloss:0.69587\n",
      "[96]\tvalidation_0-logloss:0.69589\n",
      "[98]\tvalidation_0-logloss:0.69588\n",
      "[100]\tvalidation_0-logloss:0.69599\n",
      "[102]\tvalidation_0-logloss:0.69596\n",
      "[104]\tvalidation_0-logloss:0.69600\n",
      "[106]\tvalidation_0-logloss:0.69598\n",
      "[108]\tvalidation_0-logloss:0.69602\n",
      "[110]\tvalidation_0-logloss:0.69604\n",
      "[112]\tvalidation_0-logloss:0.69596\n",
      "[114]\tvalidation_0-logloss:0.69612\n",
      "[116]\tvalidation_0-logloss:0.69613\n",
      "[118]\tvalidation_0-logloss:0.69609\n",
      "[120]\tvalidation_0-logloss:0.69607\n",
      "[122]\tvalidation_0-logloss:0.69620\n",
      "[124]\tvalidation_0-logloss:0.69617\n",
      "[126]\tvalidation_0-logloss:0.69626\n",
      "[128]\tvalidation_0-logloss:0.69634\n",
      "[130]\tvalidation_0-logloss:0.69643\n",
      "[132]\tvalidation_0-logloss:0.69644\n",
      "[134]\tvalidation_0-logloss:0.69645\n",
      "[136]\tvalidation_0-logloss:0.69650\n",
      "[138]\tvalidation_0-logloss:0.69644\n",
      "[140]\tvalidation_0-logloss:0.69639\n",
      "[142]\tvalidation_0-logloss:0.69634\n",
      "[144]\tvalidation_0-logloss:0.69641\n",
      "[146]\tvalidation_0-logloss:0.69635\n",
      "[148]\tvalidation_0-logloss:0.69650\n",
      "[150]\tvalidation_0-logloss:0.69651\n",
      "[152]\tvalidation_0-logloss:0.69648\n",
      "[154]\tvalidation_0-logloss:0.69647\n",
      "[156]\tvalidation_0-logloss:0.69644\n",
      "[158]\tvalidation_0-logloss:0.69641\n",
      "[160]\tvalidation_0-logloss:0.69631\n",
      "[162]\tvalidation_0-logloss:0.69628\n",
      "[164]\tvalidation_0-logloss:0.69634\n",
      "[166]\tvalidation_0-logloss:0.69648\n",
      "[168]\tvalidation_0-logloss:0.69652\n",
      "[170]\tvalidation_0-logloss:0.69651\n",
      "[172]\tvalidation_0-logloss:0.69646\n",
      "[174]\tvalidation_0-logloss:0.69654\n",
      "[176]\tvalidation_0-logloss:0.69660\n",
      "[178]\tvalidation_0-logloss:0.69660\n",
      "[180]\tvalidation_0-logloss:0.69664\n",
      "[182]\tvalidation_0-logloss:0.69671\n",
      "[184]\tvalidation_0-logloss:0.69680\n",
      "[186]\tvalidation_0-logloss:0.69681\n",
      "[188]\tvalidation_0-logloss:0.69688\n",
      "[190]\tvalidation_0-logloss:0.69684\n",
      "[192]\tvalidation_0-logloss:0.69682\n",
      "[194]\tvalidation_0-logloss:0.69693\n",
      "[196]\tvalidation_0-logloss:0.69710\n",
      "[198]\tvalidation_0-logloss:0.69705\n",
      "[200]\tvalidation_0-logloss:0.69719\n",
      "[202]\tvalidation_0-logloss:0.69724\n",
      "[204]\tvalidation_0-logloss:0.69728\n",
      "[206]\tvalidation_0-logloss:0.69721\n",
      "[208]\tvalidation_0-logloss:0.69727\n",
      "[210]\tvalidation_0-logloss:0.69732\n",
      "[212]\tvalidation_0-logloss:0.69736\n",
      "[214]\tvalidation_0-logloss:0.69754\n",
      "[216]\tvalidation_0-logloss:0.69765\n",
      "[218]\tvalidation_0-logloss:0.69759\n",
      "[220]\tvalidation_0-logloss:0.69762\n",
      "[222]\tvalidation_0-logloss:0.69796\n",
      "[224]\tvalidation_0-logloss:0.69792\n",
      "[226]\tvalidation_0-logloss:0.69811\n",
      "[228]\tvalidation_0-logloss:0.69819\n",
      "[230]\tvalidation_0-logloss:0.69815\n",
      "[232]\tvalidation_0-logloss:0.69841\n",
      "[234]\tvalidation_0-logloss:0.69843\n",
      "[236]\tvalidation_0-logloss:0.69851\n",
      "[238]\tvalidation_0-logloss:0.69858\n",
      "[240]\tvalidation_0-logloss:0.69857\n",
      "[242]\tvalidation_0-logloss:0.69857\n",
      "[244]\tvalidation_0-logloss:0.69854\n",
      "[246]\tvalidation_0-logloss:0.69859\n",
      "[248]\tvalidation_0-logloss:0.69868\n",
      "[250]\tvalidation_0-logloss:0.69870\n",
      "[252]\tvalidation_0-logloss:0.69874\n",
      "[254]\tvalidation_0-logloss:0.69875\n",
      "[256]\tvalidation_0-logloss:0.69872\n",
      "[258]\tvalidation_0-logloss:0.69895\n",
      "[260]\tvalidation_0-logloss:0.69902\n",
      "[262]\tvalidation_0-logloss:0.69896\n",
      "[264]\tvalidation_0-logloss:0.69897\n",
      "[266]\tvalidation_0-logloss:0.69903\n",
      "[268]\tvalidation_0-logloss:0.69917\n",
      "[270]\tvalidation_0-logloss:0.69924\n",
      "[272]\tvalidation_0-logloss:0.69928\n",
      "[274]\tvalidation_0-logloss:0.69932\n",
      "[276]\tvalidation_0-logloss:0.69938\n",
      "[278]\tvalidation_0-logloss:0.69946\n",
      "[280]\tvalidation_0-logloss:0.69946\n",
      "[282]\tvalidation_0-logloss:0.69949\n",
      "[284]\tvalidation_0-logloss:0.69949\n",
      "[286]\tvalidation_0-logloss:0.69951\n",
      "[288]\tvalidation_0-logloss:0.69950\n",
      "[289]\tvalidation_0-logloss:0.69958\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:42:45,108] Trial 45 finished with value: 0.6951268311695152 and parameters: {'eta': 0.025991576259602682, 'gamma': 0.47078828671848727, 'max_depth': 6, 'min_child_weight': 0, 'lambda': 0.4810395569428151, 'alpha': 0.00895465741614021}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:42:49] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69554\n",
      "[2]\tvalidation_0-logloss:0.69560\n",
      "[4]\tvalidation_0-logloss:0.69589\n",
      "[6]\tvalidation_0-logloss:0.69505\n",
      "[8]\tvalidation_0-logloss:0.69531\n",
      "[10]\tvalidation_0-logloss:0.69521\n",
      "[12]\tvalidation_0-logloss:0.69579\n",
      "[14]\tvalidation_0-logloss:0.69599\n",
      "[16]\tvalidation_0-logloss:0.69621\n",
      "[18]\tvalidation_0-logloss:0.69488\n",
      "[20]\tvalidation_0-logloss:0.69475\n",
      "[22]\tvalidation_0-logloss:0.69472\n",
      "[24]\tvalidation_0-logloss:0.69485\n",
      "[26]\tvalidation_0-logloss:0.69514\n",
      "[28]\tvalidation_0-logloss:0.69565\n",
      "[30]\tvalidation_0-logloss:0.69746\n",
      "[32]\tvalidation_0-logloss:0.69779\n",
      "[34]\tvalidation_0-logloss:0.69777\n",
      "[36]\tvalidation_0-logloss:0.69800\n",
      "[38]\tvalidation_0-logloss:0.69811\n",
      "[40]\tvalidation_0-logloss:0.69859\n",
      "[42]\tvalidation_0-logloss:0.69836\n",
      "[44]\tvalidation_0-logloss:0.69822\n",
      "[46]\tvalidation_0-logloss:0.69829\n",
      "[48]\tvalidation_0-logloss:0.69860\n",
      "[50]\tvalidation_0-logloss:0.69851\n",
      "[52]\tvalidation_0-logloss:0.69841\n",
      "[54]\tvalidation_0-logloss:0.69827\n",
      "[56]\tvalidation_0-logloss:0.69868\n",
      "[58]\tvalidation_0-logloss:0.69868\n",
      "[60]\tvalidation_0-logloss:0.69913\n",
      "[62]\tvalidation_0-logloss:0.70067\n",
      "[64]\tvalidation_0-logloss:0.70032\n",
      "[66]\tvalidation_0-logloss:0.70032\n",
      "[68]\tvalidation_0-logloss:0.70015\n",
      "[70]\tvalidation_0-logloss:0.69969\n",
      "[72]\tvalidation_0-logloss:0.70008\n",
      "[74]\tvalidation_0-logloss:0.70051\n",
      "[76]\tvalidation_0-logloss:0.70092\n",
      "[78]\tvalidation_0-logloss:0.70053\n",
      "[80]\tvalidation_0-logloss:0.70071\n",
      "[82]\tvalidation_0-logloss:0.70176\n",
      "[84]\tvalidation_0-logloss:0.70210\n",
      "[86]\tvalidation_0-logloss:0.70331\n",
      "[88]\tvalidation_0-logloss:0.70379\n",
      "[90]\tvalidation_0-logloss:0.70390\n",
      "[92]\tvalidation_0-logloss:0.70389\n",
      "[94]\tvalidation_0-logloss:0.70394\n",
      "[96]\tvalidation_0-logloss:0.70462\n",
      "[98]\tvalidation_0-logloss:0.70416\n",
      "[100]\tvalidation_0-logloss:0.70403\n",
      "[102]\tvalidation_0-logloss:0.70398\n",
      "[104]\tvalidation_0-logloss:0.70450\n",
      "[106]\tvalidation_0-logloss:0.70554\n",
      "[108]\tvalidation_0-logloss:0.70542\n",
      "[110]\tvalidation_0-logloss:0.70571\n",
      "[112]\tvalidation_0-logloss:0.70602\n",
      "[114]\tvalidation_0-logloss:0.70645\n",
      "[116]\tvalidation_0-logloss:0.70716\n",
      "[118]\tvalidation_0-logloss:0.70780\n",
      "[120]\tvalidation_0-logloss:0.70776\n",
      "[122]\tvalidation_0-logloss:0.70754\n",
      "[124]\tvalidation_0-logloss:0.70733\n",
      "[126]\tvalidation_0-logloss:0.70818\n",
      "[128]\tvalidation_0-logloss:0.70776\n",
      "[130]\tvalidation_0-logloss:0.70800\n",
      "[132]\tvalidation_0-logloss:0.70826\n",
      "[134]\tvalidation_0-logloss:0.70804\n",
      "[136]\tvalidation_0-logloss:0.70817\n",
      "[138]\tvalidation_0-logloss:0.70845\n",
      "[140]\tvalidation_0-logloss:0.70901\n",
      "[142]\tvalidation_0-logloss:0.70868\n",
      "[144]\tvalidation_0-logloss:0.70880\n",
      "[146]\tvalidation_0-logloss:0.70907\n",
      "[148]\tvalidation_0-logloss:0.70904\n",
      "[150]\tvalidation_0-logloss:0.70965\n",
      "[152]\tvalidation_0-logloss:0.70999\n",
      "[154]\tvalidation_0-logloss:0.70993\n",
      "[156]\tvalidation_0-logloss:0.71029\n",
      "[158]\tvalidation_0-logloss:0.71076\n",
      "[160]\tvalidation_0-logloss:0.71082\n",
      "[162]\tvalidation_0-logloss:0.71101\n",
      "[164]\tvalidation_0-logloss:0.71037\n",
      "[166]\tvalidation_0-logloss:0.71063\n",
      "[168]\tvalidation_0-logloss:0.71084\n",
      "[170]\tvalidation_0-logloss:0.71077\n",
      "[172]\tvalidation_0-logloss:0.71087\n",
      "[174]\tvalidation_0-logloss:0.71154\n",
      "[176]\tvalidation_0-logloss:0.71201\n",
      "[178]\tvalidation_0-logloss:0.71208\n",
      "[180]\tvalidation_0-logloss:0.71229\n",
      "[182]\tvalidation_0-logloss:0.71309\n",
      "[184]\tvalidation_0-logloss:0.71347\n",
      "[186]\tvalidation_0-logloss:0.71390\n",
      "[188]\tvalidation_0-logloss:0.71430\n",
      "[190]\tvalidation_0-logloss:0.71428\n",
      "[192]\tvalidation_0-logloss:0.71417\n",
      "[194]\tvalidation_0-logloss:0.71423\n",
      "[196]\tvalidation_0-logloss:0.71479\n",
      "[198]\tvalidation_0-logloss:0.71493\n",
      "[200]\tvalidation_0-logloss:0.71508\n",
      "[202]\tvalidation_0-logloss:0.71512\n",
      "[204]\tvalidation_0-logloss:0.71486\n",
      "[206]\tvalidation_0-logloss:0.71643\n",
      "[208]\tvalidation_0-logloss:0.71705\n",
      "[210]\tvalidation_0-logloss:0.71806\n",
      "[212]\tvalidation_0-logloss:0.71830\n",
      "[214]\tvalidation_0-logloss:0.71806\n",
      "[216]\tvalidation_0-logloss:0.71781\n",
      "[218]\tvalidation_0-logloss:0.71792\n",
      "[220]\tvalidation_0-logloss:0.71853\n",
      "[222]\tvalidation_0-logloss:0.71874\n",
      "[224]\tvalidation_0-logloss:0.71902\n",
      "[226]\tvalidation_0-logloss:0.71916\n",
      "[228]\tvalidation_0-logloss:0.71911\n",
      "[230]\tvalidation_0-logloss:0.71920\n",
      "[232]\tvalidation_0-logloss:0.71886\n",
      "[234]\tvalidation_0-logloss:0.71871\n",
      "[236]\tvalidation_0-logloss:0.71887\n",
      "[238]\tvalidation_0-logloss:0.71887\n",
      "[240]\tvalidation_0-logloss:0.71973\n",
      "[242]\tvalidation_0-logloss:0.72027\n",
      "[244]\tvalidation_0-logloss:0.72064\n",
      "[246]\tvalidation_0-logloss:0.72055\n",
      "[248]\tvalidation_0-logloss:0.72075\n",
      "[250]\tvalidation_0-logloss:0.72082\n",
      "[252]\tvalidation_0-logloss:0.72126\n",
      "[254]\tvalidation_0-logloss:0.72143\n",
      "[256]\tvalidation_0-logloss:0.72126\n",
      "[258]\tvalidation_0-logloss:0.72166\n",
      "[260]\tvalidation_0-logloss:0.72138\n",
      "[262]\tvalidation_0-logloss:0.72153\n",
      "[264]\tvalidation_0-logloss:0.72168\n",
      "[266]\tvalidation_0-logloss:0.72193\n",
      "[268]\tvalidation_0-logloss:0.72224\n",
      "[270]\tvalidation_0-logloss:0.72242\n",
      "[272]\tvalidation_0-logloss:0.72207\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:44:03,561] Trial 46 finished with value: 0.6947155140988176 and parameters: {'eta': 0.15290302027835928, 'gamma': 0.2940833476756686, 'max_depth': 4, 'min_child_weight': 2, 'lambda': 0.04571648258445799, 'alpha': 0.16971214851275196}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:44:08] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69539\n",
      "[2]\tvalidation_0-logloss:0.69584\n",
      "[4]\tvalidation_0-logloss:0.69540\n",
      "[6]\tvalidation_0-logloss:0.69501\n",
      "[8]\tvalidation_0-logloss:0.69471\n",
      "[10]\tvalidation_0-logloss:0.69473\n",
      "[12]\tvalidation_0-logloss:0.69451\n",
      "[14]\tvalidation_0-logloss:0.69463\n",
      "[16]\tvalidation_0-logloss:0.69470\n",
      "[18]\tvalidation_0-logloss:0.69478\n",
      "[20]\tvalidation_0-logloss:0.69443\n",
      "[22]\tvalidation_0-logloss:0.69427\n",
      "[24]\tvalidation_0-logloss:0.69422\n",
      "[26]\tvalidation_0-logloss:0.69414\n",
      "[28]\tvalidation_0-logloss:0.69390\n",
      "[30]\tvalidation_0-logloss:0.69360\n",
      "[32]\tvalidation_0-logloss:0.69375\n",
      "[34]\tvalidation_0-logloss:0.69350\n",
      "[36]\tvalidation_0-logloss:0.69354\n",
      "[38]\tvalidation_0-logloss:0.69346\n",
      "[40]\tvalidation_0-logloss:0.69351\n",
      "[42]\tvalidation_0-logloss:0.69359\n",
      "[44]\tvalidation_0-logloss:0.69356\n",
      "[46]\tvalidation_0-logloss:0.69375\n",
      "[48]\tvalidation_0-logloss:0.69387\n",
      "[50]\tvalidation_0-logloss:0.69394\n",
      "[52]\tvalidation_0-logloss:0.69434\n",
      "[54]\tvalidation_0-logloss:0.69426\n",
      "[56]\tvalidation_0-logloss:0.69427\n",
      "[58]\tvalidation_0-logloss:0.69421\n",
      "[60]\tvalidation_0-logloss:0.69420\n",
      "[62]\tvalidation_0-logloss:0.69480\n",
      "[64]\tvalidation_0-logloss:0.69472\n",
      "[66]\tvalidation_0-logloss:0.69476\n",
      "[68]\tvalidation_0-logloss:0.69477\n",
      "[70]\tvalidation_0-logloss:0.69479\n",
      "[72]\tvalidation_0-logloss:0.69477\n",
      "[74]\tvalidation_0-logloss:0.69502\n",
      "[76]\tvalidation_0-logloss:0.69514\n",
      "[78]\tvalidation_0-logloss:0.69510\n",
      "[80]\tvalidation_0-logloss:0.69453\n",
      "[82]\tvalidation_0-logloss:0.69461\n",
      "[84]\tvalidation_0-logloss:0.69454\n",
      "[86]\tvalidation_0-logloss:0.69457\n",
      "[88]\tvalidation_0-logloss:0.69451\n",
      "[90]\tvalidation_0-logloss:0.69471\n",
      "[92]\tvalidation_0-logloss:0.69464\n",
      "[94]\tvalidation_0-logloss:0.69463\n",
      "[96]\tvalidation_0-logloss:0.69471\n",
      "[98]\tvalidation_0-logloss:0.69475\n",
      "[100]\tvalidation_0-logloss:0.69478\n",
      "[102]\tvalidation_0-logloss:0.69502\n",
      "[104]\tvalidation_0-logloss:0.69507\n",
      "[106]\tvalidation_0-logloss:0.69501\n",
      "[108]\tvalidation_0-logloss:0.69525\n",
      "[110]\tvalidation_0-logloss:0.69528\n",
      "[112]\tvalidation_0-logloss:0.69523\n",
      "[114]\tvalidation_0-logloss:0.69533\n",
      "[116]\tvalidation_0-logloss:0.69543\n",
      "[118]\tvalidation_0-logloss:0.69562\n",
      "[120]\tvalidation_0-logloss:0.69559\n",
      "[122]\tvalidation_0-logloss:0.69578\n",
      "[124]\tvalidation_0-logloss:0.69606\n",
      "[126]\tvalidation_0-logloss:0.69607\n",
      "[128]\tvalidation_0-logloss:0.69608\n",
      "[130]\tvalidation_0-logloss:0.69632\n",
      "[132]\tvalidation_0-logloss:0.69646\n",
      "[134]\tvalidation_0-logloss:0.69649\n",
      "[136]\tvalidation_0-logloss:0.69642\n",
      "[138]\tvalidation_0-logloss:0.69636\n",
      "[140]\tvalidation_0-logloss:0.69637\n",
      "[142]\tvalidation_0-logloss:0.69652\n",
      "[144]\tvalidation_0-logloss:0.69660\n",
      "[146]\tvalidation_0-logloss:0.69667\n",
      "[148]\tvalidation_0-logloss:0.69687\n",
      "[150]\tvalidation_0-logloss:0.69730\n",
      "[152]\tvalidation_0-logloss:0.69756\n",
      "[154]\tvalidation_0-logloss:0.69770\n",
      "[156]\tvalidation_0-logloss:0.69790\n",
      "[158]\tvalidation_0-logloss:0.69788\n",
      "[160]\tvalidation_0-logloss:0.69819\n",
      "[162]\tvalidation_0-logloss:0.69812\n",
      "[164]\tvalidation_0-logloss:0.69818\n",
      "[166]\tvalidation_0-logloss:0.69800\n",
      "[168]\tvalidation_0-logloss:0.69828\n",
      "[170]\tvalidation_0-logloss:0.69813\n",
      "[172]\tvalidation_0-logloss:0.69820\n",
      "[174]\tvalidation_0-logloss:0.69810\n",
      "[176]\tvalidation_0-logloss:0.69829\n",
      "[178]\tvalidation_0-logloss:0.69828\n",
      "[180]\tvalidation_0-logloss:0.69832\n",
      "[182]\tvalidation_0-logloss:0.69827\n",
      "[184]\tvalidation_0-logloss:0.69840\n",
      "[186]\tvalidation_0-logloss:0.69853\n",
      "[188]\tvalidation_0-logloss:0.69853\n",
      "[190]\tvalidation_0-logloss:0.69853\n",
      "[192]\tvalidation_0-logloss:0.69864\n",
      "[194]\tvalidation_0-logloss:0.69900\n",
      "[196]\tvalidation_0-logloss:0.69950\n",
      "[198]\tvalidation_0-logloss:0.69962\n",
      "[200]\tvalidation_0-logloss:0.69955\n",
      "[202]\tvalidation_0-logloss:0.69957\n",
      "[204]\tvalidation_0-logloss:0.69950\n",
      "[206]\tvalidation_0-logloss:0.69954\n",
      "[208]\tvalidation_0-logloss:0.69957\n",
      "[210]\tvalidation_0-logloss:0.69956\n",
      "[212]\tvalidation_0-logloss:0.69956\n",
      "[214]\tvalidation_0-logloss:0.69966\n",
      "[216]\tvalidation_0-logloss:0.70008\n",
      "[218]\tvalidation_0-logloss:0.70032\n",
      "[220]\tvalidation_0-logloss:0.70036\n",
      "[222]\tvalidation_0-logloss:0.70049\n",
      "[224]\tvalidation_0-logloss:0.70050\n",
      "[226]\tvalidation_0-logloss:0.70068\n",
      "[228]\tvalidation_0-logloss:0.70058\n",
      "[230]\tvalidation_0-logloss:0.70080\n",
      "[232]\tvalidation_0-logloss:0.70065\n",
      "[234]\tvalidation_0-logloss:0.70088\n",
      "[236]\tvalidation_0-logloss:0.70067\n",
      "[238]\tvalidation_0-logloss:0.70066\n",
      "[240]\tvalidation_0-logloss:0.70086\n",
      "[242]\tvalidation_0-logloss:0.70096\n",
      "[244]\tvalidation_0-logloss:0.70107\n",
      "[246]\tvalidation_0-logloss:0.70114\n",
      "[248]\tvalidation_0-logloss:0.70125\n",
      "[250]\tvalidation_0-logloss:0.70136\n",
      "[252]\tvalidation_0-logloss:0.70176\n",
      "[254]\tvalidation_0-logloss:0.70169\n",
      "[256]\tvalidation_0-logloss:0.70143\n",
      "[258]\tvalidation_0-logloss:0.70186\n",
      "[260]\tvalidation_0-logloss:0.70192\n",
      "[262]\tvalidation_0-logloss:0.70196\n",
      "[264]\tvalidation_0-logloss:0.70190\n",
      "[266]\tvalidation_0-logloss:0.70195\n",
      "[268]\tvalidation_0-logloss:0.70217\n",
      "[270]\tvalidation_0-logloss:0.70227\n",
      "[272]\tvalidation_0-logloss:0.70236\n",
      "[274]\tvalidation_0-logloss:0.70258\n",
      "[276]\tvalidation_0-logloss:0.70279\n",
      "[278]\tvalidation_0-logloss:0.70295\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:45:29,177] Trial 47 finished with value: 0.6934031243509128 and parameters: {'eta': 0.06263784871426044, 'gamma': 0.6295134328047203, 'max_depth': 5, 'min_child_weight': 1, 'lambda': 0.19146925967630843, 'alpha': 0.08803567914023872}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:45:33] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69521\n",
      "[2]\tvalidation_0-logloss:0.69518\n",
      "[4]\tvalidation_0-logloss:0.69525\n",
      "[6]\tvalidation_0-logloss:0.69541\n",
      "[8]\tvalidation_0-logloss:0.69556\n",
      "[10]\tvalidation_0-logloss:0.69581\n",
      "[12]\tvalidation_0-logloss:0.69613\n",
      "[14]\tvalidation_0-logloss:0.69621\n",
      "[16]\tvalidation_0-logloss:0.69620\n",
      "[18]\tvalidation_0-logloss:0.69623\n",
      "[20]\tvalidation_0-logloss:0.69621\n",
      "[22]\tvalidation_0-logloss:0.69603\n",
      "[24]\tvalidation_0-logloss:0.69587\n",
      "[26]\tvalidation_0-logloss:0.69605\n",
      "[28]\tvalidation_0-logloss:0.69591\n",
      "[30]\tvalidation_0-logloss:0.69601\n",
      "[32]\tvalidation_0-logloss:0.69594\n",
      "[34]\tvalidation_0-logloss:0.69612\n",
      "[36]\tvalidation_0-logloss:0.69606\n",
      "[38]\tvalidation_0-logloss:0.69610\n",
      "[40]\tvalidation_0-logloss:0.69609\n",
      "[42]\tvalidation_0-logloss:0.69611\n",
      "[44]\tvalidation_0-logloss:0.69600\n",
      "[46]\tvalidation_0-logloss:0.69602\n",
      "[48]\tvalidation_0-logloss:0.69590\n",
      "[50]\tvalidation_0-logloss:0.69589\n",
      "[52]\tvalidation_0-logloss:0.69582\n",
      "[54]\tvalidation_0-logloss:0.69584\n",
      "[56]\tvalidation_0-logloss:0.69584\n",
      "[58]\tvalidation_0-logloss:0.69584\n",
      "[60]\tvalidation_0-logloss:0.69577\n",
      "[62]\tvalidation_0-logloss:0.69579\n",
      "[64]\tvalidation_0-logloss:0.69582\n",
      "[66]\tvalidation_0-logloss:0.69581\n",
      "[68]\tvalidation_0-logloss:0.69576\n",
      "[70]\tvalidation_0-logloss:0.69579\n",
      "[72]\tvalidation_0-logloss:0.69579\n",
      "[74]\tvalidation_0-logloss:0.69577\n",
      "[76]\tvalidation_0-logloss:0.69587\n",
      "[78]\tvalidation_0-logloss:0.69584\n",
      "[80]\tvalidation_0-logloss:0.69595\n",
      "[82]\tvalidation_0-logloss:0.69592\n",
      "[84]\tvalidation_0-logloss:0.69602\n",
      "[86]\tvalidation_0-logloss:0.69604\n",
      "[88]\tvalidation_0-logloss:0.69611\n",
      "[90]\tvalidation_0-logloss:0.69610\n",
      "[92]\tvalidation_0-logloss:0.69600\n",
      "[94]\tvalidation_0-logloss:0.69599\n",
      "[96]\tvalidation_0-logloss:0.69605\n",
      "[98]\tvalidation_0-logloss:0.69604\n",
      "[100]\tvalidation_0-logloss:0.69602\n",
      "[102]\tvalidation_0-logloss:0.69601\n",
      "[104]\tvalidation_0-logloss:0.69614\n",
      "[106]\tvalidation_0-logloss:0.69620\n",
      "[108]\tvalidation_0-logloss:0.69616\n",
      "[110]\tvalidation_0-logloss:0.69624\n",
      "[112]\tvalidation_0-logloss:0.69636\n",
      "[114]\tvalidation_0-logloss:0.69638\n",
      "[116]\tvalidation_0-logloss:0.69638\n",
      "[118]\tvalidation_0-logloss:0.69638\n",
      "[120]\tvalidation_0-logloss:0.69644\n",
      "[122]\tvalidation_0-logloss:0.69648\n",
      "[124]\tvalidation_0-logloss:0.69653\n",
      "[126]\tvalidation_0-logloss:0.69663\n",
      "[128]\tvalidation_0-logloss:0.69664\n",
      "[130]\tvalidation_0-logloss:0.69666\n",
      "[132]\tvalidation_0-logloss:0.69661\n",
      "[134]\tvalidation_0-logloss:0.69666\n",
      "[136]\tvalidation_0-logloss:0.69674\n",
      "[138]\tvalidation_0-logloss:0.69680\n",
      "[140]\tvalidation_0-logloss:0.69679\n",
      "[142]\tvalidation_0-logloss:0.69685\n",
      "[144]\tvalidation_0-logloss:0.69694\n",
      "[146]\tvalidation_0-logloss:0.69696\n",
      "[148]\tvalidation_0-logloss:0.69701\n",
      "[150]\tvalidation_0-logloss:0.69703\n",
      "[152]\tvalidation_0-logloss:0.69708\n",
      "[154]\tvalidation_0-logloss:0.69706\n",
      "[156]\tvalidation_0-logloss:0.69710\n",
      "[158]\tvalidation_0-logloss:0.69710\n",
      "[160]\tvalidation_0-logloss:0.69708\n",
      "[162]\tvalidation_0-logloss:0.69703\n",
      "[164]\tvalidation_0-logloss:0.69706\n",
      "[166]\tvalidation_0-logloss:0.69709\n",
      "[168]\tvalidation_0-logloss:0.69714\n",
      "[170]\tvalidation_0-logloss:0.69710\n",
      "[172]\tvalidation_0-logloss:0.69699\n",
      "[174]\tvalidation_0-logloss:0.69699\n",
      "[176]\tvalidation_0-logloss:0.69711\n",
      "[178]\tvalidation_0-logloss:0.69707\n",
      "[180]\tvalidation_0-logloss:0.69708\n",
      "[182]\tvalidation_0-logloss:0.69699\n",
      "[184]\tvalidation_0-logloss:0.69701\n",
      "[186]\tvalidation_0-logloss:0.69701\n",
      "[188]\tvalidation_0-logloss:0.69711\n",
      "[190]\tvalidation_0-logloss:0.69707\n",
      "[192]\tvalidation_0-logloss:0.69705\n",
      "[194]\tvalidation_0-logloss:0.69717\n",
      "[196]\tvalidation_0-logloss:0.69712\n",
      "[198]\tvalidation_0-logloss:0.69707\n",
      "[200]\tvalidation_0-logloss:0.69709\n",
      "[202]\tvalidation_0-logloss:0.69713\n",
      "[204]\tvalidation_0-logloss:0.69715\n",
      "[206]\tvalidation_0-logloss:0.69714\n",
      "[208]\tvalidation_0-logloss:0.69713\n",
      "[210]\tvalidation_0-logloss:0.69716\n",
      "[212]\tvalidation_0-logloss:0.69733\n",
      "[214]\tvalidation_0-logloss:0.69747\n",
      "[216]\tvalidation_0-logloss:0.69747\n",
      "[218]\tvalidation_0-logloss:0.69749\n",
      "[220]\tvalidation_0-logloss:0.69747\n",
      "[222]\tvalidation_0-logloss:0.69759\n",
      "[224]\tvalidation_0-logloss:0.69756\n",
      "[226]\tvalidation_0-logloss:0.69770\n",
      "[228]\tvalidation_0-logloss:0.69767\n",
      "[230]\tvalidation_0-logloss:0.69777\n",
      "[232]\tvalidation_0-logloss:0.69780\n",
      "[234]\tvalidation_0-logloss:0.69790\n",
      "[236]\tvalidation_0-logloss:0.69787\n",
      "[238]\tvalidation_0-logloss:0.69798\n",
      "[240]\tvalidation_0-logloss:0.69796\n",
      "[242]\tvalidation_0-logloss:0.69797\n",
      "[244]\tvalidation_0-logloss:0.69799\n",
      "[246]\tvalidation_0-logloss:0.69809\n",
      "[248]\tvalidation_0-logloss:0.69824\n",
      "[250]\tvalidation_0-logloss:0.69828\n",
      "[251]\tvalidation_0-logloss:0.69827\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:47:02,646] Trial 48 finished with value: 0.6951765509438353 and parameters: {'eta': 0.016011717906149376, 'gamma': 0.7716061616917724, 'max_depth': 7, 'min_child_weight': 0, 'lambda': 0.3071278255637211, 'alpha': 0.07369786264772399}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:47:07] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69542\n",
      "[2]\tvalidation_0-logloss:0.69645\n",
      "[4]\tvalidation_0-logloss:0.69760\n",
      "[6]\tvalidation_0-logloss:0.69760\n",
      "[8]\tvalidation_0-logloss:0.69803\n",
      "[10]\tvalidation_0-logloss:0.69823\n",
      "[12]\tvalidation_0-logloss:0.69819\n",
      "[14]\tvalidation_0-logloss:0.69862\n",
      "[16]\tvalidation_0-logloss:0.69857\n",
      "[18]\tvalidation_0-logloss:0.69897\n",
      "[20]\tvalidation_0-logloss:0.69914\n",
      "[22]\tvalidation_0-logloss:0.69889\n",
      "[24]\tvalidation_0-logloss:0.69904\n",
      "[26]\tvalidation_0-logloss:0.69891\n",
      "[28]\tvalidation_0-logloss:0.69937\n",
      "[30]\tvalidation_0-logloss:0.69967\n",
      "[32]\tvalidation_0-logloss:0.69977\n",
      "[34]\tvalidation_0-logloss:0.69991\n",
      "[36]\tvalidation_0-logloss:0.70007\n",
      "[38]\tvalidation_0-logloss:0.70052\n",
      "[40]\tvalidation_0-logloss:0.70067\n",
      "[42]\tvalidation_0-logloss:0.70086\n",
      "[44]\tvalidation_0-logloss:0.70125\n",
      "[46]\tvalidation_0-logloss:0.70162\n",
      "[48]\tvalidation_0-logloss:0.70216\n",
      "[50]\tvalidation_0-logloss:0.70260\n",
      "[52]\tvalidation_0-logloss:0.70317\n",
      "[54]\tvalidation_0-logloss:0.70354\n",
      "[56]\tvalidation_0-logloss:0.70410\n",
      "[58]\tvalidation_0-logloss:0.70460\n",
      "[60]\tvalidation_0-logloss:0.70446\n",
      "[62]\tvalidation_0-logloss:0.70479\n",
      "[64]\tvalidation_0-logloss:0.70476\n",
      "[66]\tvalidation_0-logloss:0.70558\n",
      "[68]\tvalidation_0-logloss:0.70561\n",
      "[70]\tvalidation_0-logloss:0.70562\n",
      "[72]\tvalidation_0-logloss:0.70575\n",
      "[74]\tvalidation_0-logloss:0.70630\n",
      "[76]\tvalidation_0-logloss:0.70626\n",
      "[78]\tvalidation_0-logloss:0.70678\n",
      "[80]\tvalidation_0-logloss:0.70691\n",
      "[82]\tvalidation_0-logloss:0.70716\n",
      "[84]\tvalidation_0-logloss:0.70737\n",
      "[86]\tvalidation_0-logloss:0.70746\n",
      "[88]\tvalidation_0-logloss:0.70778\n",
      "[90]\tvalidation_0-logloss:0.70807\n",
      "[92]\tvalidation_0-logloss:0.70811\n",
      "[94]\tvalidation_0-logloss:0.70843\n",
      "[96]\tvalidation_0-logloss:0.70876\n",
      "[98]\tvalidation_0-logloss:0.70894\n",
      "[100]\tvalidation_0-logloss:0.70925\n",
      "[102]\tvalidation_0-logloss:0.70964\n",
      "[104]\tvalidation_0-logloss:0.70980\n",
      "[106]\tvalidation_0-logloss:0.71031\n",
      "[108]\tvalidation_0-logloss:0.71040\n",
      "[110]\tvalidation_0-logloss:0.71050\n",
      "[112]\tvalidation_0-logloss:0.71056\n",
      "[114]\tvalidation_0-logloss:0.71082\n",
      "[116]\tvalidation_0-logloss:0.71123\n",
      "[118]\tvalidation_0-logloss:0.71151\n",
      "[120]\tvalidation_0-logloss:0.71205\n",
      "[122]\tvalidation_0-logloss:0.71222\n",
      "[124]\tvalidation_0-logloss:0.71257\n",
      "[126]\tvalidation_0-logloss:0.71281\n",
      "[128]\tvalidation_0-logloss:0.71315\n",
      "[130]\tvalidation_0-logloss:0.71326\n",
      "[132]\tvalidation_0-logloss:0.71369\n",
      "[134]\tvalidation_0-logloss:0.71387\n",
      "[136]\tvalidation_0-logloss:0.71433\n",
      "[138]\tvalidation_0-logloss:0.71428\n",
      "[140]\tvalidation_0-logloss:0.71462\n",
      "[142]\tvalidation_0-logloss:0.71460\n",
      "[144]\tvalidation_0-logloss:0.71462\n",
      "[146]\tvalidation_0-logloss:0.71480\n",
      "[148]\tvalidation_0-logloss:0.71485\n",
      "[150]\tvalidation_0-logloss:0.71494\n",
      "[152]\tvalidation_0-logloss:0.71478\n",
      "[154]\tvalidation_0-logloss:0.71505\n",
      "[156]\tvalidation_0-logloss:0.71466\n",
      "[158]\tvalidation_0-logloss:0.71458\n",
      "[160]\tvalidation_0-logloss:0.71506\n",
      "[162]\tvalidation_0-logloss:0.71524\n",
      "[164]\tvalidation_0-logloss:0.71538\n",
      "[166]\tvalidation_0-logloss:0.71549\n",
      "[168]\tvalidation_0-logloss:0.71555\n",
      "[170]\tvalidation_0-logloss:0.71550\n",
      "[172]\tvalidation_0-logloss:0.71574\n",
      "[174]\tvalidation_0-logloss:0.71587\n",
      "[176]\tvalidation_0-logloss:0.71614\n",
      "[178]\tvalidation_0-logloss:0.71665\n",
      "[180]\tvalidation_0-logloss:0.71736\n",
      "[182]\tvalidation_0-logloss:0.71756\n",
      "[184]\tvalidation_0-logloss:0.71748\n",
      "[186]\tvalidation_0-logloss:0.71782\n",
      "[188]\tvalidation_0-logloss:0.71781\n",
      "[190]\tvalidation_0-logloss:0.71839\n",
      "[192]\tvalidation_0-logloss:0.71892\n",
      "[194]\tvalidation_0-logloss:0.71876\n",
      "[196]\tvalidation_0-logloss:0.71911\n",
      "[198]\tvalidation_0-logloss:0.71923\n",
      "[200]\tvalidation_0-logloss:0.71923\n",
      "[202]\tvalidation_0-logloss:0.71954\n",
      "[204]\tvalidation_0-logloss:0.71962\n",
      "[206]\tvalidation_0-logloss:0.72006\n",
      "[208]\tvalidation_0-logloss:0.72055\n",
      "[210]\tvalidation_0-logloss:0.72084\n",
      "[212]\tvalidation_0-logloss:0.72125\n",
      "[214]\tvalidation_0-logloss:0.72130\n",
      "[216]\tvalidation_0-logloss:0.72185\n",
      "[218]\tvalidation_0-logloss:0.72178\n",
      "[220]\tvalidation_0-logloss:0.72203\n",
      "[222]\tvalidation_0-logloss:0.72242\n",
      "[224]\tvalidation_0-logloss:0.72313\n",
      "[226]\tvalidation_0-logloss:0.72333\n",
      "[228]\tvalidation_0-logloss:0.72371\n",
      "[230]\tvalidation_0-logloss:0.72403\n",
      "[232]\tvalidation_0-logloss:0.72435\n",
      "[234]\tvalidation_0-logloss:0.72462\n",
      "[236]\tvalidation_0-logloss:0.72511\n",
      "[238]\tvalidation_0-logloss:0.72529\n",
      "[240]\tvalidation_0-logloss:0.72533\n",
      "[242]\tvalidation_0-logloss:0.72579\n",
      "[244]\tvalidation_0-logloss:0.72646\n",
      "[246]\tvalidation_0-logloss:0.72640\n",
      "[248]\tvalidation_0-logloss:0.72666\n",
      "[249]\tvalidation_0-logloss:0.72666\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:48:44,301] Trial 49 finished with value: 0.6954248933622322 and parameters: {'eta': 0.061130238269739165, 'gamma': 0.614953656152124, 'max_depth': 9, 'min_child_weight': 10, 'lambda': 0.3572164410508775, 'alpha': 0.20788301186060532}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:48:49] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69528\n",
      "[2]\tvalidation_0-logloss:0.69555\n",
      "[4]\tvalidation_0-logloss:0.69543\n",
      "[6]\tvalidation_0-logloss:0.69560\n",
      "[8]\tvalidation_0-logloss:0.69591\n",
      "[10]\tvalidation_0-logloss:0.69575\n",
      "[12]\tvalidation_0-logloss:0.69552\n",
      "[14]\tvalidation_0-logloss:0.69540\n",
      "[16]\tvalidation_0-logloss:0.69542\n",
      "[18]\tvalidation_0-logloss:0.69543\n",
      "[20]\tvalidation_0-logloss:0.69541\n",
      "[22]\tvalidation_0-logloss:0.69533\n",
      "[24]\tvalidation_0-logloss:0.69555\n",
      "[26]\tvalidation_0-logloss:0.69556\n",
      "[28]\tvalidation_0-logloss:0.69547\n",
      "[30]\tvalidation_0-logloss:0.69531\n",
      "[32]\tvalidation_0-logloss:0.69511\n",
      "[34]\tvalidation_0-logloss:0.69503\n",
      "[36]\tvalidation_0-logloss:0.69501\n",
      "[38]\tvalidation_0-logloss:0.69493\n",
      "[40]\tvalidation_0-logloss:0.69487\n",
      "[42]\tvalidation_0-logloss:0.69476\n",
      "[44]\tvalidation_0-logloss:0.69503\n",
      "[46]\tvalidation_0-logloss:0.69509\n",
      "[48]\tvalidation_0-logloss:0.69531\n",
      "[50]\tvalidation_0-logloss:0.69515\n",
      "[52]\tvalidation_0-logloss:0.69516\n",
      "[54]\tvalidation_0-logloss:0.69534\n",
      "[56]\tvalidation_0-logloss:0.69509\n",
      "[58]\tvalidation_0-logloss:0.69455\n",
      "[60]\tvalidation_0-logloss:0.69437\n",
      "[62]\tvalidation_0-logloss:0.69441\n",
      "[64]\tvalidation_0-logloss:0.69431\n",
      "[66]\tvalidation_0-logloss:0.69436\n",
      "[68]\tvalidation_0-logloss:0.69428\n",
      "[70]\tvalidation_0-logloss:0.69431\n",
      "[72]\tvalidation_0-logloss:0.69439\n",
      "[74]\tvalidation_0-logloss:0.69439\n",
      "[76]\tvalidation_0-logloss:0.69434\n",
      "[78]\tvalidation_0-logloss:0.69429\n",
      "[80]\tvalidation_0-logloss:0.69434\n",
      "[82]\tvalidation_0-logloss:0.69412\n",
      "[84]\tvalidation_0-logloss:0.69416\n",
      "[86]\tvalidation_0-logloss:0.69417\n",
      "[88]\tvalidation_0-logloss:0.69416\n",
      "[90]\tvalidation_0-logloss:0.69415\n",
      "[92]\tvalidation_0-logloss:0.69420\n",
      "[94]\tvalidation_0-logloss:0.69422\n",
      "[96]\tvalidation_0-logloss:0.69427\n",
      "[98]\tvalidation_0-logloss:0.69422\n",
      "[100]\tvalidation_0-logloss:0.69436\n",
      "[102]\tvalidation_0-logloss:0.69439\n",
      "[104]\tvalidation_0-logloss:0.69446\n",
      "[106]\tvalidation_0-logloss:0.69456\n",
      "[108]\tvalidation_0-logloss:0.69459\n",
      "[110]\tvalidation_0-logloss:0.69461\n",
      "[112]\tvalidation_0-logloss:0.69453\n",
      "[114]\tvalidation_0-logloss:0.69460\n",
      "[116]\tvalidation_0-logloss:0.69462\n",
      "[118]\tvalidation_0-logloss:0.69463\n",
      "[120]\tvalidation_0-logloss:0.69466\n",
      "[122]\tvalidation_0-logloss:0.69453\n",
      "[124]\tvalidation_0-logloss:0.69459\n",
      "[126]\tvalidation_0-logloss:0.69524\n",
      "[128]\tvalidation_0-logloss:0.69521\n",
      "[130]\tvalidation_0-logloss:0.69518\n",
      "[132]\tvalidation_0-logloss:0.69501\n",
      "[134]\tvalidation_0-logloss:0.69512\n",
      "[136]\tvalidation_0-logloss:0.69510\n",
      "[138]\tvalidation_0-logloss:0.69512\n",
      "[140]\tvalidation_0-logloss:0.69512\n",
      "[142]\tvalidation_0-logloss:0.69508\n",
      "[144]\tvalidation_0-logloss:0.69513\n",
      "[146]\tvalidation_0-logloss:0.69521\n",
      "[148]\tvalidation_0-logloss:0.69523\n",
      "[150]\tvalidation_0-logloss:0.69519\n",
      "[152]\tvalidation_0-logloss:0.69516\n",
      "[154]\tvalidation_0-logloss:0.69522\n",
      "[156]\tvalidation_0-logloss:0.69545\n",
      "[158]\tvalidation_0-logloss:0.69531\n",
      "[160]\tvalidation_0-logloss:0.69532\n",
      "[162]\tvalidation_0-logloss:0.69540\n",
      "[164]\tvalidation_0-logloss:0.69576\n",
      "[166]\tvalidation_0-logloss:0.69573\n",
      "[168]\tvalidation_0-logloss:0.69579\n",
      "[170]\tvalidation_0-logloss:0.69581\n",
      "[172]\tvalidation_0-logloss:0.69588\n",
      "[174]\tvalidation_0-logloss:0.69586\n",
      "[176]\tvalidation_0-logloss:0.69586\n",
      "[178]\tvalidation_0-logloss:0.69587\n",
      "[180]\tvalidation_0-logloss:0.69586\n",
      "[182]\tvalidation_0-logloss:0.69602\n",
      "[184]\tvalidation_0-logloss:0.69618\n",
      "[186]\tvalidation_0-logloss:0.69619\n",
      "[188]\tvalidation_0-logloss:0.69631\n",
      "[190]\tvalidation_0-logloss:0.69637\n",
      "[192]\tvalidation_0-logloss:0.69638\n",
      "[194]\tvalidation_0-logloss:0.69642\n",
      "[196]\tvalidation_0-logloss:0.69637\n",
      "[198]\tvalidation_0-logloss:0.69624\n",
      "[200]\tvalidation_0-logloss:0.69624\n",
      "[202]\tvalidation_0-logloss:0.69621\n",
      "[204]\tvalidation_0-logloss:0.69616\n",
      "[206]\tvalidation_0-logloss:0.69616\n",
      "[208]\tvalidation_0-logloss:0.69624\n",
      "[210]\tvalidation_0-logloss:0.69657\n",
      "[212]\tvalidation_0-logloss:0.69670\n",
      "[214]\tvalidation_0-logloss:0.69673\n",
      "[216]\tvalidation_0-logloss:0.69669\n",
      "[218]\tvalidation_0-logloss:0.69658\n",
      "[220]\tvalidation_0-logloss:0.69672\n",
      "[222]\tvalidation_0-logloss:0.69685\n",
      "[224]\tvalidation_0-logloss:0.69703\n",
      "[226]\tvalidation_0-logloss:0.69701\n",
      "[228]\tvalidation_0-logloss:0.69705\n",
      "[230]\tvalidation_0-logloss:0.69715\n",
      "[232]\tvalidation_0-logloss:0.69711\n",
      "[234]\tvalidation_0-logloss:0.69737\n",
      "[236]\tvalidation_0-logloss:0.69735\n",
      "[238]\tvalidation_0-logloss:0.69747\n",
      "[240]\tvalidation_0-logloss:0.69753\n",
      "[242]\tvalidation_0-logloss:0.69749\n",
      "[244]\tvalidation_0-logloss:0.69740\n",
      "[246]\tvalidation_0-logloss:0.69735\n",
      "[248]\tvalidation_0-logloss:0.69746\n",
      "[250]\tvalidation_0-logloss:0.69778\n",
      "[252]\tvalidation_0-logloss:0.69781\n",
      "[254]\tvalidation_0-logloss:0.69778\n",
      "[256]\tvalidation_0-logloss:0.69784\n",
      "[258]\tvalidation_0-logloss:0.69788\n",
      "[260]\tvalidation_0-logloss:0.69774\n",
      "[262]\tvalidation_0-logloss:0.69777\n",
      "[264]\tvalidation_0-logloss:0.69775\n",
      "[266]\tvalidation_0-logloss:0.69787\n",
      "[268]\tvalidation_0-logloss:0.69794\n",
      "[270]\tvalidation_0-logloss:0.69781\n",
      "[272]\tvalidation_0-logloss:0.69786\n",
      "[274]\tvalidation_0-logloss:0.69781\n",
      "[276]\tvalidation_0-logloss:0.69794\n",
      "[278]\tvalidation_0-logloss:0.69781\n",
      "[280]\tvalidation_0-logloss:0.69784\n",
      "[282]\tvalidation_0-logloss:0.69790\n",
      "[284]\tvalidation_0-logloss:0.69799\n",
      "[286]\tvalidation_0-logloss:0.69806\n",
      "[288]\tvalidation_0-logloss:0.69800\n",
      "[290]\tvalidation_0-logloss:0.69802\n",
      "[292]\tvalidation_0-logloss:0.69800\n",
      "[294]\tvalidation_0-logloss:0.69803\n",
      "[296]\tvalidation_0-logloss:0.69818\n",
      "[298]\tvalidation_0-logloss:0.69817\n",
      "[300]\tvalidation_0-logloss:0.69819\n",
      "[302]\tvalidation_0-logloss:0.69821\n",
      "[304]\tvalidation_0-logloss:0.69814\n",
      "[306]\tvalidation_0-logloss:0.69835\n",
      "[308]\tvalidation_0-logloss:0.69840\n",
      "[310]\tvalidation_0-logloss:0.69858\n",
      "[312]\tvalidation_0-logloss:0.69863\n",
      "[314]\tvalidation_0-logloss:0.69860\n",
      "[316]\tvalidation_0-logloss:0.69886\n",
      "[318]\tvalidation_0-logloss:0.69886\n",
      "[320]\tvalidation_0-logloss:0.69887\n",
      "[322]\tvalidation_0-logloss:0.69900\n",
      "[324]\tvalidation_0-logloss:0.69893\n",
      "[326]\tvalidation_0-logloss:0.69894\n",
      "[328]\tvalidation_0-logloss:0.69872\n",
      "[330]\tvalidation_0-logloss:0.69883\n",
      "[331]\tvalidation_0-logloss:0.69896\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:50:22,260] Trial 50 finished with value: 0.6941171392291565 and parameters: {'eta': 0.04828494803244068, 'gamma': 0.8286003315171344, 'max_depth': 4, 'min_child_weight': 1, 'lambda': 0.12079548513548577, 'alpha': 0.5138042269012347}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:50:26] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69543\n",
      "[2]\tvalidation_0-logloss:0.69533\n",
      "[4]\tvalidation_0-logloss:0.69509\n",
      "[6]\tvalidation_0-logloss:0.69464\n",
      "[8]\tvalidation_0-logloss:0.69489\n",
      "[10]\tvalidation_0-logloss:0.69520\n",
      "[12]\tvalidation_0-logloss:0.69525\n",
      "[14]\tvalidation_0-logloss:0.69516\n",
      "[16]\tvalidation_0-logloss:0.69544\n",
      "[18]\tvalidation_0-logloss:0.69544\n",
      "[20]\tvalidation_0-logloss:0.69472\n",
      "[22]\tvalidation_0-logloss:0.69458\n",
      "[24]\tvalidation_0-logloss:0.69463\n",
      "[26]\tvalidation_0-logloss:0.69459\n",
      "[28]\tvalidation_0-logloss:0.69502\n",
      "[30]\tvalidation_0-logloss:0.69529\n",
      "[32]\tvalidation_0-logloss:0.69534\n",
      "[34]\tvalidation_0-logloss:0.69542\n",
      "[36]\tvalidation_0-logloss:0.69544\n",
      "[38]\tvalidation_0-logloss:0.69546\n",
      "[40]\tvalidation_0-logloss:0.69540\n",
      "[42]\tvalidation_0-logloss:0.69541\n",
      "[44]\tvalidation_0-logloss:0.69519\n",
      "[46]\tvalidation_0-logloss:0.69524\n",
      "[48]\tvalidation_0-logloss:0.69523\n",
      "[50]\tvalidation_0-logloss:0.69496\n",
      "[52]\tvalidation_0-logloss:0.69488\n",
      "[54]\tvalidation_0-logloss:0.69468\n",
      "[56]\tvalidation_0-logloss:0.69466\n",
      "[58]\tvalidation_0-logloss:0.69472\n",
      "[60]\tvalidation_0-logloss:0.69480\n",
      "[62]\tvalidation_0-logloss:0.69493\n",
      "[64]\tvalidation_0-logloss:0.69500\n",
      "[66]\tvalidation_0-logloss:0.69512\n",
      "[68]\tvalidation_0-logloss:0.69583\n",
      "[70]\tvalidation_0-logloss:0.69589\n",
      "[72]\tvalidation_0-logloss:0.69593\n",
      "[74]\tvalidation_0-logloss:0.69621\n",
      "[76]\tvalidation_0-logloss:0.69624\n",
      "[78]\tvalidation_0-logloss:0.69631\n",
      "[80]\tvalidation_0-logloss:0.69696\n",
      "[82]\tvalidation_0-logloss:0.69714\n",
      "[84]\tvalidation_0-logloss:0.69706\n",
      "[86]\tvalidation_0-logloss:0.69708\n",
      "[88]\tvalidation_0-logloss:0.69693\n",
      "[90]\tvalidation_0-logloss:0.69708\n",
      "[92]\tvalidation_0-logloss:0.69762\n",
      "[94]\tvalidation_0-logloss:0.69782\n",
      "[96]\tvalidation_0-logloss:0.69786\n",
      "[98]\tvalidation_0-logloss:0.69843\n",
      "[100]\tvalidation_0-logloss:0.69901\n",
      "[102]\tvalidation_0-logloss:0.69912\n",
      "[104]\tvalidation_0-logloss:0.69931\n",
      "[106]\tvalidation_0-logloss:0.69936\n",
      "[108]\tvalidation_0-logloss:0.69966\n",
      "[110]\tvalidation_0-logloss:0.69964\n",
      "[112]\tvalidation_0-logloss:0.70011\n",
      "[114]\tvalidation_0-logloss:0.70034\n",
      "[116]\tvalidation_0-logloss:0.70024\n",
      "[118]\tvalidation_0-logloss:0.70032\n",
      "[120]\tvalidation_0-logloss:0.70004\n",
      "[122]\tvalidation_0-logloss:0.70018\n",
      "[124]\tvalidation_0-logloss:0.70044\n",
      "[126]\tvalidation_0-logloss:0.70075\n",
      "[128]\tvalidation_0-logloss:0.70089\n",
      "[130]\tvalidation_0-logloss:0.70096\n",
      "[132]\tvalidation_0-logloss:0.70141\n",
      "[134]\tvalidation_0-logloss:0.70154\n",
      "[136]\tvalidation_0-logloss:0.70183\n",
      "[138]\tvalidation_0-logloss:0.70209\n",
      "[140]\tvalidation_0-logloss:0.70227\n",
      "[142]\tvalidation_0-logloss:0.70236\n",
      "[144]\tvalidation_0-logloss:0.70266\n",
      "[146]\tvalidation_0-logloss:0.70290\n",
      "[148]\tvalidation_0-logloss:0.70344\n",
      "[150]\tvalidation_0-logloss:0.70345\n",
      "[152]\tvalidation_0-logloss:0.70380\n",
      "[154]\tvalidation_0-logloss:0.70400\n",
      "[156]\tvalidation_0-logloss:0.70410\n",
      "[158]\tvalidation_0-logloss:0.70435\n",
      "[160]\tvalidation_0-logloss:0.70449\n",
      "[162]\tvalidation_0-logloss:0.70447\n",
      "[164]\tvalidation_0-logloss:0.70450\n",
      "[166]\tvalidation_0-logloss:0.70451\n",
      "[168]\tvalidation_0-logloss:0.70460\n",
      "[170]\tvalidation_0-logloss:0.70468\n",
      "[172]\tvalidation_0-logloss:0.70485\n",
      "[174]\tvalidation_0-logloss:0.70501\n",
      "[176]\tvalidation_0-logloss:0.70515\n",
      "[178]\tvalidation_0-logloss:0.70506\n",
      "[180]\tvalidation_0-logloss:0.70524\n",
      "[182]\tvalidation_0-logloss:0.70517\n",
      "[184]\tvalidation_0-logloss:0.70509\n",
      "[186]\tvalidation_0-logloss:0.70507\n",
      "[188]\tvalidation_0-logloss:0.70511\n",
      "[190]\tvalidation_0-logloss:0.70520\n",
      "[192]\tvalidation_0-logloss:0.70534\n",
      "[194]\tvalidation_0-logloss:0.70543\n",
      "[196]\tvalidation_0-logloss:0.70557\n",
      "[198]\tvalidation_0-logloss:0.70557\n",
      "[200]\tvalidation_0-logloss:0.70607\n",
      "[202]\tvalidation_0-logloss:0.70609\n",
      "[204]\tvalidation_0-logloss:0.70659\n",
      "[206]\tvalidation_0-logloss:0.70645\n",
      "[208]\tvalidation_0-logloss:0.70667\n",
      "[210]\tvalidation_0-logloss:0.70679\n",
      "[212]\tvalidation_0-logloss:0.70685\n",
      "[214]\tvalidation_0-logloss:0.70700\n",
      "[216]\tvalidation_0-logloss:0.70730\n",
      "[218]\tvalidation_0-logloss:0.70763\n",
      "[220]\tvalidation_0-logloss:0.70777\n",
      "[222]\tvalidation_0-logloss:0.70768\n",
      "[224]\tvalidation_0-logloss:0.70808\n",
      "[226]\tvalidation_0-logloss:0.70814\n",
      "[228]\tvalidation_0-logloss:0.70847\n",
      "[230]\tvalidation_0-logloss:0.70854\n",
      "[232]\tvalidation_0-logloss:0.70858\n",
      "[234]\tvalidation_0-logloss:0.70899\n",
      "[236]\tvalidation_0-logloss:0.70913\n",
      "[238]\tvalidation_0-logloss:0.70930\n",
      "[240]\tvalidation_0-logloss:0.70970\n",
      "[242]\tvalidation_0-logloss:0.70985\n",
      "[244]\tvalidation_0-logloss:0.70965\n",
      "[246]\tvalidation_0-logloss:0.70975\n",
      "[248]\tvalidation_0-logloss:0.70988\n",
      "[250]\tvalidation_0-logloss:0.71047\n",
      "[252]\tvalidation_0-logloss:0.71049\n",
      "[254]\tvalidation_0-logloss:0.71032\n",
      "[256]\tvalidation_0-logloss:0.71043\n",
      "[258]\tvalidation_0-logloss:0.71034\n",
      "[260]\tvalidation_0-logloss:0.71059\n",
      "[262]\tvalidation_0-logloss:0.71102\n",
      "[264]\tvalidation_0-logloss:0.71100\n",
      "[266]\tvalidation_0-logloss:0.71102\n",
      "[268]\tvalidation_0-logloss:0.71104\n",
      "[270]\tvalidation_0-logloss:0.71117\n",
      "[272]\tvalidation_0-logloss:0.71119\n",
      "[274]\tvalidation_0-logloss:0.71130\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:51:46,980] Trial 51 finished with value: 0.6945594340752594 and parameters: {'eta': 0.07331734196896518, 'gamma': 0.5557404958935904, 'max_depth': 5, 'min_child_weight': 1, 'lambda': 0.192004492975884, 'alpha': 0.11159308590652917}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:51:51] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69559\n",
      "[2]\tvalidation_0-logloss:0.69590\n",
      "[4]\tvalidation_0-logloss:0.69521\n",
      "[6]\tvalidation_0-logloss:0.69487\n",
      "[8]\tvalidation_0-logloss:0.69543\n",
      "[10]\tvalidation_0-logloss:0.69601\n",
      "[12]\tvalidation_0-logloss:0.69568\n",
      "[14]\tvalidation_0-logloss:0.69584\n",
      "[16]\tvalidation_0-logloss:0.69570\n",
      "[18]\tvalidation_0-logloss:0.69606\n",
      "[20]\tvalidation_0-logloss:0.69581\n",
      "[22]\tvalidation_0-logloss:0.69616\n",
      "[24]\tvalidation_0-logloss:0.69642\n",
      "[26]\tvalidation_0-logloss:0.69633\n",
      "[28]\tvalidation_0-logloss:0.69647\n",
      "[30]\tvalidation_0-logloss:0.69505\n",
      "[32]\tvalidation_0-logloss:0.69533\n",
      "[34]\tvalidation_0-logloss:0.69590\n",
      "[36]\tvalidation_0-logloss:0.69646\n",
      "[38]\tvalidation_0-logloss:0.69639\n",
      "[40]\tvalidation_0-logloss:0.69635\n",
      "[42]\tvalidation_0-logloss:0.69643\n",
      "[44]\tvalidation_0-logloss:0.69653\n",
      "[46]\tvalidation_0-logloss:0.69663\n",
      "[48]\tvalidation_0-logloss:0.69733\n",
      "[50]\tvalidation_0-logloss:0.69730\n",
      "[52]\tvalidation_0-logloss:0.69726\n",
      "[54]\tvalidation_0-logloss:0.69738\n",
      "[56]\tvalidation_0-logloss:0.69766\n",
      "[58]\tvalidation_0-logloss:0.69765\n",
      "[60]\tvalidation_0-logloss:0.69809\n",
      "[62]\tvalidation_0-logloss:0.69798\n",
      "[64]\tvalidation_0-logloss:0.69765\n",
      "[66]\tvalidation_0-logloss:0.69813\n",
      "[68]\tvalidation_0-logloss:0.69865\n",
      "[70]\tvalidation_0-logloss:0.69858\n",
      "[72]\tvalidation_0-logloss:0.69846\n",
      "[74]\tvalidation_0-logloss:0.69887\n",
      "[76]\tvalidation_0-logloss:0.69884\n",
      "[78]\tvalidation_0-logloss:0.69896\n",
      "[80]\tvalidation_0-logloss:0.69908\n",
      "[82]\tvalidation_0-logloss:0.69917\n",
      "[84]\tvalidation_0-logloss:0.69896\n",
      "[86]\tvalidation_0-logloss:0.69964\n",
      "[88]\tvalidation_0-logloss:0.69950\n",
      "[90]\tvalidation_0-logloss:0.69947\n",
      "[92]\tvalidation_0-logloss:0.69975\n",
      "[94]\tvalidation_0-logloss:0.69999\n",
      "[96]\tvalidation_0-logloss:0.69965\n",
      "[98]\tvalidation_0-logloss:0.69966\n",
      "[100]\tvalidation_0-logloss:0.69933\n",
      "[102]\tvalidation_0-logloss:0.70019\n",
      "[104]\tvalidation_0-logloss:0.70021\n",
      "[106]\tvalidation_0-logloss:0.70036\n",
      "[108]\tvalidation_0-logloss:0.70120\n",
      "[110]\tvalidation_0-logloss:0.70172\n",
      "[112]\tvalidation_0-logloss:0.70233\n",
      "[114]\tvalidation_0-logloss:0.70289\n",
      "[116]\tvalidation_0-logloss:0.70303\n",
      "[118]\tvalidation_0-logloss:0.70300\n",
      "[120]\tvalidation_0-logloss:0.70306\n",
      "[122]\tvalidation_0-logloss:0.70333\n",
      "[124]\tvalidation_0-logloss:0.70364\n",
      "[126]\tvalidation_0-logloss:0.70410\n",
      "[128]\tvalidation_0-logloss:0.70423\n",
      "[130]\tvalidation_0-logloss:0.70490\n",
      "[132]\tvalidation_0-logloss:0.70480\n",
      "[134]\tvalidation_0-logloss:0.70505\n",
      "[136]\tvalidation_0-logloss:0.70527\n",
      "[138]\tvalidation_0-logloss:0.70557\n",
      "[140]\tvalidation_0-logloss:0.70547\n",
      "[142]\tvalidation_0-logloss:0.70588\n",
      "[144]\tvalidation_0-logloss:0.70586\n",
      "[146]\tvalidation_0-logloss:0.70623\n",
      "[148]\tvalidation_0-logloss:0.70662\n",
      "[150]\tvalidation_0-logloss:0.70686\n",
      "[152]\tvalidation_0-logloss:0.70712\n",
      "[154]\tvalidation_0-logloss:0.70752\n",
      "[156]\tvalidation_0-logloss:0.70759\n",
      "[158]\tvalidation_0-logloss:0.70793\n",
      "[160]\tvalidation_0-logloss:0.70831\n",
      "[162]\tvalidation_0-logloss:0.70826\n",
      "[164]\tvalidation_0-logloss:0.70811\n",
      "[166]\tvalidation_0-logloss:0.70832\n",
      "[168]\tvalidation_0-logloss:0.70813\n",
      "[170]\tvalidation_0-logloss:0.70829\n",
      "[172]\tvalidation_0-logloss:0.70837\n",
      "[174]\tvalidation_0-logloss:0.70913\n",
      "[176]\tvalidation_0-logloss:0.70917\n",
      "[178]\tvalidation_0-logloss:0.70927\n",
      "[180]\tvalidation_0-logloss:0.70947\n",
      "[182]\tvalidation_0-logloss:0.70972\n",
      "[184]\tvalidation_0-logloss:0.70993\n",
      "[186]\tvalidation_0-logloss:0.71007\n",
      "[188]\tvalidation_0-logloss:0.71043\n",
      "[190]\tvalidation_0-logloss:0.71079\n",
      "[192]\tvalidation_0-logloss:0.71094\n",
      "[194]\tvalidation_0-logloss:0.71091\n",
      "[196]\tvalidation_0-logloss:0.71164\n",
      "[198]\tvalidation_0-logloss:0.71182\n",
      "[200]\tvalidation_0-logloss:0.71189\n",
      "[202]\tvalidation_0-logloss:0.71208\n",
      "[204]\tvalidation_0-logloss:0.71257\n",
      "[206]\tvalidation_0-logloss:0.71289\n",
      "[208]\tvalidation_0-logloss:0.71340\n",
      "[210]\tvalidation_0-logloss:0.71363\n",
      "[212]\tvalidation_0-logloss:0.71353\n",
      "[214]\tvalidation_0-logloss:0.71369\n",
      "[216]\tvalidation_0-logloss:0.71393\n",
      "[218]\tvalidation_0-logloss:0.71412\n",
      "[220]\tvalidation_0-logloss:0.71383\n",
      "[222]\tvalidation_0-logloss:0.71376\n",
      "[224]\tvalidation_0-logloss:0.71365\n",
      "[226]\tvalidation_0-logloss:0.71404\n",
      "[228]\tvalidation_0-logloss:0.71441\n",
      "[230]\tvalidation_0-logloss:0.71487\n",
      "[232]\tvalidation_0-logloss:0.71543\n",
      "[234]\tvalidation_0-logloss:0.71576\n",
      "[236]\tvalidation_0-logloss:0.71586\n",
      "[238]\tvalidation_0-logloss:0.71587\n",
      "[240]\tvalidation_0-logloss:0.71578\n",
      "[242]\tvalidation_0-logloss:0.71597\n",
      "[244]\tvalidation_0-logloss:0.71568\n",
      "[246]\tvalidation_0-logloss:0.71569\n",
      "[248]\tvalidation_0-logloss:0.71638\n",
      "[250]\tvalidation_0-logloss:0.71674\n",
      "[252]\tvalidation_0-logloss:0.71813\n",
      "[254]\tvalidation_0-logloss:0.71827\n",
      "[255]\tvalidation_0-logloss:0.71868\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:53:04,116] Trial 52 finished with value: 0.694867340509451 and parameters: {'eta': 0.11161750525885324, 'gamma': 0.6434767612259407, 'max_depth': 5, 'min_child_weight': 2, 'lambda': 0.2624971828579994, 'alpha': 0.1671079028235225}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:53:08] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69542\n",
      "[2]\tvalidation_0-logloss:0.69652\n",
      "[4]\tvalidation_0-logloss:0.69585\n",
      "[6]\tvalidation_0-logloss:0.69582\n",
      "[8]\tvalidation_0-logloss:0.69563\n",
      "[10]\tvalidation_0-logloss:0.69605\n",
      "[12]\tvalidation_0-logloss:0.69628\n",
      "[14]\tvalidation_0-logloss:0.69647\n",
      "[16]\tvalidation_0-logloss:0.69686\n",
      "[18]\tvalidation_0-logloss:0.69692\n",
      "[20]\tvalidation_0-logloss:0.69675\n",
      "[22]\tvalidation_0-logloss:0.69679\n",
      "[24]\tvalidation_0-logloss:0.69647\n",
      "[26]\tvalidation_0-logloss:0.69658\n",
      "[28]\tvalidation_0-logloss:0.69659\n",
      "[30]\tvalidation_0-logloss:0.69639\n",
      "[32]\tvalidation_0-logloss:0.69657\n",
      "[34]\tvalidation_0-logloss:0.69680\n",
      "[36]\tvalidation_0-logloss:0.69681\n",
      "[38]\tvalidation_0-logloss:0.69716\n",
      "[40]\tvalidation_0-logloss:0.69754\n",
      "[42]\tvalidation_0-logloss:0.69772\n",
      "[44]\tvalidation_0-logloss:0.69778\n",
      "[46]\tvalidation_0-logloss:0.69778\n",
      "[48]\tvalidation_0-logloss:0.69828\n",
      "[50]\tvalidation_0-logloss:0.69850\n",
      "[52]\tvalidation_0-logloss:0.69823\n",
      "[54]\tvalidation_0-logloss:0.69839\n",
      "[56]\tvalidation_0-logloss:0.69850\n",
      "[58]\tvalidation_0-logloss:0.69831\n",
      "[60]\tvalidation_0-logloss:0.69832\n",
      "[62]\tvalidation_0-logloss:0.69878\n",
      "[64]\tvalidation_0-logloss:0.69869\n",
      "[66]\tvalidation_0-logloss:0.69856\n",
      "[68]\tvalidation_0-logloss:0.69870\n",
      "[70]\tvalidation_0-logloss:0.69876\n",
      "[72]\tvalidation_0-logloss:0.69864\n",
      "[74]\tvalidation_0-logloss:0.69881\n",
      "[76]\tvalidation_0-logloss:0.70013\n",
      "[78]\tvalidation_0-logloss:0.70026\n",
      "[80]\tvalidation_0-logloss:0.70013\n",
      "[82]\tvalidation_0-logloss:0.70014\n",
      "[84]\tvalidation_0-logloss:0.70028\n",
      "[86]\tvalidation_0-logloss:0.70044\n",
      "[88]\tvalidation_0-logloss:0.70062\n",
      "[90]\tvalidation_0-logloss:0.70101\n",
      "[92]\tvalidation_0-logloss:0.70143\n",
      "[94]\tvalidation_0-logloss:0.70172\n",
      "[96]\tvalidation_0-logloss:0.70195\n",
      "[98]\tvalidation_0-logloss:0.70198\n",
      "[100]\tvalidation_0-logloss:0.70223\n",
      "[102]\tvalidation_0-logloss:0.70236\n",
      "[104]\tvalidation_0-logloss:0.70230\n",
      "[106]\tvalidation_0-logloss:0.70230\n",
      "[108]\tvalidation_0-logloss:0.70274\n",
      "[110]\tvalidation_0-logloss:0.70299\n",
      "[112]\tvalidation_0-logloss:0.70315\n",
      "[114]\tvalidation_0-logloss:0.70314\n",
      "[116]\tvalidation_0-logloss:0.70373\n",
      "[118]\tvalidation_0-logloss:0.70383\n",
      "[120]\tvalidation_0-logloss:0.70424\n",
      "[122]\tvalidation_0-logloss:0.70420\n",
      "[124]\tvalidation_0-logloss:0.70451\n",
      "[126]\tvalidation_0-logloss:0.70487\n",
      "[128]\tvalidation_0-logloss:0.70503\n",
      "[130]\tvalidation_0-logloss:0.70523\n",
      "[132]\tvalidation_0-logloss:0.70543\n",
      "[134]\tvalidation_0-logloss:0.70525\n",
      "[136]\tvalidation_0-logloss:0.70558\n",
      "[138]\tvalidation_0-logloss:0.70573\n",
      "[140]\tvalidation_0-logloss:0.70624\n",
      "[142]\tvalidation_0-logloss:0.70617\n",
      "[144]\tvalidation_0-logloss:0.70656\n",
      "[146]\tvalidation_0-logloss:0.70710\n",
      "[148]\tvalidation_0-logloss:0.70721\n",
      "[150]\tvalidation_0-logloss:0.70743\n",
      "[152]\tvalidation_0-logloss:0.70744\n",
      "[154]\tvalidation_0-logloss:0.70759\n",
      "[156]\tvalidation_0-logloss:0.70770\n",
      "[158]\tvalidation_0-logloss:0.70813\n",
      "[160]\tvalidation_0-logloss:0.70804\n",
      "[162]\tvalidation_0-logloss:0.70817\n",
      "[164]\tvalidation_0-logloss:0.70825\n",
      "[166]\tvalidation_0-logloss:0.70921\n",
      "[168]\tvalidation_0-logloss:0.70934\n",
      "[170]\tvalidation_0-logloss:0.70937\n",
      "[172]\tvalidation_0-logloss:0.70946\n",
      "[174]\tvalidation_0-logloss:0.70952\n",
      "[176]\tvalidation_0-logloss:0.70985\n",
      "[178]\tvalidation_0-logloss:0.71019\n",
      "[180]\tvalidation_0-logloss:0.71021\n",
      "[182]\tvalidation_0-logloss:0.71088\n",
      "[184]\tvalidation_0-logloss:0.71098\n",
      "[186]\tvalidation_0-logloss:0.71172\n",
      "[188]\tvalidation_0-logloss:0.71191\n",
      "[190]\tvalidation_0-logloss:0.71197\n",
      "[192]\tvalidation_0-logloss:0.71197\n",
      "[194]\tvalidation_0-logloss:0.71211\n",
      "[196]\tvalidation_0-logloss:0.71272\n",
      "[198]\tvalidation_0-logloss:0.71277\n",
      "[200]\tvalidation_0-logloss:0.71354\n",
      "[202]\tvalidation_0-logloss:0.71322\n",
      "[204]\tvalidation_0-logloss:0.71349\n",
      "[206]\tvalidation_0-logloss:0.71386\n",
      "[208]\tvalidation_0-logloss:0.71403\n",
      "[210]\tvalidation_0-logloss:0.71433\n",
      "[212]\tvalidation_0-logloss:0.71491\n",
      "[214]\tvalidation_0-logloss:0.71473\n",
      "[216]\tvalidation_0-logloss:0.71500\n",
      "[218]\tvalidation_0-logloss:0.71503\n",
      "[220]\tvalidation_0-logloss:0.71509\n",
      "[222]\tvalidation_0-logloss:0.71536\n",
      "[224]\tvalidation_0-logloss:0.71551\n",
      "[226]\tvalidation_0-logloss:0.71575\n",
      "[228]\tvalidation_0-logloss:0.71605\n",
      "[230]\tvalidation_0-logloss:0.71616\n",
      "[232]\tvalidation_0-logloss:0.71694\n",
      "[234]\tvalidation_0-logloss:0.71733\n",
      "[236]\tvalidation_0-logloss:0.71741\n",
      "[238]\tvalidation_0-logloss:0.71797\n",
      "[240]\tvalidation_0-logloss:0.71784\n",
      "[242]\tvalidation_0-logloss:0.71784\n",
      "[244]\tvalidation_0-logloss:0.71805\n",
      "[246]\tvalidation_0-logloss:0.71860\n",
      "[248]\tvalidation_0-logloss:0.71875\n",
      "[250]\tvalidation_0-logloss:0.71882\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:54:25,186] Trial 53 finished with value: 0.6954231683240365 and parameters: {'eta': 0.0815697372118144, 'gamma': 0.5178585892434725, 'max_depth': 6, 'min_child_weight': 4, 'lambda': 0.08924378706469296, 'alpha': 0.08379435144916686}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:54:29] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69543\n",
      "[2]\tvalidation_0-logloss:0.69577\n",
      "[4]\tvalidation_0-logloss:0.69602\n",
      "[6]\tvalidation_0-logloss:0.69588\n",
      "[8]\tvalidation_0-logloss:0.69636\n",
      "[10]\tvalidation_0-logloss:0.69630\n",
      "[12]\tvalidation_0-logloss:0.69627\n",
      "[14]\tvalidation_0-logloss:0.69676\n",
      "[16]\tvalidation_0-logloss:0.69667\n",
      "[18]\tvalidation_0-logloss:0.69691\n",
      "[20]\tvalidation_0-logloss:0.69662\n",
      "[22]\tvalidation_0-logloss:0.69657\n",
      "[24]\tvalidation_0-logloss:0.69618\n",
      "[26]\tvalidation_0-logloss:0.69627\n",
      "[28]\tvalidation_0-logloss:0.69664\n",
      "[30]\tvalidation_0-logloss:0.69665\n",
      "[32]\tvalidation_0-logloss:0.69680\n",
      "[34]\tvalidation_0-logloss:0.69728\n",
      "[36]\tvalidation_0-logloss:0.69734\n",
      "[38]\tvalidation_0-logloss:0.69761\n",
      "[40]\tvalidation_0-logloss:0.69751\n",
      "[42]\tvalidation_0-logloss:0.69770\n",
      "[44]\tvalidation_0-logloss:0.69752\n",
      "[46]\tvalidation_0-logloss:0.69758\n",
      "[48]\tvalidation_0-logloss:0.69735\n",
      "[50]\tvalidation_0-logloss:0.69720\n",
      "[52]\tvalidation_0-logloss:0.69734\n",
      "[54]\tvalidation_0-logloss:0.69819\n",
      "[56]\tvalidation_0-logloss:0.69843\n",
      "[58]\tvalidation_0-logloss:0.69865\n",
      "[60]\tvalidation_0-logloss:0.69833\n",
      "[62]\tvalidation_0-logloss:0.69797\n",
      "[64]\tvalidation_0-logloss:0.69818\n",
      "[66]\tvalidation_0-logloss:0.69822\n",
      "[68]\tvalidation_0-logloss:0.69793\n",
      "[70]\tvalidation_0-logloss:0.69800\n",
      "[72]\tvalidation_0-logloss:0.69812\n",
      "[74]\tvalidation_0-logloss:0.69798\n",
      "[76]\tvalidation_0-logloss:0.69859\n",
      "[78]\tvalidation_0-logloss:0.69891\n",
      "[80]\tvalidation_0-logloss:0.69881\n",
      "[82]\tvalidation_0-logloss:0.69852\n",
      "[84]\tvalidation_0-logloss:0.69835\n",
      "[86]\tvalidation_0-logloss:0.69837\n",
      "[88]\tvalidation_0-logloss:0.69854\n",
      "[90]\tvalidation_0-logloss:0.69836\n",
      "[92]\tvalidation_0-logloss:0.69851\n",
      "[94]\tvalidation_0-logloss:0.69859\n",
      "[96]\tvalidation_0-logloss:0.69850\n",
      "[98]\tvalidation_0-logloss:0.69848\n",
      "[100]\tvalidation_0-logloss:0.69833\n",
      "[102]\tvalidation_0-logloss:0.69922\n",
      "[104]\tvalidation_0-logloss:0.69949\n",
      "[106]\tvalidation_0-logloss:0.69953\n",
      "[108]\tvalidation_0-logloss:0.69957\n",
      "[110]\tvalidation_0-logloss:0.69966\n",
      "[112]\tvalidation_0-logloss:0.69983\n",
      "[114]\tvalidation_0-logloss:0.70002\n",
      "[116]\tvalidation_0-logloss:0.69987\n",
      "[118]\tvalidation_0-logloss:0.69948\n",
      "[120]\tvalidation_0-logloss:0.69961\n",
      "[122]\tvalidation_0-logloss:0.69961\n",
      "[124]\tvalidation_0-logloss:0.69970\n",
      "[126]\tvalidation_0-logloss:0.70011\n",
      "[128]\tvalidation_0-logloss:0.69999\n",
      "[130]\tvalidation_0-logloss:0.70076\n",
      "[132]\tvalidation_0-logloss:0.70109\n",
      "[134]\tvalidation_0-logloss:0.70105\n",
      "[136]\tvalidation_0-logloss:0.70108\n",
      "[138]\tvalidation_0-logloss:0.70088\n",
      "[140]\tvalidation_0-logloss:0.70118\n",
      "[142]\tvalidation_0-logloss:0.70140\n",
      "[144]\tvalidation_0-logloss:0.70135\n",
      "[146]\tvalidation_0-logloss:0.70138\n",
      "[148]\tvalidation_0-logloss:0.70157\n",
      "[150]\tvalidation_0-logloss:0.70167\n",
      "[152]\tvalidation_0-logloss:0.70156\n",
      "[154]\tvalidation_0-logloss:0.70152\n",
      "[156]\tvalidation_0-logloss:0.70121\n",
      "[158]\tvalidation_0-logloss:0.70171\n",
      "[160]\tvalidation_0-logloss:0.70178\n",
      "[162]\tvalidation_0-logloss:0.70206\n",
      "[164]\tvalidation_0-logloss:0.70213\n",
      "[166]\tvalidation_0-logloss:0.70205\n",
      "[168]\tvalidation_0-logloss:0.70214\n",
      "[170]\tvalidation_0-logloss:0.70235\n",
      "[172]\tvalidation_0-logloss:0.70220\n",
      "[174]\tvalidation_0-logloss:0.70205\n",
      "[176]\tvalidation_0-logloss:0.70197\n",
      "[178]\tvalidation_0-logloss:0.70207\n",
      "[180]\tvalidation_0-logloss:0.70230\n",
      "[182]\tvalidation_0-logloss:0.70231\n",
      "[184]\tvalidation_0-logloss:0.70236\n",
      "[186]\tvalidation_0-logloss:0.70243\n",
      "[188]\tvalidation_0-logloss:0.70236\n",
      "[190]\tvalidation_0-logloss:0.70239\n",
      "[192]\tvalidation_0-logloss:0.70239\n",
      "[194]\tvalidation_0-logloss:0.70269\n",
      "[196]\tvalidation_0-logloss:0.70289\n",
      "[198]\tvalidation_0-logloss:0.70303\n",
      "[200]\tvalidation_0-logloss:0.70313\n",
      "[202]\tvalidation_0-logloss:0.70330\n",
      "[204]\tvalidation_0-logloss:0.70333\n",
      "[206]\tvalidation_0-logloss:0.70325\n",
      "[208]\tvalidation_0-logloss:0.70321\n",
      "[210]\tvalidation_0-logloss:0.70323\n",
      "[212]\tvalidation_0-logloss:0.70317\n",
      "[214]\tvalidation_0-logloss:0.70336\n",
      "[216]\tvalidation_0-logloss:0.70360\n",
      "[218]\tvalidation_0-logloss:0.70375\n",
      "[220]\tvalidation_0-logloss:0.70400\n",
      "[222]\tvalidation_0-logloss:0.70354\n",
      "[224]\tvalidation_0-logloss:0.70358\n",
      "[226]\tvalidation_0-logloss:0.70368\n",
      "[228]\tvalidation_0-logloss:0.70358\n",
      "[230]\tvalidation_0-logloss:0.70435\n",
      "[232]\tvalidation_0-logloss:0.70439\n",
      "[234]\tvalidation_0-logloss:0.70438\n",
      "[236]\tvalidation_0-logloss:0.70455\n",
      "[238]\tvalidation_0-logloss:0.70467\n",
      "[240]\tvalidation_0-logloss:0.70480\n",
      "[242]\tvalidation_0-logloss:0.70484\n",
      "[244]\tvalidation_0-logloss:0.70511\n",
      "[246]\tvalidation_0-logloss:0.70511\n",
      "[248]\tvalidation_0-logloss:0.70507\n",
      "[250]\tvalidation_0-logloss:0.70521\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:55:34,312] Trial 54 finished with value: 0.6954263351197236 and parameters: {'eta': 0.13734329585680471, 'gamma': 0.46204747158277715, 'max_depth': 3, 'min_child_weight': 9, 'lambda': 0.1330448119427438, 'alpha': 0.42238290311418447}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:55:38] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69557\n",
      "[2]\tvalidation_0-logloss:0.69552\n",
      "[4]\tvalidation_0-logloss:0.69489\n",
      "[6]\tvalidation_0-logloss:0.69516\n",
      "[8]\tvalidation_0-logloss:0.69563\n",
      "[10]\tvalidation_0-logloss:0.69543\n",
      "[12]\tvalidation_0-logloss:0.69514\n",
      "[14]\tvalidation_0-logloss:0.69557\n",
      "[16]\tvalidation_0-logloss:0.69511\n",
      "[18]\tvalidation_0-logloss:0.69491\n",
      "[20]\tvalidation_0-logloss:0.69501\n",
      "[22]\tvalidation_0-logloss:0.69526\n",
      "[24]\tvalidation_0-logloss:0.69547\n",
      "[26]\tvalidation_0-logloss:0.69562\n",
      "[28]\tvalidation_0-logloss:0.69525\n",
      "[30]\tvalidation_0-logloss:0.69517\n",
      "[32]\tvalidation_0-logloss:0.69528\n",
      "[34]\tvalidation_0-logloss:0.69604\n",
      "[36]\tvalidation_0-logloss:0.69655\n",
      "[38]\tvalidation_0-logloss:0.69635\n",
      "[40]\tvalidation_0-logloss:0.69624\n",
      "[42]\tvalidation_0-logloss:0.69633\n",
      "[44]\tvalidation_0-logloss:0.69651\n",
      "[46]\tvalidation_0-logloss:0.69669\n",
      "[48]\tvalidation_0-logloss:0.69674\n",
      "[50]\tvalidation_0-logloss:0.69673\n",
      "[52]\tvalidation_0-logloss:0.69691\n",
      "[54]\tvalidation_0-logloss:0.69850\n",
      "[56]\tvalidation_0-logloss:0.69847\n",
      "[58]\tvalidation_0-logloss:0.69855\n",
      "[60]\tvalidation_0-logloss:0.69865\n",
      "[62]\tvalidation_0-logloss:0.69919\n",
      "[64]\tvalidation_0-logloss:0.70077\n",
      "[66]\tvalidation_0-logloss:0.70130\n",
      "[68]\tvalidation_0-logloss:0.70202\n",
      "[70]\tvalidation_0-logloss:0.70174\n",
      "[72]\tvalidation_0-logloss:0.70212\n",
      "[74]\tvalidation_0-logloss:0.70264\n",
      "[76]\tvalidation_0-logloss:0.70273\n",
      "[78]\tvalidation_0-logloss:0.70263\n",
      "[80]\tvalidation_0-logloss:0.70285\n",
      "[82]\tvalidation_0-logloss:0.70300\n",
      "[84]\tvalidation_0-logloss:0.70267\n",
      "[86]\tvalidation_0-logloss:0.70255\n",
      "[88]\tvalidation_0-logloss:0.70232\n",
      "[90]\tvalidation_0-logloss:0.70247\n",
      "[92]\tvalidation_0-logloss:0.70236\n",
      "[94]\tvalidation_0-logloss:0.70222\n",
      "[96]\tvalidation_0-logloss:0.70248\n",
      "[98]\tvalidation_0-logloss:0.70263\n",
      "[100]\tvalidation_0-logloss:0.70258\n",
      "[102]\tvalidation_0-logloss:0.70389\n",
      "[104]\tvalidation_0-logloss:0.70506\n",
      "[106]\tvalidation_0-logloss:0.70553\n",
      "[108]\tvalidation_0-logloss:0.70514\n",
      "[110]\tvalidation_0-logloss:0.70532\n",
      "[112]\tvalidation_0-logloss:0.70581\n",
      "[114]\tvalidation_0-logloss:0.70582\n",
      "[116]\tvalidation_0-logloss:0.70611\n",
      "[118]\tvalidation_0-logloss:0.70633\n",
      "[120]\tvalidation_0-logloss:0.70671\n",
      "[122]\tvalidation_0-logloss:0.70686\n",
      "[124]\tvalidation_0-logloss:0.70676\n",
      "[126]\tvalidation_0-logloss:0.70683\n",
      "[128]\tvalidation_0-logloss:0.70708\n",
      "[130]\tvalidation_0-logloss:0.70704\n",
      "[132]\tvalidation_0-logloss:0.70726\n",
      "[134]\tvalidation_0-logloss:0.70732\n",
      "[136]\tvalidation_0-logloss:0.70782\n",
      "[138]\tvalidation_0-logloss:0.70760\n",
      "[140]\tvalidation_0-logloss:0.70792\n",
      "[142]\tvalidation_0-logloss:0.70798\n",
      "[144]\tvalidation_0-logloss:0.70789\n",
      "[146]\tvalidation_0-logloss:0.70778\n",
      "[148]\tvalidation_0-logloss:0.70778\n",
      "[150]\tvalidation_0-logloss:0.70823\n",
      "[152]\tvalidation_0-logloss:0.70831\n",
      "[154]\tvalidation_0-logloss:0.70833\n",
      "[156]\tvalidation_0-logloss:0.70876\n",
      "[158]\tvalidation_0-logloss:0.70913\n",
      "[160]\tvalidation_0-logloss:0.70911\n",
      "[162]\tvalidation_0-logloss:0.70943\n",
      "[164]\tvalidation_0-logloss:0.70913\n",
      "[166]\tvalidation_0-logloss:0.70953\n",
      "[168]\tvalidation_0-logloss:0.70963\n",
      "[170]\tvalidation_0-logloss:0.70996\n",
      "[172]\tvalidation_0-logloss:0.71051\n",
      "[174]\tvalidation_0-logloss:0.71133\n",
      "[176]\tvalidation_0-logloss:0.71143\n",
      "[178]\tvalidation_0-logloss:0.71143\n",
      "[180]\tvalidation_0-logloss:0.71559\n",
      "[182]\tvalidation_0-logloss:0.71610\n",
      "[184]\tvalidation_0-logloss:0.71604\n",
      "[186]\tvalidation_0-logloss:0.71591\n",
      "[188]\tvalidation_0-logloss:0.71645\n",
      "[190]\tvalidation_0-logloss:0.71674\n",
      "[192]\tvalidation_0-logloss:0.71670\n",
      "[194]\tvalidation_0-logloss:0.71689\n",
      "[196]\tvalidation_0-logloss:0.71692\n",
      "[198]\tvalidation_0-logloss:0.71695\n",
      "[200]\tvalidation_0-logloss:0.71712\n",
      "[202]\tvalidation_0-logloss:0.71779\n",
      "[204]\tvalidation_0-logloss:0.71835\n",
      "[206]\tvalidation_0-logloss:0.71786\n",
      "[208]\tvalidation_0-logloss:0.71883\n",
      "[210]\tvalidation_0-logloss:0.71880\n",
      "[212]\tvalidation_0-logloss:0.71906\n",
      "[214]\tvalidation_0-logloss:0.71921\n",
      "[216]\tvalidation_0-logloss:0.71906\n",
      "[218]\tvalidation_0-logloss:0.71899\n",
      "[220]\tvalidation_0-logloss:0.71889\n",
      "[222]\tvalidation_0-logloss:0.71890\n",
      "[224]\tvalidation_0-logloss:0.71881\n",
      "[226]\tvalidation_0-logloss:0.71896\n",
      "[228]\tvalidation_0-logloss:0.71910\n",
      "[230]\tvalidation_0-logloss:0.71909\n",
      "[232]\tvalidation_0-logloss:0.71920\n",
      "[234]\tvalidation_0-logloss:0.71971\n",
      "[236]\tvalidation_0-logloss:0.71948\n",
      "[238]\tvalidation_0-logloss:0.71884\n",
      "[240]\tvalidation_0-logloss:0.71835\n",
      "[242]\tvalidation_0-logloss:0.71874\n",
      "[244]\tvalidation_0-logloss:0.71872\n",
      "[246]\tvalidation_0-logloss:0.71880\n",
      "[248]\tvalidation_0-logloss:0.72005\n",
      "[250]\tvalidation_0-logloss:0.72064\n",
      "[252]\tvalidation_0-logloss:0.72083\n",
      "[254]\tvalidation_0-logloss:0.72067\n",
      "[256]\tvalidation_0-logloss:0.72065\n",
      "[258]\tvalidation_0-logloss:0.72149\n",
      "[260]\tvalidation_0-logloss:0.72135\n",
      "[262]\tvalidation_0-logloss:0.72120\n",
      "[264]\tvalidation_0-logloss:0.72156\n",
      "[266]\tvalidation_0-logloss:0.72210\n",
      "[268]\tvalidation_0-logloss:0.72245\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:56:50,410] Trial 55 finished with value: 0.6948825554747685 and parameters: {'eta': 0.16172396089709346, 'gamma': 0.5791450327198642, 'max_depth': 4, 'min_child_weight': 1, 'lambda': 0.03984968660792146, 'alpha': 0.13565380275077663}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:56:55] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69552\n",
      "[2]\tvalidation_0-logloss:0.69571\n",
      "[4]\tvalidation_0-logloss:0.69531\n",
      "[6]\tvalidation_0-logloss:0.69482\n",
      "[8]\tvalidation_0-logloss:0.69476\n",
      "[10]\tvalidation_0-logloss:0.69471\n",
      "[12]\tvalidation_0-logloss:0.69459\n",
      "[14]\tvalidation_0-logloss:0.69435\n",
      "[16]\tvalidation_0-logloss:0.69410\n",
      "[18]\tvalidation_0-logloss:0.69445\n",
      "[20]\tvalidation_0-logloss:0.69475\n",
      "[22]\tvalidation_0-logloss:0.69520\n",
      "[24]\tvalidation_0-logloss:0.69471\n",
      "[26]\tvalidation_0-logloss:0.69488\n",
      "[28]\tvalidation_0-logloss:0.69485\n",
      "[30]\tvalidation_0-logloss:0.69474\n",
      "[32]\tvalidation_0-logloss:0.69467\n",
      "[34]\tvalidation_0-logloss:0.69477\n",
      "[36]\tvalidation_0-logloss:0.69451\n",
      "[38]\tvalidation_0-logloss:0.69453\n",
      "[40]\tvalidation_0-logloss:0.69448\n",
      "[42]\tvalidation_0-logloss:0.69470\n",
      "[44]\tvalidation_0-logloss:0.69464\n",
      "[46]\tvalidation_0-logloss:0.69467\n",
      "[48]\tvalidation_0-logloss:0.69539\n",
      "[50]\tvalidation_0-logloss:0.69526\n",
      "[52]\tvalidation_0-logloss:0.69549\n",
      "[54]\tvalidation_0-logloss:0.69548\n",
      "[56]\tvalidation_0-logloss:0.69557\n",
      "[58]\tvalidation_0-logloss:0.69584\n",
      "[60]\tvalidation_0-logloss:0.69573\n",
      "[62]\tvalidation_0-logloss:0.69583\n",
      "[64]\tvalidation_0-logloss:0.69688\n",
      "[66]\tvalidation_0-logloss:0.69687\n",
      "[68]\tvalidation_0-logloss:0.69670\n",
      "[70]\tvalidation_0-logloss:0.69658\n",
      "[72]\tvalidation_0-logloss:0.69667\n",
      "[74]\tvalidation_0-logloss:0.69678\n",
      "[76]\tvalidation_0-logloss:0.69658\n",
      "[78]\tvalidation_0-logloss:0.69656\n",
      "[80]\tvalidation_0-logloss:0.69690\n",
      "[82]\tvalidation_0-logloss:0.69742\n",
      "[84]\tvalidation_0-logloss:0.69774\n",
      "[86]\tvalidation_0-logloss:0.69788\n",
      "[88]\tvalidation_0-logloss:0.69796\n",
      "[90]\tvalidation_0-logloss:0.69825\n",
      "[92]\tvalidation_0-logloss:0.69839\n",
      "[94]\tvalidation_0-logloss:0.69876\n",
      "[96]\tvalidation_0-logloss:0.69884\n",
      "[98]\tvalidation_0-logloss:0.69889\n",
      "[100]\tvalidation_0-logloss:0.69939\n",
      "[102]\tvalidation_0-logloss:0.69941\n",
      "[104]\tvalidation_0-logloss:0.69977\n",
      "[106]\tvalidation_0-logloss:0.69981\n",
      "[108]\tvalidation_0-logloss:0.70043\n",
      "[110]\tvalidation_0-logloss:0.70114\n",
      "[112]\tvalidation_0-logloss:0.70152\n",
      "[114]\tvalidation_0-logloss:0.70166\n",
      "[116]\tvalidation_0-logloss:0.70212\n",
      "[118]\tvalidation_0-logloss:0.70245\n",
      "[120]\tvalidation_0-logloss:0.70273\n",
      "[122]\tvalidation_0-logloss:0.70300\n",
      "[124]\tvalidation_0-logloss:0.70384\n",
      "[126]\tvalidation_0-logloss:0.70405\n",
      "[128]\tvalidation_0-logloss:0.70408\n",
      "[130]\tvalidation_0-logloss:0.70409\n",
      "[132]\tvalidation_0-logloss:0.70454\n",
      "[134]\tvalidation_0-logloss:0.70442\n",
      "[136]\tvalidation_0-logloss:0.70430\n",
      "[138]\tvalidation_0-logloss:0.70441\n",
      "[140]\tvalidation_0-logloss:0.70480\n",
      "[142]\tvalidation_0-logloss:0.70499\n",
      "[144]\tvalidation_0-logloss:0.70495\n",
      "[146]\tvalidation_0-logloss:0.70485\n",
      "[148]\tvalidation_0-logloss:0.70493\n",
      "[150]\tvalidation_0-logloss:0.70488\n",
      "[152]\tvalidation_0-logloss:0.70459\n",
      "[154]\tvalidation_0-logloss:0.70493\n",
      "[156]\tvalidation_0-logloss:0.70653\n",
      "[158]\tvalidation_0-logloss:0.70712\n",
      "[160]\tvalidation_0-logloss:0.70850\n",
      "[162]\tvalidation_0-logloss:0.70849\n",
      "[164]\tvalidation_0-logloss:0.70863\n",
      "[166]\tvalidation_0-logloss:0.70836\n",
      "[168]\tvalidation_0-logloss:0.70849\n",
      "[170]\tvalidation_0-logloss:0.70842\n",
      "[172]\tvalidation_0-logloss:0.70891\n",
      "[174]\tvalidation_0-logloss:0.70896\n",
      "[176]\tvalidation_0-logloss:0.70943\n",
      "[178]\tvalidation_0-logloss:0.71025\n",
      "[180]\tvalidation_0-logloss:0.71009\n",
      "[182]\tvalidation_0-logloss:0.71017\n",
      "[184]\tvalidation_0-logloss:0.71040\n",
      "[186]\tvalidation_0-logloss:0.71042\n",
      "[188]\tvalidation_0-logloss:0.71059\n",
      "[190]\tvalidation_0-logloss:0.71039\n",
      "[192]\tvalidation_0-logloss:0.71059\n",
      "[194]\tvalidation_0-logloss:0.71049\n",
      "[196]\tvalidation_0-logloss:0.71116\n",
      "[198]\tvalidation_0-logloss:0.71137\n",
      "[200]\tvalidation_0-logloss:0.71153\n",
      "[202]\tvalidation_0-logloss:0.71180\n",
      "[204]\tvalidation_0-logloss:0.71197\n",
      "[206]\tvalidation_0-logloss:0.71243\n",
      "[208]\tvalidation_0-logloss:0.71284\n",
      "[210]\tvalidation_0-logloss:0.71326\n",
      "[212]\tvalidation_0-logloss:0.71305\n",
      "[214]\tvalidation_0-logloss:0.71296\n",
      "[216]\tvalidation_0-logloss:0.71296\n",
      "[218]\tvalidation_0-logloss:0.71293\n",
      "[220]\tvalidation_0-logloss:0.71303\n",
      "[222]\tvalidation_0-logloss:0.71356\n",
      "[224]\tvalidation_0-logloss:0.71365\n",
      "[226]\tvalidation_0-logloss:0.71371\n",
      "[228]\tvalidation_0-logloss:0.71374\n",
      "[230]\tvalidation_0-logloss:0.71431\n",
      "[232]\tvalidation_0-logloss:0.71476\n",
      "[234]\tvalidation_0-logloss:0.71458\n",
      "[236]\tvalidation_0-logloss:0.71483\n",
      "[238]\tvalidation_0-logloss:0.71534\n",
      "[240]\tvalidation_0-logloss:0.71561\n",
      "[242]\tvalidation_0-logloss:0.71550\n",
      "[244]\tvalidation_0-logloss:0.71555\n",
      "[246]\tvalidation_0-logloss:0.71541\n",
      "[248]\tvalidation_0-logloss:0.71525\n",
      "[250]\tvalidation_0-logloss:0.71553\n",
      "[252]\tvalidation_0-logloss:0.71592\n",
      "[254]\tvalidation_0-logloss:0.71636\n",
      "[256]\tvalidation_0-logloss:0.71635\n",
      "[258]\tvalidation_0-logloss:0.71668\n",
      "[260]\tvalidation_0-logloss:0.71713\n",
      "[262]\tvalidation_0-logloss:0.71739\n",
      "[264]\tvalidation_0-logloss:0.71759\n",
      "[265]\tvalidation_0-logloss:0.71764\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:58:12,981] Trial 56 finished with value: 0.694099969780109 and parameters: {'eta': 0.09583803178473808, 'gamma': 0.727130964003191, 'max_depth': 5, 'min_child_weight': 0, 'lambda': 0.1817015538229573, 'alpha': 0.3275097077233715}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:58:17] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69535\n",
      "[2]\tvalidation_0-logloss:0.69595\n",
      "[4]\tvalidation_0-logloss:0.69599\n",
      "[6]\tvalidation_0-logloss:0.69534\n",
      "[8]\tvalidation_0-logloss:0.69533\n",
      "[10]\tvalidation_0-logloss:0.69535\n",
      "[12]\tvalidation_0-logloss:0.69521\n",
      "[14]\tvalidation_0-logloss:0.69550\n",
      "[16]\tvalidation_0-logloss:0.69548\n",
      "[18]\tvalidation_0-logloss:0.69563\n",
      "[20]\tvalidation_0-logloss:0.69578\n",
      "[22]\tvalidation_0-logloss:0.69589\n",
      "[24]\tvalidation_0-logloss:0.69574\n",
      "[26]\tvalidation_0-logloss:0.69584\n",
      "[28]\tvalidation_0-logloss:0.69558\n",
      "[30]\tvalidation_0-logloss:0.69576\n",
      "[32]\tvalidation_0-logloss:0.69581\n",
      "[34]\tvalidation_0-logloss:0.69562\n",
      "[36]\tvalidation_0-logloss:0.69575\n",
      "[38]\tvalidation_0-logloss:0.69572\n",
      "[40]\tvalidation_0-logloss:0.69565\n",
      "[42]\tvalidation_0-logloss:0.69587\n",
      "[44]\tvalidation_0-logloss:0.69567\n",
      "[46]\tvalidation_0-logloss:0.69606\n",
      "[48]\tvalidation_0-logloss:0.69613\n",
      "[50]\tvalidation_0-logloss:0.69618\n",
      "[52]\tvalidation_0-logloss:0.69614\n",
      "[54]\tvalidation_0-logloss:0.69596\n",
      "[56]\tvalidation_0-logloss:0.69628\n",
      "[58]\tvalidation_0-logloss:0.69625\n",
      "[60]\tvalidation_0-logloss:0.69635\n",
      "[62]\tvalidation_0-logloss:0.69646\n",
      "[64]\tvalidation_0-logloss:0.69642\n",
      "[66]\tvalidation_0-logloss:0.69620\n",
      "[68]\tvalidation_0-logloss:0.69631\n",
      "[70]\tvalidation_0-logloss:0.69652\n",
      "[72]\tvalidation_0-logloss:0.69697\n",
      "[74]\tvalidation_0-logloss:0.69706\n",
      "[76]\tvalidation_0-logloss:0.69723\n",
      "[78]\tvalidation_0-logloss:0.69726\n",
      "[80]\tvalidation_0-logloss:0.69727\n",
      "[82]\tvalidation_0-logloss:0.69720\n",
      "[84]\tvalidation_0-logloss:0.69715\n",
      "[86]\tvalidation_0-logloss:0.69767\n",
      "[88]\tvalidation_0-logloss:0.69754\n",
      "[90]\tvalidation_0-logloss:0.69750\n",
      "[92]\tvalidation_0-logloss:0.69727\n",
      "[94]\tvalidation_0-logloss:0.69757\n",
      "[96]\tvalidation_0-logloss:0.69775\n",
      "[98]\tvalidation_0-logloss:0.69794\n",
      "[100]\tvalidation_0-logloss:0.69807\n",
      "[102]\tvalidation_0-logloss:0.69796\n",
      "[104]\tvalidation_0-logloss:0.69791\n",
      "[106]\tvalidation_0-logloss:0.69829\n",
      "[108]\tvalidation_0-logloss:0.69865\n",
      "[110]\tvalidation_0-logloss:0.69907\n",
      "[112]\tvalidation_0-logloss:0.69955\n",
      "[114]\tvalidation_0-logloss:0.69945\n",
      "[116]\tvalidation_0-logloss:0.69957\n",
      "[118]\tvalidation_0-logloss:0.69968\n",
      "[120]\tvalidation_0-logloss:0.69993\n",
      "[122]\tvalidation_0-logloss:0.70017\n",
      "[124]\tvalidation_0-logloss:0.70058\n",
      "[126]\tvalidation_0-logloss:0.70069\n",
      "[128]\tvalidation_0-logloss:0.70099\n",
      "[130]\tvalidation_0-logloss:0.70097\n",
      "[132]\tvalidation_0-logloss:0.70120\n",
      "[134]\tvalidation_0-logloss:0.70084\n",
      "[136]\tvalidation_0-logloss:0.70100\n",
      "[138]\tvalidation_0-logloss:0.70106\n",
      "[140]\tvalidation_0-logloss:0.70157\n",
      "[142]\tvalidation_0-logloss:0.70160\n",
      "[144]\tvalidation_0-logloss:0.70165\n",
      "[146]\tvalidation_0-logloss:0.70197\n",
      "[148]\tvalidation_0-logloss:0.70208\n",
      "[150]\tvalidation_0-logloss:0.70221\n",
      "[152]\tvalidation_0-logloss:0.70234\n",
      "[154]\tvalidation_0-logloss:0.70252\n",
      "[156]\tvalidation_0-logloss:0.70235\n",
      "[158]\tvalidation_0-logloss:0.70234\n",
      "[160]\tvalidation_0-logloss:0.70263\n",
      "[162]\tvalidation_0-logloss:0.70288\n",
      "[164]\tvalidation_0-logloss:0.70301\n",
      "[166]\tvalidation_0-logloss:0.70315\n",
      "[168]\tvalidation_0-logloss:0.70320\n",
      "[170]\tvalidation_0-logloss:0.70329\n",
      "[172]\tvalidation_0-logloss:0.70332\n",
      "[174]\tvalidation_0-logloss:0.70355\n",
      "[176]\tvalidation_0-logloss:0.70406\n",
      "[178]\tvalidation_0-logloss:0.70410\n",
      "[180]\tvalidation_0-logloss:0.70417\n",
      "[182]\tvalidation_0-logloss:0.70425\n",
      "[184]\tvalidation_0-logloss:0.70440\n",
      "[186]\tvalidation_0-logloss:0.70455\n",
      "[188]\tvalidation_0-logloss:0.70460\n",
      "[190]\tvalidation_0-logloss:0.70424\n",
      "[192]\tvalidation_0-logloss:0.70416\n",
      "[194]\tvalidation_0-logloss:0.70444\n",
      "[196]\tvalidation_0-logloss:0.70449\n",
      "[198]\tvalidation_0-logloss:0.70451\n",
      "[200]\tvalidation_0-logloss:0.70504\n",
      "[202]\tvalidation_0-logloss:0.70501\n",
      "[204]\tvalidation_0-logloss:0.70519\n",
      "[206]\tvalidation_0-logloss:0.70525\n",
      "[208]\tvalidation_0-logloss:0.70529\n",
      "[210]\tvalidation_0-logloss:0.70556\n",
      "[212]\tvalidation_0-logloss:0.70606\n",
      "[214]\tvalidation_0-logloss:0.70606\n",
      "[216]\tvalidation_0-logloss:0.70657\n",
      "[218]\tvalidation_0-logloss:0.70714\n",
      "[220]\tvalidation_0-logloss:0.70727\n",
      "[222]\tvalidation_0-logloss:0.70723\n",
      "[224]\tvalidation_0-logloss:0.70744\n",
      "[226]\tvalidation_0-logloss:0.70773\n",
      "[228]\tvalidation_0-logloss:0.70763\n",
      "[230]\tvalidation_0-logloss:0.70787\n",
      "[232]\tvalidation_0-logloss:0.70800\n",
      "[234]\tvalidation_0-logloss:0.70806\n",
      "[236]\tvalidation_0-logloss:0.70828\n",
      "[238]\tvalidation_0-logloss:0.70852\n",
      "[240]\tvalidation_0-logloss:0.70870\n",
      "[242]\tvalidation_0-logloss:0.70891\n",
      "[244]\tvalidation_0-logloss:0.70910\n",
      "[246]\tvalidation_0-logloss:0.70920\n",
      "[248]\tvalidation_0-logloss:0.70930\n",
      "[250]\tvalidation_0-logloss:0.70939\n",
      "[252]\tvalidation_0-logloss:0.70953\n",
      "[254]\tvalidation_0-logloss:0.70974\n",
      "[256]\tvalidation_0-logloss:0.70989\n",
      "[258]\tvalidation_0-logloss:0.71004\n",
      "[260]\tvalidation_0-logloss:0.71016\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 16:59:41,640] Trial 57 finished with value: 0.6950585636591947 and parameters: {'eta': 0.06338265806938917, 'gamma': 0.35391896723937155, 'max_depth': 6, 'min_child_weight': 2, 'lambda': 0.09744722163163543, 'alpha': 0.004169676114811366}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [16:59:46] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69532\n",
      "[2]\tvalidation_0-logloss:0.69523\n",
      "[4]\tvalidation_0-logloss:0.69592\n",
      "[6]\tvalidation_0-logloss:0.69572\n",
      "[8]\tvalidation_0-logloss:0.69535\n",
      "[10]\tvalidation_0-logloss:0.69534\n",
      "[12]\tvalidation_0-logloss:0.69538\n",
      "[14]\tvalidation_0-logloss:0.69531\n",
      "[16]\tvalidation_0-logloss:0.69538\n",
      "[18]\tvalidation_0-logloss:0.69540\n",
      "[20]\tvalidation_0-logloss:0.69541\n",
      "[22]\tvalidation_0-logloss:0.69509\n",
      "[24]\tvalidation_0-logloss:0.69535\n",
      "[26]\tvalidation_0-logloss:0.69551\n",
      "[28]\tvalidation_0-logloss:0.69528\n",
      "[30]\tvalidation_0-logloss:0.69537\n",
      "[32]\tvalidation_0-logloss:0.69531\n",
      "[34]\tvalidation_0-logloss:0.69552\n",
      "[36]\tvalidation_0-logloss:0.69562\n",
      "[38]\tvalidation_0-logloss:0.69566\n",
      "[40]\tvalidation_0-logloss:0.69466\n",
      "[42]\tvalidation_0-logloss:0.69472\n",
      "[44]\tvalidation_0-logloss:0.69480\n",
      "[46]\tvalidation_0-logloss:0.69488\n",
      "[48]\tvalidation_0-logloss:0.69476\n",
      "[50]\tvalidation_0-logloss:0.69470\n",
      "[52]\tvalidation_0-logloss:0.69480\n",
      "[54]\tvalidation_0-logloss:0.69493\n",
      "[56]\tvalidation_0-logloss:0.69478\n",
      "[58]\tvalidation_0-logloss:0.69476\n",
      "[60]\tvalidation_0-logloss:0.69487\n",
      "[62]\tvalidation_0-logloss:0.69487\n",
      "[64]\tvalidation_0-logloss:0.69497\n",
      "[66]\tvalidation_0-logloss:0.69508\n",
      "[68]\tvalidation_0-logloss:0.69515\n",
      "[70]\tvalidation_0-logloss:0.69501\n",
      "[72]\tvalidation_0-logloss:0.69525\n",
      "[74]\tvalidation_0-logloss:0.69543\n",
      "[76]\tvalidation_0-logloss:0.69556\n",
      "[78]\tvalidation_0-logloss:0.69557\n",
      "[80]\tvalidation_0-logloss:0.69619\n",
      "[82]\tvalidation_0-logloss:0.69611\n",
      "[84]\tvalidation_0-logloss:0.69600\n",
      "[86]\tvalidation_0-logloss:0.69595\n",
      "[88]\tvalidation_0-logloss:0.69593\n",
      "[90]\tvalidation_0-logloss:0.69599\n",
      "[92]\tvalidation_0-logloss:0.69568\n",
      "[94]\tvalidation_0-logloss:0.69567\n",
      "[96]\tvalidation_0-logloss:0.69560\n",
      "[98]\tvalidation_0-logloss:0.69556\n",
      "[100]\tvalidation_0-logloss:0.69560\n",
      "[102]\tvalidation_0-logloss:0.69571\n",
      "[104]\tvalidation_0-logloss:0.69583\n",
      "[106]\tvalidation_0-logloss:0.69583\n",
      "[108]\tvalidation_0-logloss:0.69596\n",
      "[110]\tvalidation_0-logloss:0.69596\n",
      "[112]\tvalidation_0-logloss:0.69591\n",
      "[114]\tvalidation_0-logloss:0.69590\n",
      "[116]\tvalidation_0-logloss:0.69591\n",
      "[118]\tvalidation_0-logloss:0.69587\n",
      "[120]\tvalidation_0-logloss:0.69596\n",
      "[122]\tvalidation_0-logloss:0.69588\n",
      "[124]\tvalidation_0-logloss:0.69603\n",
      "[126]\tvalidation_0-logloss:0.69591\n",
      "[128]\tvalidation_0-logloss:0.69614\n",
      "[130]\tvalidation_0-logloss:0.69655\n",
      "[132]\tvalidation_0-logloss:0.69646\n",
      "[134]\tvalidation_0-logloss:0.69665\n",
      "[136]\tvalidation_0-logloss:0.69669\n",
      "[138]\tvalidation_0-logloss:0.69674\n",
      "[140]\tvalidation_0-logloss:0.69694\n",
      "[142]\tvalidation_0-logloss:0.69694\n",
      "[144]\tvalidation_0-logloss:0.69794\n",
      "[146]\tvalidation_0-logloss:0.69837\n",
      "[148]\tvalidation_0-logloss:0.69827\n",
      "[150]\tvalidation_0-logloss:0.69842\n",
      "[152]\tvalidation_0-logloss:0.69848\n",
      "[154]\tvalidation_0-logloss:0.69846\n",
      "[156]\tvalidation_0-logloss:0.69861\n",
      "[158]\tvalidation_0-logloss:0.69870\n",
      "[160]\tvalidation_0-logloss:0.69891\n",
      "[162]\tvalidation_0-logloss:0.69880\n",
      "[164]\tvalidation_0-logloss:0.69876\n",
      "[166]\tvalidation_0-logloss:0.69929\n",
      "[168]\tvalidation_0-logloss:0.69949\n",
      "[170]\tvalidation_0-logloss:0.69980\n",
      "[172]\tvalidation_0-logloss:0.69954\n",
      "[174]\tvalidation_0-logloss:0.69963\n",
      "[176]\tvalidation_0-logloss:0.69960\n",
      "[178]\tvalidation_0-logloss:0.69964\n",
      "[180]\tvalidation_0-logloss:0.69979\n",
      "[182]\tvalidation_0-logloss:0.69982\n",
      "[184]\tvalidation_0-logloss:0.70000\n",
      "[186]\tvalidation_0-logloss:0.70001\n",
      "[188]\tvalidation_0-logloss:0.70000\n",
      "[190]\tvalidation_0-logloss:0.70017\n",
      "[192]\tvalidation_0-logloss:0.70008\n",
      "[194]\tvalidation_0-logloss:0.70005\n",
      "[196]\tvalidation_0-logloss:0.70001\n",
      "[198]\tvalidation_0-logloss:0.70022\n",
      "[200]\tvalidation_0-logloss:0.70027\n",
      "[202]\tvalidation_0-logloss:0.70022\n",
      "[204]\tvalidation_0-logloss:0.70027\n",
      "[206]\tvalidation_0-logloss:0.70029\n",
      "[208]\tvalidation_0-logloss:0.70027\n",
      "[210]\tvalidation_0-logloss:0.70031\n",
      "[212]\tvalidation_0-logloss:0.70040\n",
      "[214]\tvalidation_0-logloss:0.70048\n",
      "[216]\tvalidation_0-logloss:0.70058\n",
      "[218]\tvalidation_0-logloss:0.70070\n",
      "[220]\tvalidation_0-logloss:0.70109\n",
      "[222]\tvalidation_0-logloss:0.70090\n",
      "[224]\tvalidation_0-logloss:0.70105\n",
      "[226]\tvalidation_0-logloss:0.70101\n",
      "[228]\tvalidation_0-logloss:0.70104\n",
      "[230]\tvalidation_0-logloss:0.70134\n",
      "[232]\tvalidation_0-logloss:0.70144\n",
      "[234]\tvalidation_0-logloss:0.70160\n",
      "[236]\tvalidation_0-logloss:0.70159\n",
      "[238]\tvalidation_0-logloss:0.70149\n",
      "[240]\tvalidation_0-logloss:0.70135\n",
      "[242]\tvalidation_0-logloss:0.70117\n",
      "[244]\tvalidation_0-logloss:0.70156\n",
      "[246]\tvalidation_0-logloss:0.70167\n",
      "[248]\tvalidation_0-logloss:0.70173\n",
      "[250]\tvalidation_0-logloss:0.70186\n",
      "[252]\tvalidation_0-logloss:0.70190\n",
      "[254]\tvalidation_0-logloss:0.70179\n",
      "[256]\tvalidation_0-logloss:0.70176\n",
      "[258]\tvalidation_0-logloss:0.70144\n",
      "[260]\tvalidation_0-logloss:0.70141\n",
      "[262]\tvalidation_0-logloss:0.70153\n",
      "[264]\tvalidation_0-logloss:0.70141\n",
      "[266]\tvalidation_0-logloss:0.70148\n",
      "[268]\tvalidation_0-logloss:0.70154\n",
      "[270]\tvalidation_0-logloss:0.70148\n",
      "[272]\tvalidation_0-logloss:0.70155\n",
      "[274]\tvalidation_0-logloss:0.70163\n",
      "[276]\tvalidation_0-logloss:0.70169\n",
      "[278]\tvalidation_0-logloss:0.70176\n",
      "[280]\tvalidation_0-logloss:0.70155\n",
      "[282]\tvalidation_0-logloss:0.70183\n",
      "[284]\tvalidation_0-logloss:0.70190\n",
      "[286]\tvalidation_0-logloss:0.70221\n",
      "[288]\tvalidation_0-logloss:0.70219\n",
      "[290]\tvalidation_0-logloss:0.70229\n",
      "[291]\tvalidation_0-logloss:0.70246\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:01:08,170] Trial 58 finished with value: 0.6946129752187895 and parameters: {'eta': 0.07468305268374426, 'gamma': 0.4208642569863563, 'max_depth': 4, 'min_child_weight': 1, 'lambda': 0.018940487562039365, 'alpha': 0.7041154335191407}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:01:12] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69526\n",
      "[2]\tvalidation_0-logloss:0.69574\n",
      "[4]\tvalidation_0-logloss:0.69502\n",
      "[6]\tvalidation_0-logloss:0.69539\n",
      "[8]\tvalidation_0-logloss:0.69620\n",
      "[10]\tvalidation_0-logloss:0.69622\n",
      "[12]\tvalidation_0-logloss:0.69622\n",
      "[14]\tvalidation_0-logloss:0.69603\n",
      "[16]\tvalidation_0-logloss:0.69627\n",
      "[18]\tvalidation_0-logloss:0.69603\n",
      "[20]\tvalidation_0-logloss:0.69614\n",
      "[22]\tvalidation_0-logloss:0.69614\n",
      "[24]\tvalidation_0-logloss:0.69633\n",
      "[26]\tvalidation_0-logloss:0.69665\n",
      "[28]\tvalidation_0-logloss:0.69631\n",
      "[30]\tvalidation_0-logloss:0.69651\n",
      "[32]\tvalidation_0-logloss:0.69682\n",
      "[34]\tvalidation_0-logloss:0.69694\n",
      "[36]\tvalidation_0-logloss:0.69807\n",
      "[38]\tvalidation_0-logloss:0.69764\n",
      "[40]\tvalidation_0-logloss:0.69760\n",
      "[42]\tvalidation_0-logloss:0.69748\n",
      "[44]\tvalidation_0-logloss:0.69726\n",
      "[46]\tvalidation_0-logloss:0.69747\n",
      "[48]\tvalidation_0-logloss:0.69750\n",
      "[50]\tvalidation_0-logloss:0.69778\n",
      "[52]\tvalidation_0-logloss:0.69808\n",
      "[54]\tvalidation_0-logloss:0.69887\n",
      "[56]\tvalidation_0-logloss:0.69894\n",
      "[58]\tvalidation_0-logloss:0.69886\n",
      "[60]\tvalidation_0-logloss:0.69892\n",
      "[62]\tvalidation_0-logloss:0.69922\n",
      "[64]\tvalidation_0-logloss:0.69922\n",
      "[66]\tvalidation_0-logloss:0.69924\n",
      "[68]\tvalidation_0-logloss:0.69934\n",
      "[70]\tvalidation_0-logloss:0.69989\n",
      "[72]\tvalidation_0-logloss:0.69983\n",
      "[74]\tvalidation_0-logloss:0.70001\n",
      "[76]\tvalidation_0-logloss:0.70010\n",
      "[78]\tvalidation_0-logloss:0.70011\n",
      "[80]\tvalidation_0-logloss:0.70014\n",
      "[82]\tvalidation_0-logloss:0.70014\n",
      "[84]\tvalidation_0-logloss:0.70017\n",
      "[86]\tvalidation_0-logloss:0.70034\n",
      "[88]\tvalidation_0-logloss:0.70035\n",
      "[90]\tvalidation_0-logloss:0.70014\n",
      "[92]\tvalidation_0-logloss:0.70015\n",
      "[94]\tvalidation_0-logloss:0.70021\n",
      "[96]\tvalidation_0-logloss:0.70031\n",
      "[98]\tvalidation_0-logloss:0.69992\n",
      "[100]\tvalidation_0-logloss:0.69995\n",
      "[102]\tvalidation_0-logloss:0.69993\n",
      "[104]\tvalidation_0-logloss:0.69990\n",
      "[106]\tvalidation_0-logloss:0.69985\n",
      "[108]\tvalidation_0-logloss:0.69995\n",
      "[110]\tvalidation_0-logloss:0.69972\n",
      "[112]\tvalidation_0-logloss:0.69991\n",
      "[114]\tvalidation_0-logloss:0.70023\n",
      "[116]\tvalidation_0-logloss:0.70014\n",
      "[118]\tvalidation_0-logloss:0.70019\n",
      "[120]\tvalidation_0-logloss:0.70020\n",
      "[122]\tvalidation_0-logloss:0.70022\n",
      "[124]\tvalidation_0-logloss:0.70009\n",
      "[126]\tvalidation_0-logloss:0.70001\n",
      "[128]\tvalidation_0-logloss:0.70017\n",
      "[130]\tvalidation_0-logloss:0.69978\n",
      "[132]\tvalidation_0-logloss:0.69978\n",
      "[134]\tvalidation_0-logloss:0.69994\n",
      "[136]\tvalidation_0-logloss:0.69977\n",
      "[138]\tvalidation_0-logloss:0.69995\n",
      "[140]\tvalidation_0-logloss:0.70006\n",
      "[142]\tvalidation_0-logloss:0.70026\n",
      "[144]\tvalidation_0-logloss:0.70028\n",
      "[146]\tvalidation_0-logloss:0.70030\n",
      "[148]\tvalidation_0-logloss:0.70025\n",
      "[150]\tvalidation_0-logloss:0.70049\n",
      "[152]\tvalidation_0-logloss:0.70062\n",
      "[154]\tvalidation_0-logloss:0.70068\n",
      "[156]\tvalidation_0-logloss:0.70075\n",
      "[158]\tvalidation_0-logloss:0.70073\n",
      "[160]\tvalidation_0-logloss:0.70081\n",
      "[162]\tvalidation_0-logloss:0.70073\n",
      "[164]\tvalidation_0-logloss:0.70089\n",
      "[166]\tvalidation_0-logloss:0.70079\n",
      "[168]\tvalidation_0-logloss:0.70074\n",
      "[170]\tvalidation_0-logloss:0.70077\n",
      "[172]\tvalidation_0-logloss:0.70077\n",
      "[174]\tvalidation_0-logloss:0.70072\n",
      "[176]\tvalidation_0-logloss:0.70077\n",
      "[178]\tvalidation_0-logloss:0.70097\n",
      "[180]\tvalidation_0-logloss:0.70080\n",
      "[182]\tvalidation_0-logloss:0.70065\n",
      "[184]\tvalidation_0-logloss:0.70111\n",
      "[186]\tvalidation_0-logloss:0.70118\n",
      "[188]\tvalidation_0-logloss:0.70102\n",
      "[190]\tvalidation_0-logloss:0.70096\n",
      "[192]\tvalidation_0-logloss:0.70101\n",
      "[194]\tvalidation_0-logloss:0.70094\n",
      "[196]\tvalidation_0-logloss:0.70099\n",
      "[198]\tvalidation_0-logloss:0.70108\n",
      "[200]\tvalidation_0-logloss:0.70083\n",
      "[202]\tvalidation_0-logloss:0.70081\n",
      "[204]\tvalidation_0-logloss:0.70106\n",
      "[206]\tvalidation_0-logloss:0.70099\n",
      "[208]\tvalidation_0-logloss:0.70095\n",
      "[210]\tvalidation_0-logloss:0.70100\n",
      "[212]\tvalidation_0-logloss:0.70102\n",
      "[214]\tvalidation_0-logloss:0.70124\n",
      "[216]\tvalidation_0-logloss:0.70126\n",
      "[218]\tvalidation_0-logloss:0.70125\n",
      "[220]\tvalidation_0-logloss:0.70151\n",
      "[222]\tvalidation_0-logloss:0.70156\n",
      "[224]\tvalidation_0-logloss:0.70151\n",
      "[226]\tvalidation_0-logloss:0.70156\n",
      "[228]\tvalidation_0-logloss:0.70147\n",
      "[230]\tvalidation_0-logloss:0.70148\n",
      "[232]\tvalidation_0-logloss:0.70149\n",
      "[234]\tvalidation_0-logloss:0.70141\n",
      "[236]\tvalidation_0-logloss:0.70162\n",
      "[238]\tvalidation_0-logloss:0.70170\n",
      "[240]\tvalidation_0-logloss:0.70169\n",
      "[242]\tvalidation_0-logloss:0.70219\n",
      "[244]\tvalidation_0-logloss:0.70222\n",
      "[246]\tvalidation_0-logloss:0.70192\n",
      "[248]\tvalidation_0-logloss:0.70201\n",
      "[250]\tvalidation_0-logloss:0.70201\n",
      "[252]\tvalidation_0-logloss:0.70189\n",
      "[254]\tvalidation_0-logloss:0.70189\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:02:18,259] Trial 59 finished with value: 0.6950198345139443 and parameters: {'eta': 0.16806305359408324, 'gamma': 0.7065834399916578, 'max_depth': 2, 'min_child_weight': 0, 'lambda': 0.21167939574840644, 'alpha': 0.4774285135194909}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:02:23] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69576\n",
      "[2]\tvalidation_0-logloss:0.69478\n",
      "[4]\tvalidation_0-logloss:0.69595\n",
      "[6]\tvalidation_0-logloss:0.69493\n",
      "[8]\tvalidation_0-logloss:0.69525\n",
      "[10]\tvalidation_0-logloss:0.69544\n",
      "[12]\tvalidation_0-logloss:0.69435\n",
      "[14]\tvalidation_0-logloss:0.69423\n",
      "[16]\tvalidation_0-logloss:0.69425\n",
      "[18]\tvalidation_0-logloss:0.69419\n",
      "[20]\tvalidation_0-logloss:0.69437\n",
      "[22]\tvalidation_0-logloss:0.69453\n",
      "[24]\tvalidation_0-logloss:0.69464\n",
      "[26]\tvalidation_0-logloss:0.69436\n",
      "[28]\tvalidation_0-logloss:0.69432\n",
      "[30]\tvalidation_0-logloss:0.69449\n",
      "[32]\tvalidation_0-logloss:0.69476\n",
      "[34]\tvalidation_0-logloss:0.69539\n",
      "[36]\tvalidation_0-logloss:0.69542\n",
      "[38]\tvalidation_0-logloss:0.69529\n",
      "[40]\tvalidation_0-logloss:0.69547\n",
      "[42]\tvalidation_0-logloss:0.69582\n",
      "[44]\tvalidation_0-logloss:0.69569\n",
      "[46]\tvalidation_0-logloss:0.69581\n",
      "[48]\tvalidation_0-logloss:0.69602\n",
      "[50]\tvalidation_0-logloss:0.69598\n",
      "[52]\tvalidation_0-logloss:0.69591\n",
      "[54]\tvalidation_0-logloss:0.69702\n",
      "[56]\tvalidation_0-logloss:0.69715\n",
      "[58]\tvalidation_0-logloss:0.69755\n",
      "[60]\tvalidation_0-logloss:0.69759\n",
      "[62]\tvalidation_0-logloss:0.69809\n",
      "[64]\tvalidation_0-logloss:0.69782\n",
      "[66]\tvalidation_0-logloss:0.69750\n",
      "[68]\tvalidation_0-logloss:0.69790\n",
      "[70]\tvalidation_0-logloss:0.69942\n",
      "[72]\tvalidation_0-logloss:0.69952\n",
      "[74]\tvalidation_0-logloss:0.69965\n",
      "[76]\tvalidation_0-logloss:0.69993\n",
      "[78]\tvalidation_0-logloss:0.70044\n",
      "[80]\tvalidation_0-logloss:0.70115\n",
      "[82]\tvalidation_0-logloss:0.70265\n",
      "[84]\tvalidation_0-logloss:0.70248\n",
      "[86]\tvalidation_0-logloss:0.70261\n",
      "[88]\tvalidation_0-logloss:0.70266\n",
      "[90]\tvalidation_0-logloss:0.70285\n",
      "[92]\tvalidation_0-logloss:0.70304\n",
      "[94]\tvalidation_0-logloss:0.70332\n",
      "[96]\tvalidation_0-logloss:0.70404\n",
      "[98]\tvalidation_0-logloss:0.70398\n",
      "[100]\tvalidation_0-logloss:0.70424\n",
      "[102]\tvalidation_0-logloss:0.70459\n",
      "[104]\tvalidation_0-logloss:0.70480\n",
      "[106]\tvalidation_0-logloss:0.70505\n",
      "[108]\tvalidation_0-logloss:0.70466\n",
      "[110]\tvalidation_0-logloss:0.70475\n",
      "[112]\tvalidation_0-logloss:0.70513\n",
      "[114]\tvalidation_0-logloss:0.70469\n",
      "[116]\tvalidation_0-logloss:0.70495\n",
      "[118]\tvalidation_0-logloss:0.70505\n",
      "[120]\tvalidation_0-logloss:0.70504\n",
      "[122]\tvalidation_0-logloss:0.70507\n",
      "[124]\tvalidation_0-logloss:0.70502\n",
      "[126]\tvalidation_0-logloss:0.70676\n",
      "[128]\tvalidation_0-logloss:0.70698\n",
      "[130]\tvalidation_0-logloss:0.70720\n",
      "[132]\tvalidation_0-logloss:0.70861\n",
      "[134]\tvalidation_0-logloss:0.70869\n",
      "[136]\tvalidation_0-logloss:0.70902\n",
      "[138]\tvalidation_0-logloss:0.70924\n",
      "[140]\tvalidation_0-logloss:0.70932\n",
      "[142]\tvalidation_0-logloss:0.71050\n",
      "[144]\tvalidation_0-logloss:0.71049\n",
      "[146]\tvalidation_0-logloss:0.71020\n",
      "[148]\tvalidation_0-logloss:0.71067\n",
      "[150]\tvalidation_0-logloss:0.71114\n",
      "[152]\tvalidation_0-logloss:0.71208\n",
      "[154]\tvalidation_0-logloss:0.71204\n",
      "[156]\tvalidation_0-logloss:0.71192\n",
      "[158]\tvalidation_0-logloss:0.71236\n",
      "[160]\tvalidation_0-logloss:0.71210\n",
      "[162]\tvalidation_0-logloss:0.71231\n",
      "[164]\tvalidation_0-logloss:0.71238\n",
      "[166]\tvalidation_0-logloss:0.71247\n",
      "[168]\tvalidation_0-logloss:0.71274\n",
      "[170]\tvalidation_0-logloss:0.71399\n",
      "[172]\tvalidation_0-logloss:0.71671\n",
      "[174]\tvalidation_0-logloss:0.71667\n",
      "[176]\tvalidation_0-logloss:0.71668\n",
      "[178]\tvalidation_0-logloss:0.71607\n",
      "[180]\tvalidation_0-logloss:0.71521\n",
      "[182]\tvalidation_0-logloss:0.71578\n",
      "[184]\tvalidation_0-logloss:0.71634\n",
      "[186]\tvalidation_0-logloss:0.71660\n",
      "[188]\tvalidation_0-logloss:0.71646\n",
      "[190]\tvalidation_0-logloss:0.71677\n",
      "[192]\tvalidation_0-logloss:0.71681\n",
      "[194]\tvalidation_0-logloss:0.71770\n",
      "[196]\tvalidation_0-logloss:0.71765\n",
      "[198]\tvalidation_0-logloss:0.71754\n",
      "[200]\tvalidation_0-logloss:0.71839\n",
      "[202]\tvalidation_0-logloss:0.71858\n",
      "[204]\tvalidation_0-logloss:0.71849\n",
      "[206]\tvalidation_0-logloss:0.71833\n",
      "[208]\tvalidation_0-logloss:0.71694\n",
      "[210]\tvalidation_0-logloss:0.71780\n",
      "[212]\tvalidation_0-logloss:0.71883\n",
      "[214]\tvalidation_0-logloss:0.71881\n",
      "[216]\tvalidation_0-logloss:0.71879\n",
      "[218]\tvalidation_0-logloss:0.71841\n",
      "[220]\tvalidation_0-logloss:0.71843\n",
      "[222]\tvalidation_0-logloss:0.71839\n",
      "[224]\tvalidation_0-logloss:0.71831\n",
      "[226]\tvalidation_0-logloss:0.71837\n",
      "[228]\tvalidation_0-logloss:0.71822\n",
      "[230]\tvalidation_0-logloss:0.71919\n",
      "[232]\tvalidation_0-logloss:0.71944\n",
      "[234]\tvalidation_0-logloss:0.71966\n",
      "[236]\tvalidation_0-logloss:0.72034\n",
      "[238]\tvalidation_0-logloss:0.72043\n",
      "[240]\tvalidation_0-logloss:0.72064\n",
      "[242]\tvalidation_0-logloss:0.72147\n",
      "[244]\tvalidation_0-logloss:0.72137\n",
      "[246]\tvalidation_0-logloss:0.72265\n",
      "[248]\tvalidation_0-logloss:0.72310\n",
      "[250]\tvalidation_0-logloss:0.72331\n",
      "[252]\tvalidation_0-logloss:0.72346\n",
      "[254]\tvalidation_0-logloss:0.72331\n",
      "[256]\tvalidation_0-logloss:0.72294\n",
      "[258]\tvalidation_0-logloss:0.72241\n",
      "[260]\tvalidation_0-logloss:0.72279\n",
      "[262]\tvalidation_0-logloss:0.72358\n",
      "[264]\tvalidation_0-logloss:0.72393\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:03:30,055] Trial 60 finished with value: 0.6939673430694888 and parameters: {'eta': 0.2507095268419643, 'gamma': 0.18980106309818795, 'max_depth': 3, 'min_child_weight': 3, 'lambda': 0.1423383973199641, 'alpha': 0.93589095593489}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:03:34] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69581\n",
      "[2]\tvalidation_0-logloss:0.69654\n",
      "[4]\tvalidation_0-logloss:0.69631\n",
      "[6]\tvalidation_0-logloss:0.69611\n",
      "[8]\tvalidation_0-logloss:0.69591\n",
      "[10]\tvalidation_0-logloss:0.69631\n",
      "[12]\tvalidation_0-logloss:0.69603\n",
      "[14]\tvalidation_0-logloss:0.69539\n",
      "[16]\tvalidation_0-logloss:0.69628\n",
      "[18]\tvalidation_0-logloss:0.69618\n",
      "[20]\tvalidation_0-logloss:0.69572\n",
      "[22]\tvalidation_0-logloss:0.69584\n",
      "[24]\tvalidation_0-logloss:0.69644\n",
      "[26]\tvalidation_0-logloss:0.69525\n",
      "[28]\tvalidation_0-logloss:0.69611\n",
      "[30]\tvalidation_0-logloss:0.69679\n",
      "[32]\tvalidation_0-logloss:0.69662\n",
      "[34]\tvalidation_0-logloss:0.69648\n",
      "[36]\tvalidation_0-logloss:0.69690\n",
      "[38]\tvalidation_0-logloss:0.69701\n",
      "[40]\tvalidation_0-logloss:0.69714\n",
      "[42]\tvalidation_0-logloss:0.69752\n",
      "[44]\tvalidation_0-logloss:0.69763\n",
      "[46]\tvalidation_0-logloss:0.69774\n",
      "[48]\tvalidation_0-logloss:0.69794\n",
      "[50]\tvalidation_0-logloss:0.69826\n",
      "[52]\tvalidation_0-logloss:0.69822\n",
      "[54]\tvalidation_0-logloss:0.69885\n",
      "[56]\tvalidation_0-logloss:0.69912\n",
      "[58]\tvalidation_0-logloss:0.69926\n",
      "[60]\tvalidation_0-logloss:0.69918\n",
      "[62]\tvalidation_0-logloss:0.69939\n",
      "[64]\tvalidation_0-logloss:0.70245\n",
      "[66]\tvalidation_0-logloss:0.70242\n",
      "[68]\tvalidation_0-logloss:0.70249\n",
      "[70]\tvalidation_0-logloss:0.70266\n",
      "[72]\tvalidation_0-logloss:0.70252\n",
      "[74]\tvalidation_0-logloss:0.70275\n",
      "[76]\tvalidation_0-logloss:0.70301\n",
      "[78]\tvalidation_0-logloss:0.70337\n",
      "[80]\tvalidation_0-logloss:0.70332\n",
      "[82]\tvalidation_0-logloss:0.70324\n",
      "[84]\tvalidation_0-logloss:0.70319\n",
      "[86]\tvalidation_0-logloss:0.70353\n",
      "[88]\tvalidation_0-logloss:0.70342\n",
      "[90]\tvalidation_0-logloss:0.70340\n",
      "[92]\tvalidation_0-logloss:0.70430\n",
      "[94]\tvalidation_0-logloss:0.70500\n",
      "[96]\tvalidation_0-logloss:0.70489\n",
      "[98]\tvalidation_0-logloss:0.70503\n",
      "[100]\tvalidation_0-logloss:0.70499\n",
      "[102]\tvalidation_0-logloss:0.70507\n",
      "[104]\tvalidation_0-logloss:0.70513\n",
      "[106]\tvalidation_0-logloss:0.70496\n",
      "[108]\tvalidation_0-logloss:0.70484\n",
      "[110]\tvalidation_0-logloss:0.70478\n",
      "[112]\tvalidation_0-logloss:0.70483\n",
      "[114]\tvalidation_0-logloss:0.70697\n",
      "[116]\tvalidation_0-logloss:0.70786\n",
      "[118]\tvalidation_0-logloss:0.70817\n",
      "[120]\tvalidation_0-logloss:0.70852\n",
      "[122]\tvalidation_0-logloss:0.70847\n",
      "[124]\tvalidation_0-logloss:0.70926\n",
      "[126]\tvalidation_0-logloss:0.70948\n",
      "[128]\tvalidation_0-logloss:0.70942\n",
      "[130]\tvalidation_0-logloss:0.70951\n",
      "[132]\tvalidation_0-logloss:0.70966\n",
      "[134]\tvalidation_0-logloss:0.70927\n",
      "[136]\tvalidation_0-logloss:0.70889\n",
      "[138]\tvalidation_0-logloss:0.70900\n",
      "[140]\tvalidation_0-logloss:0.70918\n",
      "[142]\tvalidation_0-logloss:0.70923\n",
      "[144]\tvalidation_0-logloss:0.70898\n",
      "[146]\tvalidation_0-logloss:0.70907\n",
      "[148]\tvalidation_0-logloss:0.70970\n",
      "[150]\tvalidation_0-logloss:0.70978\n",
      "[152]\tvalidation_0-logloss:0.71067\n",
      "[154]\tvalidation_0-logloss:0.71067\n",
      "[156]\tvalidation_0-logloss:0.71092\n",
      "[158]\tvalidation_0-logloss:0.71083\n",
      "[160]\tvalidation_0-logloss:0.71132\n",
      "[162]\tvalidation_0-logloss:0.71203\n",
      "[164]\tvalidation_0-logloss:0.71181\n",
      "[166]\tvalidation_0-logloss:0.71217\n",
      "[168]\tvalidation_0-logloss:0.71251\n",
      "[170]\tvalidation_0-logloss:0.71234\n",
      "[172]\tvalidation_0-logloss:0.71217\n",
      "[174]\tvalidation_0-logloss:0.71221\n",
      "[176]\tvalidation_0-logloss:0.71207\n",
      "[178]\tvalidation_0-logloss:0.71195\n",
      "[180]\tvalidation_0-logloss:0.71215\n",
      "[182]\tvalidation_0-logloss:0.71240\n",
      "[184]\tvalidation_0-logloss:0.71240\n",
      "[186]\tvalidation_0-logloss:0.71218\n",
      "[188]\tvalidation_0-logloss:0.71234\n",
      "[190]\tvalidation_0-logloss:0.71317\n",
      "[192]\tvalidation_0-logloss:0.71269\n",
      "[194]\tvalidation_0-logloss:0.71368\n",
      "[196]\tvalidation_0-logloss:0.71369\n",
      "[198]\tvalidation_0-logloss:0.71118\n",
      "[200]\tvalidation_0-logloss:0.71143\n",
      "[202]\tvalidation_0-logloss:0.71148\n",
      "[204]\tvalidation_0-logloss:0.71167\n",
      "[206]\tvalidation_0-logloss:0.71179\n",
      "[208]\tvalidation_0-logloss:0.71193\n",
      "[210]\tvalidation_0-logloss:0.71175\n",
      "[212]\tvalidation_0-logloss:0.71178\n",
      "[214]\tvalidation_0-logloss:0.71146\n",
      "[216]\tvalidation_0-logloss:0.71191\n",
      "[218]\tvalidation_0-logloss:0.71269\n",
      "[220]\tvalidation_0-logloss:0.71261\n",
      "[222]\tvalidation_0-logloss:0.71318\n",
      "[224]\tvalidation_0-logloss:0.71454\n",
      "[226]\tvalidation_0-logloss:0.71466\n",
      "[228]\tvalidation_0-logloss:0.71476\n",
      "[230]\tvalidation_0-logloss:0.71634\n",
      "[232]\tvalidation_0-logloss:0.71574\n",
      "[234]\tvalidation_0-logloss:0.71586\n",
      "[236]\tvalidation_0-logloss:0.71642\n",
      "[238]\tvalidation_0-logloss:0.71598\n",
      "[240]\tvalidation_0-logloss:0.71571\n",
      "[242]\tvalidation_0-logloss:0.71585\n",
      "[244]\tvalidation_0-logloss:0.71607\n",
      "[246]\tvalidation_0-logloss:0.71640\n",
      "[248]\tvalidation_0-logloss:0.71679\n",
      "[250]\tvalidation_0-logloss:0.71769\n",
      "[252]\tvalidation_0-logloss:0.71847\n",
      "[254]\tvalidation_0-logloss:0.71874\n",
      "[256]\tvalidation_0-logloss:0.71867\n",
      "[258]\tvalidation_0-logloss:0.71862\n",
      "[260]\tvalidation_0-logloss:0.71865\n",
      "[262]\tvalidation_0-logloss:0.71899\n",
      "[264]\tvalidation_0-logloss:0.71969\n",
      "[266]\tvalidation_0-logloss:0.72043\n",
      "[268]\tvalidation_0-logloss:0.72147\n",
      "[270]\tvalidation_0-logloss:0.72175\n",
      "[272]\tvalidation_0-logloss:0.72174\n",
      "[274]\tvalidation_0-logloss:0.72159\n",
      "[276]\tvalidation_0-logloss:0.72203\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:04:45,408] Trial 61 finished with value: 0.6951789267534422 and parameters: {'eta': 0.26515928901723024, 'gamma': 0.147892771802433, 'max_depth': 3, 'min_child_weight': 3, 'lambda': 0.150493813032049, 'alpha': 0.9270459672509799}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:04:50] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69515\n",
      "[2]\tvalidation_0-logloss:0.69492\n",
      "[4]\tvalidation_0-logloss:0.69516\n",
      "[6]\tvalidation_0-logloss:0.69547\n",
      "[8]\tvalidation_0-logloss:0.69601\n",
      "[10]\tvalidation_0-logloss:0.69665\n",
      "[12]\tvalidation_0-logloss:0.69580\n",
      "[14]\tvalidation_0-logloss:0.69558\n",
      "[16]\tvalidation_0-logloss:0.69540\n",
      "[18]\tvalidation_0-logloss:0.69529\n",
      "[20]\tvalidation_0-logloss:0.69547\n",
      "[22]\tvalidation_0-logloss:0.69549\n",
      "[24]\tvalidation_0-logloss:0.69547\n",
      "[26]\tvalidation_0-logloss:0.69570\n",
      "[28]\tvalidation_0-logloss:0.69588\n",
      "[30]\tvalidation_0-logloss:0.69563\n",
      "[32]\tvalidation_0-logloss:0.69588\n",
      "[34]\tvalidation_0-logloss:0.69637\n",
      "[36]\tvalidation_0-logloss:0.69622\n",
      "[38]\tvalidation_0-logloss:0.69558\n",
      "[40]\tvalidation_0-logloss:0.69553\n",
      "[42]\tvalidation_0-logloss:0.69550\n",
      "[44]\tvalidation_0-logloss:0.69552\n",
      "[46]\tvalidation_0-logloss:0.69582\n",
      "[48]\tvalidation_0-logloss:0.69612\n",
      "[50]\tvalidation_0-logloss:0.69611\n",
      "[52]\tvalidation_0-logloss:0.69607\n",
      "[54]\tvalidation_0-logloss:0.69595\n",
      "[56]\tvalidation_0-logloss:0.69609\n",
      "[58]\tvalidation_0-logloss:0.69576\n",
      "[60]\tvalidation_0-logloss:0.69579\n",
      "[62]\tvalidation_0-logloss:0.69614\n",
      "[64]\tvalidation_0-logloss:0.69620\n",
      "[66]\tvalidation_0-logloss:0.69623\n",
      "[68]\tvalidation_0-logloss:0.69615\n",
      "[70]\tvalidation_0-logloss:0.69639\n",
      "[72]\tvalidation_0-logloss:0.69620\n",
      "[74]\tvalidation_0-logloss:0.69625\n",
      "[76]\tvalidation_0-logloss:0.69617\n",
      "[78]\tvalidation_0-logloss:0.69598\n",
      "[80]\tvalidation_0-logloss:0.69604\n",
      "[82]\tvalidation_0-logloss:0.69620\n",
      "[84]\tvalidation_0-logloss:0.69621\n",
      "[86]\tvalidation_0-logloss:0.69608\n",
      "[88]\tvalidation_0-logloss:0.69652\n",
      "[90]\tvalidation_0-logloss:0.69644\n",
      "[92]\tvalidation_0-logloss:0.69677\n",
      "[94]\tvalidation_0-logloss:0.69682\n",
      "[96]\tvalidation_0-logloss:0.69701\n",
      "[98]\tvalidation_0-logloss:0.69710\n",
      "[100]\tvalidation_0-logloss:0.69712\n",
      "[102]\tvalidation_0-logloss:0.69672\n",
      "[104]\tvalidation_0-logloss:0.69703\n",
      "[106]\tvalidation_0-logloss:0.69697\n",
      "[108]\tvalidation_0-logloss:0.69699\n",
      "[110]\tvalidation_0-logloss:0.69698\n",
      "[112]\tvalidation_0-logloss:0.69704\n",
      "[114]\tvalidation_0-logloss:0.69710\n",
      "[116]\tvalidation_0-logloss:0.69691\n",
      "[118]\tvalidation_0-logloss:0.69699\n",
      "[120]\tvalidation_0-logloss:0.69698\n",
      "[122]\tvalidation_0-logloss:0.69694\n",
      "[124]\tvalidation_0-logloss:0.69698\n",
      "[126]\tvalidation_0-logloss:0.69720\n",
      "[128]\tvalidation_0-logloss:0.69678\n",
      "[130]\tvalidation_0-logloss:0.69672\n",
      "[132]\tvalidation_0-logloss:0.69658\n",
      "[134]\tvalidation_0-logloss:0.69664\n",
      "[136]\tvalidation_0-logloss:0.69658\n",
      "[138]\tvalidation_0-logloss:0.69638\n",
      "[140]\tvalidation_0-logloss:0.69651\n",
      "[142]\tvalidation_0-logloss:0.69653\n",
      "[144]\tvalidation_0-logloss:0.69654\n",
      "[146]\tvalidation_0-logloss:0.69654\n",
      "[148]\tvalidation_0-logloss:0.69655\n",
      "[150]\tvalidation_0-logloss:0.69654\n",
      "[152]\tvalidation_0-logloss:0.69649\n",
      "[154]\tvalidation_0-logloss:0.69632\n",
      "[156]\tvalidation_0-logloss:0.69647\n",
      "[158]\tvalidation_0-logloss:0.69641\n",
      "[160]\tvalidation_0-logloss:0.69659\n",
      "[162]\tvalidation_0-logloss:0.69647\n",
      "[164]\tvalidation_0-logloss:0.69664\n",
      "[166]\tvalidation_0-logloss:0.69651\n",
      "[168]\tvalidation_0-logloss:0.69649\n",
      "[170]\tvalidation_0-logloss:0.69651\n",
      "[172]\tvalidation_0-logloss:0.69660\n",
      "[174]\tvalidation_0-logloss:0.69653\n",
      "[176]\tvalidation_0-logloss:0.69657\n",
      "[178]\tvalidation_0-logloss:0.69654\n",
      "[180]\tvalidation_0-logloss:0.69654\n",
      "[182]\tvalidation_0-logloss:0.69638\n",
      "[184]\tvalidation_0-logloss:0.69657\n",
      "[186]\tvalidation_0-logloss:0.69649\n",
      "[188]\tvalidation_0-logloss:0.69654\n",
      "[190]\tvalidation_0-logloss:0.69662\n",
      "[192]\tvalidation_0-logloss:0.69662\n",
      "[194]\tvalidation_0-logloss:0.69666\n",
      "[196]\tvalidation_0-logloss:0.69678\n",
      "[198]\tvalidation_0-logloss:0.69687\n",
      "[200]\tvalidation_0-logloss:0.69654\n",
      "[202]\tvalidation_0-logloss:0.69663\n",
      "[204]\tvalidation_0-logloss:0.69711\n",
      "[206]\tvalidation_0-logloss:0.69699\n",
      "[208]\tvalidation_0-logloss:0.69679\n",
      "[210]\tvalidation_0-logloss:0.69679\n",
      "[212]\tvalidation_0-logloss:0.69676\n",
      "[214]\tvalidation_0-logloss:0.69671\n",
      "[216]\tvalidation_0-logloss:0.69668\n",
      "[218]\tvalidation_0-logloss:0.69664\n",
      "[220]\tvalidation_0-logloss:0.69651\n",
      "[222]\tvalidation_0-logloss:0.69679\n",
      "[224]\tvalidation_0-logloss:0.69687\n",
      "[226]\tvalidation_0-logloss:0.69687\n",
      "[228]\tvalidation_0-logloss:0.69685\n",
      "[230]\tvalidation_0-logloss:0.69680\n",
      "[232]\tvalidation_0-logloss:0.69685\n",
      "[234]\tvalidation_0-logloss:0.69690\n",
      "[236]\tvalidation_0-logloss:0.69683\n",
      "[238]\tvalidation_0-logloss:0.69678\n",
      "[240]\tvalidation_0-logloss:0.69677\n",
      "[242]\tvalidation_0-logloss:0.69674\n",
      "[244]\tvalidation_0-logloss:0.69683\n",
      "[246]\tvalidation_0-logloss:0.69678\n",
      "[248]\tvalidation_0-logloss:0.69701\n",
      "[250]\tvalidation_0-logloss:0.69674\n",
      "[252]\tvalidation_0-logloss:0.69811\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:05:48,032] Trial 62 finished with value: 0.6949219176270601 and parameters: {'eta': 0.25784558819835296, 'gamma': 0.2098496104710709, 'max_depth': 1, 'min_child_weight': 2, 'lambda': 0.08464599247683356, 'alpha': 0.9940248008113245}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:05:52] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69561\n",
      "[2]\tvalidation_0-logloss:0.69535\n",
      "[4]\tvalidation_0-logloss:0.69575\n",
      "[6]\tvalidation_0-logloss:0.69600\n",
      "[8]\tvalidation_0-logloss:0.69461\n",
      "[10]\tvalidation_0-logloss:0.69470\n",
      "[12]\tvalidation_0-logloss:0.69485\n",
      "[14]\tvalidation_0-logloss:0.69492\n",
      "[16]\tvalidation_0-logloss:0.69435\n",
      "[18]\tvalidation_0-logloss:0.69441\n",
      "[20]\tvalidation_0-logloss:0.69410\n",
      "[22]\tvalidation_0-logloss:0.69474\n",
      "[24]\tvalidation_0-logloss:0.69436\n",
      "[26]\tvalidation_0-logloss:0.69432\n",
      "[28]\tvalidation_0-logloss:0.69495\n",
      "[30]\tvalidation_0-logloss:0.69498\n",
      "[32]\tvalidation_0-logloss:0.69467\n",
      "[34]\tvalidation_0-logloss:0.69418\n",
      "[36]\tvalidation_0-logloss:0.69415\n",
      "[38]\tvalidation_0-logloss:0.69337\n",
      "[40]\tvalidation_0-logloss:0.69404\n",
      "[42]\tvalidation_0-logloss:0.69396\n",
      "[44]\tvalidation_0-logloss:0.69367\n",
      "[46]\tvalidation_0-logloss:0.69396\n",
      "[48]\tvalidation_0-logloss:0.69369\n",
      "[50]\tvalidation_0-logloss:0.69418\n",
      "[52]\tvalidation_0-logloss:0.69441\n",
      "[54]\tvalidation_0-logloss:0.69445\n",
      "[56]\tvalidation_0-logloss:0.69441\n",
      "[58]\tvalidation_0-logloss:0.69455\n",
      "[60]\tvalidation_0-logloss:0.69600\n",
      "[62]\tvalidation_0-logloss:0.69537\n",
      "[64]\tvalidation_0-logloss:0.69535\n",
      "[66]\tvalidation_0-logloss:0.69795\n",
      "[68]\tvalidation_0-logloss:0.69763\n",
      "[70]\tvalidation_0-logloss:0.69758\n",
      "[72]\tvalidation_0-logloss:0.69791\n",
      "[74]\tvalidation_0-logloss:0.69806\n",
      "[76]\tvalidation_0-logloss:0.69826\n",
      "[78]\tvalidation_0-logloss:0.69793\n",
      "[80]\tvalidation_0-logloss:0.69838\n",
      "[82]\tvalidation_0-logloss:0.69846\n",
      "[84]\tvalidation_0-logloss:0.69849\n",
      "[86]\tvalidation_0-logloss:0.69890\n",
      "[88]\tvalidation_0-logloss:0.70016\n",
      "[90]\tvalidation_0-logloss:0.70023\n",
      "[92]\tvalidation_0-logloss:0.70045\n",
      "[94]\tvalidation_0-logloss:0.70056\n",
      "[96]\tvalidation_0-logloss:0.70074\n",
      "[98]\tvalidation_0-logloss:0.70070\n",
      "[100]\tvalidation_0-logloss:0.70124\n",
      "[102]\tvalidation_0-logloss:0.70144\n",
      "[104]\tvalidation_0-logloss:0.70176\n",
      "[106]\tvalidation_0-logloss:0.70174\n",
      "[108]\tvalidation_0-logloss:0.70200\n",
      "[110]\tvalidation_0-logloss:0.70286\n",
      "[112]\tvalidation_0-logloss:0.70296\n",
      "[114]\tvalidation_0-logloss:0.70346\n",
      "[116]\tvalidation_0-logloss:0.70346\n",
      "[118]\tvalidation_0-logloss:0.70359\n",
      "[120]\tvalidation_0-logloss:0.70347\n",
      "[122]\tvalidation_0-logloss:0.70371\n",
      "[124]\tvalidation_0-logloss:0.70381\n",
      "[126]\tvalidation_0-logloss:0.70396\n",
      "[128]\tvalidation_0-logloss:0.70384\n",
      "[130]\tvalidation_0-logloss:0.70376\n",
      "[132]\tvalidation_0-logloss:0.70440\n",
      "[134]\tvalidation_0-logloss:0.70474\n",
      "[136]\tvalidation_0-logloss:0.70446\n",
      "[138]\tvalidation_0-logloss:0.70465\n",
      "[140]\tvalidation_0-logloss:0.70502\n",
      "[142]\tvalidation_0-logloss:0.70526\n",
      "[144]\tvalidation_0-logloss:0.70680\n",
      "[146]\tvalidation_0-logloss:0.70679\n",
      "[148]\tvalidation_0-logloss:0.70697\n",
      "[150]\tvalidation_0-logloss:0.70690\n",
      "[152]\tvalidation_0-logloss:0.70716\n",
      "[154]\tvalidation_0-logloss:0.70703\n",
      "[156]\tvalidation_0-logloss:0.70757\n",
      "[158]\tvalidation_0-logloss:0.70862\n",
      "[160]\tvalidation_0-logloss:0.70862\n",
      "[162]\tvalidation_0-logloss:0.70871\n",
      "[164]\tvalidation_0-logloss:0.70898\n",
      "[166]\tvalidation_0-logloss:0.70900\n",
      "[168]\tvalidation_0-logloss:0.70903\n",
      "[170]\tvalidation_0-logloss:0.70871\n",
      "[172]\tvalidation_0-logloss:0.70874\n",
      "[174]\tvalidation_0-logloss:0.70808\n",
      "[176]\tvalidation_0-logloss:0.70866\n",
      "[178]\tvalidation_0-logloss:0.70834\n",
      "[180]\tvalidation_0-logloss:0.70868\n",
      "[182]\tvalidation_0-logloss:0.70822\n",
      "[184]\tvalidation_0-logloss:0.70865\n",
      "[186]\tvalidation_0-logloss:0.70849\n",
      "[188]\tvalidation_0-logloss:0.70857\n",
      "[190]\tvalidation_0-logloss:0.70857\n",
      "[192]\tvalidation_0-logloss:0.70895\n",
      "[194]\tvalidation_0-logloss:0.70853\n",
      "[196]\tvalidation_0-logloss:0.70855\n",
      "[198]\tvalidation_0-logloss:0.70814\n",
      "[200]\tvalidation_0-logloss:0.70869\n",
      "[202]\tvalidation_0-logloss:0.70910\n",
      "[204]\tvalidation_0-logloss:0.70908\n",
      "[206]\tvalidation_0-logloss:0.70962\n",
      "[208]\tvalidation_0-logloss:0.70990\n",
      "[210]\tvalidation_0-logloss:0.71042\n",
      "[212]\tvalidation_0-logloss:0.71021\n",
      "[214]\tvalidation_0-logloss:0.71000\n",
      "[216]\tvalidation_0-logloss:0.70997\n",
      "[218]\tvalidation_0-logloss:0.71009\n",
      "[220]\tvalidation_0-logloss:0.71026\n",
      "[222]\tvalidation_0-logloss:0.71079\n",
      "[224]\tvalidation_0-logloss:0.71068\n",
      "[226]\tvalidation_0-logloss:0.71122\n",
      "[228]\tvalidation_0-logloss:0.71111\n",
      "[230]\tvalidation_0-logloss:0.71117\n",
      "[232]\tvalidation_0-logloss:0.71110\n",
      "[234]\tvalidation_0-logloss:0.71173\n",
      "[236]\tvalidation_0-logloss:0.71217\n",
      "[238]\tvalidation_0-logloss:0.71231\n",
      "[240]\tvalidation_0-logloss:0.71234\n",
      "[242]\tvalidation_0-logloss:0.71247\n",
      "[244]\tvalidation_0-logloss:0.71278\n",
      "[246]\tvalidation_0-logloss:0.71287\n",
      "[248]\tvalidation_0-logloss:0.71291\n",
      "[250]\tvalidation_0-logloss:0.71285\n",
      "[252]\tvalidation_0-logloss:0.71279\n",
      "[254]\tvalidation_0-logloss:0.71299\n",
      "[256]\tvalidation_0-logloss:0.71294\n",
      "[258]\tvalidation_0-logloss:0.71361\n",
      "[260]\tvalidation_0-logloss:0.71366\n",
      "[262]\tvalidation_0-logloss:0.71342\n",
      "[264]\tvalidation_0-logloss:0.71380\n",
      "[266]\tvalidation_0-logloss:0.71506\n",
      "[268]\tvalidation_0-logloss:0.71485\n",
      "[270]\tvalidation_0-logloss:0.71484\n",
      "[272]\tvalidation_0-logloss:0.71453\n",
      "[274]\tvalidation_0-logloss:0.71445\n",
      "[276]\tvalidation_0-logloss:0.71456\n",
      "[278]\tvalidation_0-logloss:0.71600\n",
      "[280]\tvalidation_0-logloss:0.71594\n",
      "[282]\tvalidation_0-logloss:0.71629\n",
      "[284]\tvalidation_0-logloss:0.71625\n",
      "[286]\tvalidation_0-logloss:0.71640\n",
      "[288]\tvalidation_0-logloss:0.71659\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:07:09,943] Trial 63 finished with value: 0.6933321888881878 and parameters: {'eta': 0.20832760381615756, 'gamma': 0.48444721815130487, 'max_depth': 3, 'min_child_weight': 1, 'lambda': 0.24142741697181785, 'alpha': 0.9073148984942117}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:07:14] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69577\n",
      "[2]\tvalidation_0-logloss:0.69518\n",
      "[4]\tvalidation_0-logloss:0.69490\n",
      "[6]\tvalidation_0-logloss:0.69466\n",
      "[8]\tvalidation_0-logloss:0.69462\n",
      "[10]\tvalidation_0-logloss:0.69494\n",
      "[12]\tvalidation_0-logloss:0.69497\n",
      "[14]\tvalidation_0-logloss:0.69432\n",
      "[16]\tvalidation_0-logloss:0.69448\n",
      "[18]\tvalidation_0-logloss:0.69450\n",
      "[20]\tvalidation_0-logloss:0.69500\n",
      "[22]\tvalidation_0-logloss:0.69521\n",
      "[24]\tvalidation_0-logloss:0.69630\n",
      "[26]\tvalidation_0-logloss:0.69800\n",
      "[28]\tvalidation_0-logloss:0.69776\n",
      "[30]\tvalidation_0-logloss:0.69806\n",
      "[32]\tvalidation_0-logloss:0.69788\n",
      "[34]\tvalidation_0-logloss:0.69802\n",
      "[36]\tvalidation_0-logloss:0.69844\n",
      "[38]\tvalidation_0-logloss:0.69845\n",
      "[40]\tvalidation_0-logloss:0.69798\n",
      "[42]\tvalidation_0-logloss:0.69842\n",
      "[44]\tvalidation_0-logloss:0.69916\n",
      "[46]\tvalidation_0-logloss:0.69910\n",
      "[48]\tvalidation_0-logloss:0.69965\n",
      "[50]\tvalidation_0-logloss:0.70143\n",
      "[52]\tvalidation_0-logloss:0.70167\n",
      "[54]\tvalidation_0-logloss:0.70198\n",
      "[56]\tvalidation_0-logloss:0.70187\n",
      "[58]\tvalidation_0-logloss:0.70233\n",
      "[60]\tvalidation_0-logloss:0.70344\n",
      "[62]\tvalidation_0-logloss:0.70394\n",
      "[64]\tvalidation_0-logloss:0.70600\n",
      "[66]\tvalidation_0-logloss:0.70618\n",
      "[68]\tvalidation_0-logloss:0.70640\n",
      "[70]\tvalidation_0-logloss:0.70583\n",
      "[72]\tvalidation_0-logloss:0.70559\n",
      "[74]\tvalidation_0-logloss:0.70555\n",
      "[76]\tvalidation_0-logloss:0.70641\n",
      "[78]\tvalidation_0-logloss:0.70589\n",
      "[80]\tvalidation_0-logloss:0.70638\n",
      "[82]\tvalidation_0-logloss:0.70823\n",
      "[84]\tvalidation_0-logloss:0.70776\n",
      "[86]\tvalidation_0-logloss:0.70779\n",
      "[88]\tvalidation_0-logloss:0.70785\n",
      "[90]\tvalidation_0-logloss:0.70856\n",
      "[92]\tvalidation_0-logloss:0.70906\n",
      "[94]\tvalidation_0-logloss:0.70918\n",
      "[96]\tvalidation_0-logloss:0.70914\n",
      "[98]\tvalidation_0-logloss:0.70925\n",
      "[100]\tvalidation_0-logloss:0.71067\n",
      "[102]\tvalidation_0-logloss:0.71134\n",
      "[104]\tvalidation_0-logloss:0.71145\n",
      "[106]\tvalidation_0-logloss:0.71134\n",
      "[108]\tvalidation_0-logloss:0.71182\n",
      "[110]\tvalidation_0-logloss:0.71187\n",
      "[112]\tvalidation_0-logloss:0.71137\n",
      "[114]\tvalidation_0-logloss:0.71153\n",
      "[116]\tvalidation_0-logloss:0.71225\n",
      "[118]\tvalidation_0-logloss:0.71222\n",
      "[120]\tvalidation_0-logloss:0.71223\n",
      "[122]\tvalidation_0-logloss:0.71181\n",
      "[124]\tvalidation_0-logloss:0.71252\n",
      "[126]\tvalidation_0-logloss:0.71302\n",
      "[128]\tvalidation_0-logloss:0.71308\n",
      "[130]\tvalidation_0-logloss:0.71335\n",
      "[132]\tvalidation_0-logloss:0.71353\n",
      "[134]\tvalidation_0-logloss:0.71375\n",
      "[136]\tvalidation_0-logloss:0.71394\n",
      "[138]\tvalidation_0-logloss:0.71407\n",
      "[140]\tvalidation_0-logloss:0.71539\n",
      "[142]\tvalidation_0-logloss:0.71556\n",
      "[144]\tvalidation_0-logloss:0.71588\n",
      "[146]\tvalidation_0-logloss:0.71595\n",
      "[148]\tvalidation_0-logloss:0.71582\n",
      "[150]\tvalidation_0-logloss:0.71577\n",
      "[152]\tvalidation_0-logloss:0.71589\n",
      "[154]\tvalidation_0-logloss:0.71624\n",
      "[156]\tvalidation_0-logloss:0.71650\n",
      "[158]\tvalidation_0-logloss:0.71646\n",
      "[160]\tvalidation_0-logloss:0.71664\n",
      "[162]\tvalidation_0-logloss:0.71655\n",
      "[164]\tvalidation_0-logloss:0.71724\n",
      "[166]\tvalidation_0-logloss:0.71721\n",
      "[168]\tvalidation_0-logloss:0.71722\n",
      "[170]\tvalidation_0-logloss:0.71737\n",
      "[172]\tvalidation_0-logloss:0.71725\n",
      "[174]\tvalidation_0-logloss:0.71825\n",
      "[176]\tvalidation_0-logloss:0.71825\n",
      "[178]\tvalidation_0-logloss:0.71835\n",
      "[180]\tvalidation_0-logloss:0.71830\n",
      "[182]\tvalidation_0-logloss:0.71853\n",
      "[184]\tvalidation_0-logloss:0.71900\n",
      "[186]\tvalidation_0-logloss:0.71915\n",
      "[188]\tvalidation_0-logloss:0.71956\n",
      "[190]\tvalidation_0-logloss:0.71972\n",
      "[192]\tvalidation_0-logloss:0.71920\n",
      "[194]\tvalidation_0-logloss:0.71926\n",
      "[196]\tvalidation_0-logloss:0.72113\n",
      "[198]\tvalidation_0-logloss:0.72126\n",
      "[200]\tvalidation_0-logloss:0.72084\n",
      "[202]\tvalidation_0-logloss:0.72135\n",
      "[204]\tvalidation_0-logloss:0.72139\n",
      "[206]\tvalidation_0-logloss:0.72140\n",
      "[208]\tvalidation_0-logloss:0.72101\n",
      "[210]\tvalidation_0-logloss:0.72216\n",
      "[212]\tvalidation_0-logloss:0.72224\n",
      "[214]\tvalidation_0-logloss:0.72334\n",
      "[216]\tvalidation_0-logloss:0.72377\n",
      "[218]\tvalidation_0-logloss:0.72426\n",
      "[220]\tvalidation_0-logloss:0.72546\n",
      "[222]\tvalidation_0-logloss:0.72553\n",
      "[224]\tvalidation_0-logloss:0.72565\n",
      "[226]\tvalidation_0-logloss:0.72602\n",
      "[228]\tvalidation_0-logloss:0.72646\n",
      "[230]\tvalidation_0-logloss:0.72648\n",
      "[232]\tvalidation_0-logloss:0.72684\n",
      "[234]\tvalidation_0-logloss:0.72765\n",
      "[236]\tvalidation_0-logloss:0.72822\n",
      "[238]\tvalidation_0-logloss:0.72873\n",
      "[240]\tvalidation_0-logloss:0.72943\n",
      "[242]\tvalidation_0-logloss:0.72978\n",
      "[244]\tvalidation_0-logloss:0.72987\n",
      "[246]\tvalidation_0-logloss:0.72976\n",
      "[248]\tvalidation_0-logloss:0.73090\n",
      "[250]\tvalidation_0-logloss:0.73119\n",
      "[252]\tvalidation_0-logloss:0.73162\n",
      "[254]\tvalidation_0-logloss:0.73227\n",
      "[256]\tvalidation_0-logloss:0.73249\n",
      "[258]\tvalidation_0-logloss:0.73235\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:08:27,222] Trial 64 finished with value: 0.6941488624114042 and parameters: {'eta': 0.204978119336798, 'gamma': 0.9751534108669255, 'max_depth': 4, 'min_child_weight': 1, 'lambda': 0.2440082122197261, 'alpha': 0.8579369181003684}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:08:31] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69560\n",
      "[2]\tvalidation_0-logloss:0.69592\n",
      "[4]\tvalidation_0-logloss:0.69538\n",
      "[6]\tvalidation_0-logloss:0.69500\n",
      "[8]\tvalidation_0-logloss:0.69549\n",
      "[10]\tvalidation_0-logloss:0.69590\n",
      "[12]\tvalidation_0-logloss:0.69522\n",
      "[14]\tvalidation_0-logloss:0.69567\n",
      "[16]\tvalidation_0-logloss:0.69579\n",
      "[18]\tvalidation_0-logloss:0.69558\n",
      "[20]\tvalidation_0-logloss:0.69596\n",
      "[22]\tvalidation_0-logloss:0.69594\n",
      "[24]\tvalidation_0-logloss:0.69596\n",
      "[26]\tvalidation_0-logloss:0.69644\n",
      "[28]\tvalidation_0-logloss:0.69619\n",
      "[30]\tvalidation_0-logloss:0.69601\n",
      "[32]\tvalidation_0-logloss:0.69586\n",
      "[34]\tvalidation_0-logloss:0.69593\n",
      "[36]\tvalidation_0-logloss:0.69623\n",
      "[38]\tvalidation_0-logloss:0.69644\n",
      "[40]\tvalidation_0-logloss:0.69648\n",
      "[42]\tvalidation_0-logloss:0.69652\n",
      "[44]\tvalidation_0-logloss:0.69620\n",
      "[46]\tvalidation_0-logloss:0.69622\n",
      "[48]\tvalidation_0-logloss:0.69648\n",
      "[50]\tvalidation_0-logloss:0.69678\n",
      "[52]\tvalidation_0-logloss:0.69747\n",
      "[54]\tvalidation_0-logloss:0.69726\n",
      "[56]\tvalidation_0-logloss:0.69724\n",
      "[58]\tvalidation_0-logloss:0.69708\n",
      "[60]\tvalidation_0-logloss:0.69757\n",
      "[62]\tvalidation_0-logloss:0.69764\n",
      "[64]\tvalidation_0-logloss:0.69748\n",
      "[66]\tvalidation_0-logloss:0.69752\n",
      "[68]\tvalidation_0-logloss:0.69773\n",
      "[70]\tvalidation_0-logloss:0.69792\n",
      "[72]\tvalidation_0-logloss:0.69796\n",
      "[74]\tvalidation_0-logloss:0.69787\n",
      "[76]\tvalidation_0-logloss:0.69831\n",
      "[78]\tvalidation_0-logloss:0.69902\n",
      "[80]\tvalidation_0-logloss:0.69899\n",
      "[82]\tvalidation_0-logloss:0.69898\n",
      "[84]\tvalidation_0-logloss:0.69932\n",
      "[86]\tvalidation_0-logloss:0.70012\n",
      "[88]\tvalidation_0-logloss:0.69994\n",
      "[90]\tvalidation_0-logloss:0.69981\n",
      "[92]\tvalidation_0-logloss:0.70067\n",
      "[94]\tvalidation_0-logloss:0.70091\n",
      "[96]\tvalidation_0-logloss:0.70089\n",
      "[98]\tvalidation_0-logloss:0.70136\n",
      "[100]\tvalidation_0-logloss:0.70133\n",
      "[102]\tvalidation_0-logloss:0.70243\n",
      "[104]\tvalidation_0-logloss:0.70236\n",
      "[106]\tvalidation_0-logloss:0.70254\n",
      "[108]\tvalidation_0-logloss:0.70270\n",
      "[110]\tvalidation_0-logloss:0.70330\n",
      "[112]\tvalidation_0-logloss:0.70362\n",
      "[114]\tvalidation_0-logloss:0.70398\n",
      "[116]\tvalidation_0-logloss:0.70424\n",
      "[118]\tvalidation_0-logloss:0.70437\n",
      "[120]\tvalidation_0-logloss:0.70448\n",
      "[122]\tvalidation_0-logloss:0.70523\n",
      "[124]\tvalidation_0-logloss:0.70540\n",
      "[126]\tvalidation_0-logloss:0.70542\n",
      "[128]\tvalidation_0-logloss:0.70560\n",
      "[130]\tvalidation_0-logloss:0.70552\n",
      "[132]\tvalidation_0-logloss:0.70621\n",
      "[134]\tvalidation_0-logloss:0.70642\n",
      "[136]\tvalidation_0-logloss:0.70644\n",
      "[138]\tvalidation_0-logloss:0.70677\n",
      "[140]\tvalidation_0-logloss:0.70723\n",
      "[142]\tvalidation_0-logloss:0.70809\n",
      "[144]\tvalidation_0-logloss:0.70846\n",
      "[146]\tvalidation_0-logloss:0.70829\n",
      "[148]\tvalidation_0-logloss:0.70785\n",
      "[150]\tvalidation_0-logloss:0.70820\n",
      "[152]\tvalidation_0-logloss:0.70853\n",
      "[154]\tvalidation_0-logloss:0.70833\n",
      "[156]\tvalidation_0-logloss:0.70835\n",
      "[158]\tvalidation_0-logloss:0.70810\n",
      "[160]\tvalidation_0-logloss:0.70838\n",
      "[162]\tvalidation_0-logloss:0.70804\n",
      "[164]\tvalidation_0-logloss:0.70787\n",
      "[166]\tvalidation_0-logloss:0.70845\n",
      "[168]\tvalidation_0-logloss:0.70880\n",
      "[170]\tvalidation_0-logloss:0.70957\n",
      "[172]\tvalidation_0-logloss:0.70928\n",
      "[174]\tvalidation_0-logloss:0.70967\n",
      "[176]\tvalidation_0-logloss:0.70994\n",
      "[178]\tvalidation_0-logloss:0.70999\n",
      "[180]\tvalidation_0-logloss:0.71014\n",
      "[182]\tvalidation_0-logloss:0.71029\n",
      "[184]\tvalidation_0-logloss:0.71061\n",
      "[186]\tvalidation_0-logloss:0.71114\n",
      "[188]\tvalidation_0-logloss:0.71119\n",
      "[190]\tvalidation_0-logloss:0.71215\n",
      "[192]\tvalidation_0-logloss:0.71213\n",
      "[194]\tvalidation_0-logloss:0.71216\n",
      "[196]\tvalidation_0-logloss:0.71248\n",
      "[198]\tvalidation_0-logloss:0.71314\n",
      "[200]\tvalidation_0-logloss:0.71333\n",
      "[202]\tvalidation_0-logloss:0.71324\n",
      "[204]\tvalidation_0-logloss:0.71356\n",
      "[206]\tvalidation_0-logloss:0.71359\n",
      "[208]\tvalidation_0-logloss:0.71415\n",
      "[210]\tvalidation_0-logloss:0.71437\n",
      "[212]\tvalidation_0-logloss:0.71453\n",
      "[214]\tvalidation_0-logloss:0.71458\n",
      "[216]\tvalidation_0-logloss:0.71478\n",
      "[218]\tvalidation_0-logloss:0.71464\n",
      "[220]\tvalidation_0-logloss:0.71514\n",
      "[222]\tvalidation_0-logloss:0.71548\n",
      "[224]\tvalidation_0-logloss:0.71583\n",
      "[226]\tvalidation_0-logloss:0.71757\n",
      "[228]\tvalidation_0-logloss:0.71759\n",
      "[230]\tvalidation_0-logloss:0.71754\n",
      "[232]\tvalidation_0-logloss:0.71769\n",
      "[234]\tvalidation_0-logloss:0.71776\n",
      "[236]\tvalidation_0-logloss:0.71844\n",
      "[238]\tvalidation_0-logloss:0.71854\n",
      "[240]\tvalidation_0-logloss:0.71842\n",
      "[242]\tvalidation_0-logloss:0.71852\n",
      "[244]\tvalidation_0-logloss:0.71857\n",
      "[246]\tvalidation_0-logloss:0.71875\n",
      "[248]\tvalidation_0-logloss:0.71888\n",
      "[250]\tvalidation_0-logloss:0.72007\n",
      "[252]\tvalidation_0-logloss:0.72032\n",
      "[254]\tvalidation_0-logloss:0.72031\n",
      "[255]\tvalidation_0-logloss:0.72036\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:09:45,420] Trial 65 finished with value: 0.6949965532781056 and parameters: {'eta': 0.11381136021782297, 'gamma': 0.492461371203167, 'max_depth': 5, 'min_child_weight': 1, 'lambda': 0.3389783584120297, 'alpha': 0.8763769768041996}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:09:50] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69526\n",
      "[2]\tvalidation_0-logloss:0.69563\n",
      "[4]\tvalidation_0-logloss:0.69567\n",
      "[6]\tvalidation_0-logloss:0.69542\n",
      "[8]\tvalidation_0-logloss:0.69547\n",
      "[10]\tvalidation_0-logloss:0.69533\n",
      "[12]\tvalidation_0-logloss:0.69534\n",
      "[14]\tvalidation_0-logloss:0.69571\n",
      "[16]\tvalidation_0-logloss:0.69552\n",
      "[18]\tvalidation_0-logloss:0.69568\n",
      "[20]\tvalidation_0-logloss:0.69549\n",
      "[22]\tvalidation_0-logloss:0.69550\n",
      "[24]\tvalidation_0-logloss:0.69526\n",
      "[26]\tvalidation_0-logloss:0.69502\n",
      "[28]\tvalidation_0-logloss:0.69537\n",
      "[30]\tvalidation_0-logloss:0.69548\n",
      "[32]\tvalidation_0-logloss:0.69538\n",
      "[34]\tvalidation_0-logloss:0.69539\n",
      "[36]\tvalidation_0-logloss:0.69527\n",
      "[38]\tvalidation_0-logloss:0.69556\n",
      "[40]\tvalidation_0-logloss:0.69571\n",
      "[42]\tvalidation_0-logloss:0.69586\n",
      "[44]\tvalidation_0-logloss:0.69621\n",
      "[46]\tvalidation_0-logloss:0.69632\n",
      "[48]\tvalidation_0-logloss:0.69633\n",
      "[50]\tvalidation_0-logloss:0.69695\n",
      "[52]\tvalidation_0-logloss:0.69676\n",
      "[54]\tvalidation_0-logloss:0.69718\n",
      "[56]\tvalidation_0-logloss:0.69708\n",
      "[58]\tvalidation_0-logloss:0.69675\n",
      "[60]\tvalidation_0-logloss:0.69691\n",
      "[62]\tvalidation_0-logloss:0.69696\n",
      "[64]\tvalidation_0-logloss:0.69689\n",
      "[66]\tvalidation_0-logloss:0.69686\n",
      "[68]\tvalidation_0-logloss:0.69687\n",
      "[70]\tvalidation_0-logloss:0.69747\n",
      "[72]\tvalidation_0-logloss:0.69749\n",
      "[74]\tvalidation_0-logloss:0.69722\n",
      "[76]\tvalidation_0-logloss:0.69738\n",
      "[78]\tvalidation_0-logloss:0.69743\n",
      "[80]\tvalidation_0-logloss:0.69741\n",
      "[82]\tvalidation_0-logloss:0.69782\n",
      "[84]\tvalidation_0-logloss:0.69790\n",
      "[86]\tvalidation_0-logloss:0.69802\n",
      "[88]\tvalidation_0-logloss:0.69809\n",
      "[90]\tvalidation_0-logloss:0.69803\n",
      "[92]\tvalidation_0-logloss:0.69818\n",
      "[94]\tvalidation_0-logloss:0.69866\n",
      "[96]\tvalidation_0-logloss:0.69902\n",
      "[98]\tvalidation_0-logloss:0.69897\n",
      "[100]\tvalidation_0-logloss:0.69870\n",
      "[102]\tvalidation_0-logloss:0.69891\n",
      "[104]\tvalidation_0-logloss:0.69879\n",
      "[106]\tvalidation_0-logloss:0.69880\n",
      "[108]\tvalidation_0-logloss:0.69895\n",
      "[110]\tvalidation_0-logloss:0.69893\n",
      "[112]\tvalidation_0-logloss:0.69884\n",
      "[114]\tvalidation_0-logloss:0.69851\n",
      "[116]\tvalidation_0-logloss:0.69897\n",
      "[118]\tvalidation_0-logloss:0.69895\n",
      "[120]\tvalidation_0-logloss:0.69894\n",
      "[122]\tvalidation_0-logloss:0.69893\n",
      "[124]\tvalidation_0-logloss:0.69892\n",
      "[126]\tvalidation_0-logloss:0.69891\n",
      "[128]\tvalidation_0-logloss:0.69884\n",
      "[130]\tvalidation_0-logloss:0.69893\n",
      "[132]\tvalidation_0-logloss:0.69893\n",
      "[134]\tvalidation_0-logloss:0.69876\n",
      "[136]\tvalidation_0-logloss:0.69884\n",
      "[138]\tvalidation_0-logloss:0.69856\n",
      "[140]\tvalidation_0-logloss:0.69860\n",
      "[142]\tvalidation_0-logloss:0.69877\n",
      "[144]\tvalidation_0-logloss:0.69875\n",
      "[146]\tvalidation_0-logloss:0.69876\n",
      "[148]\tvalidation_0-logloss:0.69877\n",
      "[150]\tvalidation_0-logloss:0.69874\n",
      "[152]\tvalidation_0-logloss:0.69878\n",
      "[154]\tvalidation_0-logloss:0.69872\n",
      "[156]\tvalidation_0-logloss:0.69887\n",
      "[158]\tvalidation_0-logloss:0.69895\n",
      "[160]\tvalidation_0-logloss:0.69903\n",
      "[162]\tvalidation_0-logloss:0.69875\n",
      "[164]\tvalidation_0-logloss:0.69899\n",
      "[166]\tvalidation_0-logloss:0.69926\n",
      "[168]\tvalidation_0-logloss:0.69923\n",
      "[170]\tvalidation_0-logloss:0.69929\n",
      "[172]\tvalidation_0-logloss:0.69934\n",
      "[174]\tvalidation_0-logloss:0.69933\n",
      "[176]\tvalidation_0-logloss:0.69936\n",
      "[178]\tvalidation_0-logloss:0.69942\n",
      "[180]\tvalidation_0-logloss:0.69946\n",
      "[182]\tvalidation_0-logloss:0.69973\n",
      "[184]\tvalidation_0-logloss:0.69982\n",
      "[186]\tvalidation_0-logloss:0.69973\n",
      "[188]\tvalidation_0-logloss:0.69983\n",
      "[190]\tvalidation_0-logloss:0.70008\n",
      "[192]\tvalidation_0-logloss:0.70006\n",
      "[194]\tvalidation_0-logloss:0.70009\n",
      "[196]\tvalidation_0-logloss:0.70009\n",
      "[198]\tvalidation_0-logloss:0.70021\n",
      "[200]\tvalidation_0-logloss:0.70012\n",
      "[202]\tvalidation_0-logloss:0.70001\n",
      "[204]\tvalidation_0-logloss:0.69995\n",
      "[206]\tvalidation_0-logloss:0.69987\n",
      "[208]\tvalidation_0-logloss:0.69998\n",
      "[210]\tvalidation_0-logloss:0.70003\n",
      "[212]\tvalidation_0-logloss:0.70005\n",
      "[214]\tvalidation_0-logloss:0.70000\n",
      "[216]\tvalidation_0-logloss:0.69988\n",
      "[218]\tvalidation_0-logloss:0.69998\n",
      "[220]\tvalidation_0-logloss:0.69987\n",
      "[222]\tvalidation_0-logloss:0.69984\n",
      "[224]\tvalidation_0-logloss:0.69978\n",
      "[226]\tvalidation_0-logloss:0.69983\n",
      "[228]\tvalidation_0-logloss:0.69993\n",
      "[230]\tvalidation_0-logloss:0.69958\n",
      "[232]\tvalidation_0-logloss:0.69959\n",
      "[234]\tvalidation_0-logloss:0.69980\n",
      "[236]\tvalidation_0-logloss:0.69957\n",
      "[238]\tvalidation_0-logloss:0.69973\n",
      "[240]\tvalidation_0-logloss:0.69972\n",
      "[242]\tvalidation_0-logloss:0.69974\n",
      "[244]\tvalidation_0-logloss:0.69980\n",
      "[246]\tvalidation_0-logloss:0.69984\n",
      "[248]\tvalidation_0-logloss:0.69967\n",
      "[250]\tvalidation_0-logloss:0.69974\n",
      "[252]\tvalidation_0-logloss:0.69970\n",
      "[254]\tvalidation_0-logloss:0.69974\n",
      "[256]\tvalidation_0-logloss:0.69974\n",
      "[258]\tvalidation_0-logloss:0.69956\n",
      "[260]\tvalidation_0-logloss:0.69965\n",
      "[262]\tvalidation_0-logloss:0.69982\n",
      "[264]\tvalidation_0-logloss:0.69981\n",
      "[266]\tvalidation_0-logloss:0.69989\n",
      "[268]\tvalidation_0-logloss:0.69999\n",
      "[270]\tvalidation_0-logloss:0.70001\n",
      "[272]\tvalidation_0-logloss:0.70012\n",
      "[274]\tvalidation_0-logloss:0.69995\n",
      "[275]\tvalidation_0-logloss:0.69997\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:10:57,203] Trial 66 finished with value: 0.6950210885534721 and parameters: {'eta': 0.138871080626705, 'gamma': 0.6113642225600153, 'max_depth': 2, 'min_child_weight': 0, 'lambda': 0.41422466212288467, 'alpha': 0.6352998231715938}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:11:01] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69573\n",
      "[2]\tvalidation_0-logloss:0.69519\n",
      "[4]\tvalidation_0-logloss:0.69504\n",
      "[6]\tvalidation_0-logloss:0.69465\n",
      "[8]\tvalidation_0-logloss:0.69549\n",
      "[10]\tvalidation_0-logloss:0.69525\n",
      "[12]\tvalidation_0-logloss:0.69534\n",
      "[14]\tvalidation_0-logloss:0.69528\n",
      "[16]\tvalidation_0-logloss:0.69531\n",
      "[18]\tvalidation_0-logloss:0.69574\n",
      "[20]\tvalidation_0-logloss:0.69543\n",
      "[22]\tvalidation_0-logloss:0.69583\n",
      "[24]\tvalidation_0-logloss:0.69637\n",
      "[26]\tvalidation_0-logloss:0.69685\n",
      "[28]\tvalidation_0-logloss:0.69700\n",
      "[30]\tvalidation_0-logloss:0.69707\n",
      "[32]\tvalidation_0-logloss:0.69841\n",
      "[34]\tvalidation_0-logloss:0.69900\n",
      "[36]\tvalidation_0-logloss:0.69929\n",
      "[38]\tvalidation_0-logloss:0.69971\n",
      "[40]\tvalidation_0-logloss:0.69920\n",
      "[42]\tvalidation_0-logloss:0.69933\n",
      "[44]\tvalidation_0-logloss:0.69973\n",
      "[46]\tvalidation_0-logloss:0.70006\n",
      "[48]\tvalidation_0-logloss:0.70016\n",
      "[50]\tvalidation_0-logloss:0.70009\n",
      "[52]\tvalidation_0-logloss:0.70005\n",
      "[54]\tvalidation_0-logloss:0.70033\n",
      "[56]\tvalidation_0-logloss:0.70117\n",
      "[58]\tvalidation_0-logloss:0.70181\n",
      "[60]\tvalidation_0-logloss:0.70206\n",
      "[62]\tvalidation_0-logloss:0.70256\n",
      "[64]\tvalidation_0-logloss:0.70367\n",
      "[66]\tvalidation_0-logloss:0.70426\n",
      "[68]\tvalidation_0-logloss:0.70415\n",
      "[70]\tvalidation_0-logloss:0.70417\n",
      "[72]\tvalidation_0-logloss:0.70455\n",
      "[74]\tvalidation_0-logloss:0.70518\n",
      "[76]\tvalidation_0-logloss:0.70611\n",
      "[78]\tvalidation_0-logloss:0.70633\n",
      "[80]\tvalidation_0-logloss:0.70634\n",
      "[82]\tvalidation_0-logloss:0.70776\n",
      "[84]\tvalidation_0-logloss:0.70858\n",
      "[86]\tvalidation_0-logloss:0.70850\n",
      "[88]\tvalidation_0-logloss:0.70896\n",
      "[90]\tvalidation_0-logloss:0.70927\n",
      "[92]\tvalidation_0-logloss:0.70919\n",
      "[94]\tvalidation_0-logloss:0.70922\n",
      "[96]\tvalidation_0-logloss:0.70947\n",
      "[98]\tvalidation_0-logloss:0.71084\n",
      "[100]\tvalidation_0-logloss:0.71106\n",
      "[102]\tvalidation_0-logloss:0.71112\n",
      "[104]\tvalidation_0-logloss:0.71117\n",
      "[106]\tvalidation_0-logloss:0.71171\n",
      "[108]\tvalidation_0-logloss:0.71205\n",
      "[110]\tvalidation_0-logloss:0.71229\n",
      "[112]\tvalidation_0-logloss:0.71206\n",
      "[114]\tvalidation_0-logloss:0.71217\n",
      "[116]\tvalidation_0-logloss:0.71235\n",
      "[118]\tvalidation_0-logloss:0.71314\n",
      "[120]\tvalidation_0-logloss:0.71341\n",
      "[122]\tvalidation_0-logloss:0.71361\n",
      "[124]\tvalidation_0-logloss:0.71414\n",
      "[126]\tvalidation_0-logloss:0.71404\n",
      "[128]\tvalidation_0-logloss:0.71429\n",
      "[130]\tvalidation_0-logloss:0.71447\n",
      "[132]\tvalidation_0-logloss:0.71299\n",
      "[134]\tvalidation_0-logloss:0.71316\n",
      "[136]\tvalidation_0-logloss:0.71348\n",
      "[138]\tvalidation_0-logloss:0.71321\n",
      "[140]\tvalidation_0-logloss:0.71423\n",
      "[142]\tvalidation_0-logloss:0.71475\n",
      "[144]\tvalidation_0-logloss:0.71519\n",
      "[146]\tvalidation_0-logloss:0.71568\n",
      "[148]\tvalidation_0-logloss:0.71714\n",
      "[150]\tvalidation_0-logloss:0.71750\n",
      "[152]\tvalidation_0-logloss:0.71763\n",
      "[154]\tvalidation_0-logloss:0.71751\n",
      "[156]\tvalidation_0-logloss:0.71732\n",
      "[158]\tvalidation_0-logloss:0.71770\n",
      "[160]\tvalidation_0-logloss:0.71762\n",
      "[162]\tvalidation_0-logloss:0.71855\n",
      "[164]\tvalidation_0-logloss:0.71878\n",
      "[166]\tvalidation_0-logloss:0.72168\n",
      "[168]\tvalidation_0-logloss:0.72171\n",
      "[170]\tvalidation_0-logloss:0.72226\n",
      "[172]\tvalidation_0-logloss:0.72231\n",
      "[174]\tvalidation_0-logloss:0.72234\n",
      "[176]\tvalidation_0-logloss:0.72266\n",
      "[178]\tvalidation_0-logloss:0.72383\n",
      "[180]\tvalidation_0-logloss:0.72389\n",
      "[182]\tvalidation_0-logloss:0.72390\n",
      "[184]\tvalidation_0-logloss:0.72394\n",
      "[186]\tvalidation_0-logloss:0.72369\n",
      "[188]\tvalidation_0-logloss:0.72401\n",
      "[190]\tvalidation_0-logloss:0.72144\n",
      "[192]\tvalidation_0-logloss:0.72166\n",
      "[194]\tvalidation_0-logloss:0.72172\n",
      "[196]\tvalidation_0-logloss:0.72208\n",
      "[198]\tvalidation_0-logloss:0.72234\n",
      "[200]\tvalidation_0-logloss:0.72243\n",
      "[202]\tvalidation_0-logloss:0.72273\n",
      "[204]\tvalidation_0-logloss:0.72283\n",
      "[206]\tvalidation_0-logloss:0.72287\n",
      "[208]\tvalidation_0-logloss:0.72271\n",
      "[210]\tvalidation_0-logloss:0.72315\n",
      "[212]\tvalidation_0-logloss:0.72318\n",
      "[214]\tvalidation_0-logloss:0.72364\n",
      "[216]\tvalidation_0-logloss:0.72387\n",
      "[218]\tvalidation_0-logloss:0.72398\n",
      "[220]\tvalidation_0-logloss:0.72390\n",
      "[222]\tvalidation_0-logloss:0.72409\n",
      "[224]\tvalidation_0-logloss:0.72435\n",
      "[226]\tvalidation_0-logloss:0.72487\n",
      "[228]\tvalidation_0-logloss:0.72539\n",
      "[230]\tvalidation_0-logloss:0.72562\n",
      "[232]\tvalidation_0-logloss:0.72580\n",
      "[234]\tvalidation_0-logloss:0.72640\n",
      "[236]\tvalidation_0-logloss:0.72626\n",
      "[238]\tvalidation_0-logloss:0.72629\n",
      "[240]\tvalidation_0-logloss:0.72650\n",
      "[242]\tvalidation_0-logloss:0.72644\n",
      "[244]\tvalidation_0-logloss:0.72647\n",
      "[246]\tvalidation_0-logloss:0.72655\n",
      "[248]\tvalidation_0-logloss:0.72648\n",
      "[250]\tvalidation_0-logloss:0.72635\n",
      "[252]\tvalidation_0-logloss:0.72756\n",
      "[254]\tvalidation_0-logloss:0.72877\n",
      "[256]\tvalidation_0-logloss:0.72877\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:12:13,387] Trial 67 finished with value: 0.6946537034828859 and parameters: {'eta': 0.1964354632624151, 'gamma': 0.5341290864345074, 'max_depth': 4, 'min_child_weight': 0, 'lambda': 0.2971778688947817, 'alpha': 0.7382868537423141}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:12:18] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69526\n",
      "[2]\tvalidation_0-logloss:0.69575\n",
      "[4]\tvalidation_0-logloss:0.69502\n",
      "[6]\tvalidation_0-logloss:0.69540\n",
      "[8]\tvalidation_0-logloss:0.69569\n",
      "[10]\tvalidation_0-logloss:0.69565\n",
      "[12]\tvalidation_0-logloss:0.69580\n",
      "[14]\tvalidation_0-logloss:0.69576\n",
      "[16]\tvalidation_0-logloss:0.69569\n",
      "[18]\tvalidation_0-logloss:0.69562\n",
      "[20]\tvalidation_0-logloss:0.69655\n",
      "[22]\tvalidation_0-logloss:0.69639\n",
      "[24]\tvalidation_0-logloss:0.69658\n",
      "[26]\tvalidation_0-logloss:0.69631\n",
      "[28]\tvalidation_0-logloss:0.69599\n",
      "[30]\tvalidation_0-logloss:0.69594\n",
      "[32]\tvalidation_0-logloss:0.69574\n",
      "[34]\tvalidation_0-logloss:0.69650\n",
      "[36]\tvalidation_0-logloss:0.69659\n",
      "[38]\tvalidation_0-logloss:0.69629\n",
      "[40]\tvalidation_0-logloss:0.69679\n",
      "[42]\tvalidation_0-logloss:0.69728\n",
      "[44]\tvalidation_0-logloss:0.69742\n",
      "[46]\tvalidation_0-logloss:0.69660\n",
      "[48]\tvalidation_0-logloss:0.69661\n",
      "[50]\tvalidation_0-logloss:0.69652\n",
      "[52]\tvalidation_0-logloss:0.69668\n",
      "[54]\tvalidation_0-logloss:0.69666\n",
      "[56]\tvalidation_0-logloss:0.69650\n",
      "[58]\tvalidation_0-logloss:0.69657\n",
      "[60]\tvalidation_0-logloss:0.69655\n",
      "[62]\tvalidation_0-logloss:0.69664\n",
      "[64]\tvalidation_0-logloss:0.69670\n",
      "[66]\tvalidation_0-logloss:0.69694\n",
      "[68]\tvalidation_0-logloss:0.69690\n",
      "[70]\tvalidation_0-logloss:0.69691\n",
      "[72]\tvalidation_0-logloss:0.69739\n",
      "[74]\tvalidation_0-logloss:0.69726\n",
      "[76]\tvalidation_0-logloss:0.69725\n",
      "[78]\tvalidation_0-logloss:0.69730\n",
      "[80]\tvalidation_0-logloss:0.69723\n",
      "[82]\tvalidation_0-logloss:0.69720\n",
      "[84]\tvalidation_0-logloss:0.69729\n",
      "[86]\tvalidation_0-logloss:0.69723\n",
      "[88]\tvalidation_0-logloss:0.69718\n",
      "[90]\tvalidation_0-logloss:0.69713\n",
      "[92]\tvalidation_0-logloss:0.69768\n",
      "[94]\tvalidation_0-logloss:0.69750\n",
      "[96]\tvalidation_0-logloss:0.69713\n",
      "[98]\tvalidation_0-logloss:0.69750\n",
      "[100]\tvalidation_0-logloss:0.69772\n",
      "[102]\tvalidation_0-logloss:0.69769\n",
      "[104]\tvalidation_0-logloss:0.69770\n",
      "[106]\tvalidation_0-logloss:0.69800\n",
      "[108]\tvalidation_0-logloss:0.69804\n",
      "[110]\tvalidation_0-logloss:0.69820\n",
      "[112]\tvalidation_0-logloss:0.69821\n",
      "[114]\tvalidation_0-logloss:0.69828\n",
      "[116]\tvalidation_0-logloss:0.69816\n",
      "[118]\tvalidation_0-logloss:0.69818\n",
      "[120]\tvalidation_0-logloss:0.69813\n",
      "[122]\tvalidation_0-logloss:0.69778\n",
      "[124]\tvalidation_0-logloss:0.69786\n",
      "[126]\tvalidation_0-logloss:0.69802\n",
      "[128]\tvalidation_0-logloss:0.69811\n",
      "[130]\tvalidation_0-logloss:0.69827\n",
      "[132]\tvalidation_0-logloss:0.69801\n",
      "[134]\tvalidation_0-logloss:0.69823\n",
      "[136]\tvalidation_0-logloss:0.69817\n",
      "[138]\tvalidation_0-logloss:0.69820\n",
      "[140]\tvalidation_0-logloss:0.69832\n",
      "[142]\tvalidation_0-logloss:0.69819\n",
      "[144]\tvalidation_0-logloss:0.69837\n",
      "[146]\tvalidation_0-logloss:0.69823\n",
      "[148]\tvalidation_0-logloss:0.69832\n",
      "[150]\tvalidation_0-logloss:0.69850\n",
      "[152]\tvalidation_0-logloss:0.69852\n",
      "[154]\tvalidation_0-logloss:0.69851\n",
      "[156]\tvalidation_0-logloss:0.69848\n",
      "[158]\tvalidation_0-logloss:0.69853\n",
      "[160]\tvalidation_0-logloss:0.69842\n",
      "[162]\tvalidation_0-logloss:0.69849\n",
      "[164]\tvalidation_0-logloss:0.69872\n",
      "[166]\tvalidation_0-logloss:0.69873\n",
      "[168]\tvalidation_0-logloss:0.69857\n",
      "[170]\tvalidation_0-logloss:0.69857\n",
      "[172]\tvalidation_0-logloss:0.69853\n",
      "[174]\tvalidation_0-logloss:0.69858\n",
      "[176]\tvalidation_0-logloss:0.69857\n",
      "[178]\tvalidation_0-logloss:0.69859\n",
      "[180]\tvalidation_0-logloss:0.69856\n",
      "[182]\tvalidation_0-logloss:0.69857\n",
      "[184]\tvalidation_0-logloss:0.69855\n",
      "[186]\tvalidation_0-logloss:0.69870\n",
      "[188]\tvalidation_0-logloss:0.69868\n",
      "[190]\tvalidation_0-logloss:0.69888\n",
      "[192]\tvalidation_0-logloss:0.69903\n",
      "[194]\tvalidation_0-logloss:0.69902\n",
      "[196]\tvalidation_0-logloss:0.69902\n",
      "[198]\tvalidation_0-logloss:0.69921\n",
      "[200]\tvalidation_0-logloss:0.69899\n",
      "[202]\tvalidation_0-logloss:0.69893\n",
      "[204]\tvalidation_0-logloss:0.69891\n",
      "[206]\tvalidation_0-logloss:0.69899\n",
      "[208]\tvalidation_0-logloss:0.69901\n",
      "[210]\tvalidation_0-logloss:0.69930\n",
      "[212]\tvalidation_0-logloss:0.69933\n",
      "[214]\tvalidation_0-logloss:0.69912\n",
      "[216]\tvalidation_0-logloss:0.69956\n",
      "[218]\tvalidation_0-logloss:0.69919\n",
      "[220]\tvalidation_0-logloss:0.69942\n",
      "[222]\tvalidation_0-logloss:0.69970\n",
      "[224]\tvalidation_0-logloss:0.69981\n",
      "[226]\tvalidation_0-logloss:0.69990\n",
      "[228]\tvalidation_0-logloss:0.69990\n",
      "[230]\tvalidation_0-logloss:0.69995\n",
      "[232]\tvalidation_0-logloss:0.70007\n",
      "[234]\tvalidation_0-logloss:0.70008\n",
      "[236]\tvalidation_0-logloss:0.70010\n",
      "[238]\tvalidation_0-logloss:0.70008\n",
      "[240]\tvalidation_0-logloss:0.70004\n",
      "[242]\tvalidation_0-logloss:0.70002\n",
      "[244]\tvalidation_0-logloss:0.69990\n",
      "[246]\tvalidation_0-logloss:0.69996\n",
      "[248]\tvalidation_0-logloss:0.70011\n",
      "[250]\tvalidation_0-logloss:0.70016\n",
      "[252]\tvalidation_0-logloss:0.70014\n",
      "[253]\tvalidation_0-logloss:0.70011\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:13:20,011] Trial 68 finished with value: 0.6950196771645522 and parameters: {'eta': 0.16987836733981126, 'gamma': 0.6671345493470929, 'max_depth': 2, 'min_child_weight': 4, 'lambda': 0.0003257679446003747, 'alpha': 0.8114605321146475}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:13:24] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69536\n",
      "[2]\tvalidation_0-logloss:0.69566\n",
      "[4]\tvalidation_0-logloss:0.69534\n",
      "[6]\tvalidation_0-logloss:0.69528\n",
      "[8]\tvalidation_0-logloss:0.69509\n",
      "[10]\tvalidation_0-logloss:0.69498\n",
      "[12]\tvalidation_0-logloss:0.69473\n",
      "[14]\tvalidation_0-logloss:0.69450\n",
      "[16]\tvalidation_0-logloss:0.69460\n",
      "[18]\tvalidation_0-logloss:0.69482\n",
      "[20]\tvalidation_0-logloss:0.69465\n",
      "[22]\tvalidation_0-logloss:0.69433\n",
      "[24]\tvalidation_0-logloss:0.69468\n",
      "[26]\tvalidation_0-logloss:0.69488\n",
      "[28]\tvalidation_0-logloss:0.69459\n",
      "[30]\tvalidation_0-logloss:0.69451\n",
      "[32]\tvalidation_0-logloss:0.69437\n",
      "[34]\tvalidation_0-logloss:0.69448\n",
      "[36]\tvalidation_0-logloss:0.69467\n",
      "[38]\tvalidation_0-logloss:0.69471\n",
      "[40]\tvalidation_0-logloss:0.69459\n",
      "[42]\tvalidation_0-logloss:0.69468\n",
      "[44]\tvalidation_0-logloss:0.69471\n",
      "[46]\tvalidation_0-logloss:0.69492\n",
      "[48]\tvalidation_0-logloss:0.69493\n",
      "[50]\tvalidation_0-logloss:0.69503\n",
      "[52]\tvalidation_0-logloss:0.69485\n",
      "[54]\tvalidation_0-logloss:0.69485\n",
      "[56]\tvalidation_0-logloss:0.69473\n",
      "[58]\tvalidation_0-logloss:0.69461\n",
      "[60]\tvalidation_0-logloss:0.69457\n",
      "[62]\tvalidation_0-logloss:0.69475\n",
      "[64]\tvalidation_0-logloss:0.69458\n",
      "[66]\tvalidation_0-logloss:0.69460\n",
      "[68]\tvalidation_0-logloss:0.69467\n",
      "[70]\tvalidation_0-logloss:0.69487\n",
      "[72]\tvalidation_0-logloss:0.69490\n",
      "[74]\tvalidation_0-logloss:0.69481\n",
      "[76]\tvalidation_0-logloss:0.69487\n",
      "[78]\tvalidation_0-logloss:0.69497\n",
      "[80]\tvalidation_0-logloss:0.69497\n",
      "[82]\tvalidation_0-logloss:0.69509\n",
      "[84]\tvalidation_0-logloss:0.69497\n",
      "[86]\tvalidation_0-logloss:0.69559\n",
      "[88]\tvalidation_0-logloss:0.69549\n",
      "[90]\tvalidation_0-logloss:0.69562\n",
      "[92]\tvalidation_0-logloss:0.69569\n",
      "[94]\tvalidation_0-logloss:0.69575\n",
      "[96]\tvalidation_0-logloss:0.69581\n",
      "[98]\tvalidation_0-logloss:0.69603\n",
      "[100]\tvalidation_0-logloss:0.69599\n",
      "[102]\tvalidation_0-logloss:0.69607\n",
      "[104]\tvalidation_0-logloss:0.69620\n",
      "[106]\tvalidation_0-logloss:0.69619\n",
      "[108]\tvalidation_0-logloss:0.69621\n",
      "[110]\tvalidation_0-logloss:0.69615\n",
      "[112]\tvalidation_0-logloss:0.69610\n",
      "[114]\tvalidation_0-logloss:0.69632\n",
      "[116]\tvalidation_0-logloss:0.69636\n",
      "[118]\tvalidation_0-logloss:0.69644\n",
      "[120]\tvalidation_0-logloss:0.69651\n",
      "[122]\tvalidation_0-logloss:0.69648\n",
      "[124]\tvalidation_0-logloss:0.69674\n",
      "[126]\tvalidation_0-logloss:0.69686\n",
      "[128]\tvalidation_0-logloss:0.69687\n",
      "[130]\tvalidation_0-logloss:0.69695\n",
      "[132]\tvalidation_0-logloss:0.69692\n",
      "[134]\tvalidation_0-logloss:0.69688\n",
      "[136]\tvalidation_0-logloss:0.69705\n",
      "[138]\tvalidation_0-logloss:0.69705\n",
      "[140]\tvalidation_0-logloss:0.69729\n",
      "[142]\tvalidation_0-logloss:0.69724\n",
      "[144]\tvalidation_0-logloss:0.69724\n",
      "[146]\tvalidation_0-logloss:0.69727\n",
      "[148]\tvalidation_0-logloss:0.69709\n",
      "[150]\tvalidation_0-logloss:0.69711\n",
      "[152]\tvalidation_0-logloss:0.69711\n",
      "[154]\tvalidation_0-logloss:0.69734\n",
      "[156]\tvalidation_0-logloss:0.69739\n",
      "[158]\tvalidation_0-logloss:0.69762\n",
      "[160]\tvalidation_0-logloss:0.69768\n",
      "[162]\tvalidation_0-logloss:0.69785\n",
      "[164]\tvalidation_0-logloss:0.69815\n",
      "[166]\tvalidation_0-logloss:0.69811\n",
      "[168]\tvalidation_0-logloss:0.69820\n",
      "[170]\tvalidation_0-logloss:0.69844\n",
      "[172]\tvalidation_0-logloss:0.69842\n",
      "[174]\tvalidation_0-logloss:0.69851\n",
      "[176]\tvalidation_0-logloss:0.69871\n",
      "[178]\tvalidation_0-logloss:0.69879\n",
      "[180]\tvalidation_0-logloss:0.69880\n",
      "[182]\tvalidation_0-logloss:0.69880\n",
      "[184]\tvalidation_0-logloss:0.69886\n",
      "[186]\tvalidation_0-logloss:0.69899\n",
      "[188]\tvalidation_0-logloss:0.69903\n",
      "[190]\tvalidation_0-logloss:0.69925\n",
      "[192]\tvalidation_0-logloss:0.69923\n",
      "[194]\tvalidation_0-logloss:0.69940\n",
      "[196]\tvalidation_0-logloss:0.69963\n",
      "[198]\tvalidation_0-logloss:0.69969\n",
      "[200]\tvalidation_0-logloss:0.69973\n",
      "[202]\tvalidation_0-logloss:0.70028\n",
      "[204]\tvalidation_0-logloss:0.70058\n",
      "[206]\tvalidation_0-logloss:0.70077\n",
      "[208]\tvalidation_0-logloss:0.70080\n",
      "[210]\tvalidation_0-logloss:0.70079\n",
      "[212]\tvalidation_0-logloss:0.70097\n",
      "[214]\tvalidation_0-logloss:0.70090\n",
      "[216]\tvalidation_0-logloss:0.70088\n",
      "[218]\tvalidation_0-logloss:0.70092\n",
      "[220]\tvalidation_0-logloss:0.70105\n",
      "[222]\tvalidation_0-logloss:0.70099\n",
      "[224]\tvalidation_0-logloss:0.70132\n",
      "[226]\tvalidation_0-logloss:0.70164\n",
      "[228]\tvalidation_0-logloss:0.70174\n",
      "[230]\tvalidation_0-logloss:0.70171\n",
      "[232]\tvalidation_0-logloss:0.70171\n",
      "[234]\tvalidation_0-logloss:0.70175\n",
      "[236]\tvalidation_0-logloss:0.70183\n",
      "[238]\tvalidation_0-logloss:0.70171\n",
      "[240]\tvalidation_0-logloss:0.70190\n",
      "[242]\tvalidation_0-logloss:0.70201\n",
      "[244]\tvalidation_0-logloss:0.70238\n",
      "[246]\tvalidation_0-logloss:0.70248\n",
      "[248]\tvalidation_0-logloss:0.70250\n",
      "[250]\tvalidation_0-logloss:0.70248\n",
      "[252]\tvalidation_0-logloss:0.70255\n",
      "[254]\tvalidation_0-logloss:0.70254\n",
      "[256]\tvalidation_0-logloss:0.70251\n",
      "[258]\tvalidation_0-logloss:0.70265\n",
      "[260]\tvalidation_0-logloss:0.70276\n",
      "[262]\tvalidation_0-logloss:0.70283\n",
      "[264]\tvalidation_0-logloss:0.70281\n",
      "[266]\tvalidation_0-logloss:0.70295\n",
      "[268]\tvalidation_0-logloss:0.70298\n",
      "[270]\tvalidation_0-logloss:0.70312\n",
      "[271]\tvalidation_0-logloss:0.70304\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:14:46,189] Trial 69 finished with value: 0.6943155834466649 and parameters: {'eta': 0.05039523205666423, 'gamma': 0.38631310891185766, 'max_depth': 5, 'min_child_weight': 1, 'lambda': 0.20260051758596961, 'alpha': 0.896385960304154}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:14:50] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69540\n",
      "[2]\tvalidation_0-logloss:0.69548\n",
      "[4]\tvalidation_0-logloss:0.69536\n",
      "[6]\tvalidation_0-logloss:0.69566\n",
      "[8]\tvalidation_0-logloss:0.69497\n",
      "[10]\tvalidation_0-logloss:0.69509\n",
      "[12]\tvalidation_0-logloss:0.69508\n",
      "[14]\tvalidation_0-logloss:0.69542\n",
      "[16]\tvalidation_0-logloss:0.69557\n",
      "[18]\tvalidation_0-logloss:0.69546\n",
      "[20]\tvalidation_0-logloss:0.69564\n",
      "[22]\tvalidation_0-logloss:0.69582\n",
      "[24]\tvalidation_0-logloss:0.69655\n",
      "[26]\tvalidation_0-logloss:0.69644\n",
      "[28]\tvalidation_0-logloss:0.69667\n",
      "[30]\tvalidation_0-logloss:0.69662\n",
      "[32]\tvalidation_0-logloss:0.69659\n",
      "[34]\tvalidation_0-logloss:0.69665\n",
      "[36]\tvalidation_0-logloss:0.69707\n",
      "[38]\tvalidation_0-logloss:0.69680\n",
      "[40]\tvalidation_0-logloss:0.69656\n",
      "[42]\tvalidation_0-logloss:0.69650\n",
      "[44]\tvalidation_0-logloss:0.69713\n",
      "[46]\tvalidation_0-logloss:0.69697\n",
      "[48]\tvalidation_0-logloss:0.69714\n",
      "[50]\tvalidation_0-logloss:0.69733\n",
      "[52]\tvalidation_0-logloss:0.69696\n",
      "[54]\tvalidation_0-logloss:0.69714\n",
      "[56]\tvalidation_0-logloss:0.69717\n",
      "[58]\tvalidation_0-logloss:0.69711\n",
      "[60]\tvalidation_0-logloss:0.69701\n",
      "[62]\tvalidation_0-logloss:0.69713\n",
      "[64]\tvalidation_0-logloss:0.69700\n",
      "[66]\tvalidation_0-logloss:0.69694\n",
      "[68]\tvalidation_0-logloss:0.69694\n",
      "[70]\tvalidation_0-logloss:0.69698\n",
      "[72]\tvalidation_0-logloss:0.69711\n",
      "[74]\tvalidation_0-logloss:0.69711\n",
      "[76]\tvalidation_0-logloss:0.69851\n",
      "[78]\tvalidation_0-logloss:0.69875\n",
      "[80]\tvalidation_0-logloss:0.69883\n",
      "[82]\tvalidation_0-logloss:0.69901\n",
      "[84]\tvalidation_0-logloss:0.69946\n",
      "[86]\tvalidation_0-logloss:0.69926\n",
      "[88]\tvalidation_0-logloss:0.69969\n",
      "[90]\tvalidation_0-logloss:0.69941\n",
      "[92]\tvalidation_0-logloss:0.69932\n",
      "[94]\tvalidation_0-logloss:0.69948\n",
      "[96]\tvalidation_0-logloss:0.69942\n",
      "[98]\tvalidation_0-logloss:0.69941\n",
      "[100]\tvalidation_0-logloss:0.69949\n",
      "[102]\tvalidation_0-logloss:0.69988\n",
      "[104]\tvalidation_0-logloss:0.70010\n",
      "[106]\tvalidation_0-logloss:0.70003\n",
      "[108]\tvalidation_0-logloss:0.70014\n",
      "[110]\tvalidation_0-logloss:0.70015\n",
      "[112]\tvalidation_0-logloss:0.70048\n",
      "[114]\tvalidation_0-logloss:0.70120\n",
      "[116]\tvalidation_0-logloss:0.70146\n",
      "[118]\tvalidation_0-logloss:0.70180\n",
      "[120]\tvalidation_0-logloss:0.70179\n",
      "[122]\tvalidation_0-logloss:0.70178\n",
      "[124]\tvalidation_0-logloss:0.70179\n",
      "[126]\tvalidation_0-logloss:0.70174\n",
      "[128]\tvalidation_0-logloss:0.70183\n",
      "[130]\tvalidation_0-logloss:0.70208\n",
      "[132]\tvalidation_0-logloss:0.70237\n",
      "[134]\tvalidation_0-logloss:0.70235\n",
      "[136]\tvalidation_0-logloss:0.70226\n",
      "[138]\tvalidation_0-logloss:0.70237\n",
      "[140]\tvalidation_0-logloss:0.70266\n",
      "[142]\tvalidation_0-logloss:0.70268\n",
      "[144]\tvalidation_0-logloss:0.70275\n",
      "[146]\tvalidation_0-logloss:0.70264\n",
      "[148]\tvalidation_0-logloss:0.70258\n",
      "[150]\tvalidation_0-logloss:0.70276\n",
      "[152]\tvalidation_0-logloss:0.70287\n",
      "[154]\tvalidation_0-logloss:0.70390\n",
      "[156]\tvalidation_0-logloss:0.70389\n",
      "[158]\tvalidation_0-logloss:0.70422\n",
      "[160]\tvalidation_0-logloss:0.70427\n",
      "[162]\tvalidation_0-logloss:0.70424\n",
      "[164]\tvalidation_0-logloss:0.70405\n",
      "[166]\tvalidation_0-logloss:0.70407\n",
      "[168]\tvalidation_0-logloss:0.70446\n",
      "[170]\tvalidation_0-logloss:0.70469\n",
      "[172]\tvalidation_0-logloss:0.70470\n",
      "[174]\tvalidation_0-logloss:0.70472\n",
      "[176]\tvalidation_0-logloss:0.70475\n",
      "[178]\tvalidation_0-logloss:0.70471\n",
      "[180]\tvalidation_0-logloss:0.70470\n",
      "[182]\tvalidation_0-logloss:0.70458\n",
      "[184]\tvalidation_0-logloss:0.70474\n",
      "[186]\tvalidation_0-logloss:0.70491\n",
      "[188]\tvalidation_0-logloss:0.70475\n",
      "[190]\tvalidation_0-logloss:0.70482\n",
      "[192]\tvalidation_0-logloss:0.70489\n",
      "[194]\tvalidation_0-logloss:0.70488\n",
      "[196]\tvalidation_0-logloss:0.70471\n",
      "[198]\tvalidation_0-logloss:0.70457\n",
      "[200]\tvalidation_0-logloss:0.70471\n",
      "[202]\tvalidation_0-logloss:0.70494\n",
      "[204]\tvalidation_0-logloss:0.70467\n",
      "[206]\tvalidation_0-logloss:0.70469\n",
      "[208]\tvalidation_0-logloss:0.70512\n",
      "[210]\tvalidation_0-logloss:0.70534\n",
      "[212]\tvalidation_0-logloss:0.70548\n",
      "[214]\tvalidation_0-logloss:0.70567\n",
      "[216]\tvalidation_0-logloss:0.70525\n",
      "[218]\tvalidation_0-logloss:0.70533\n",
      "[220]\tvalidation_0-logloss:0.70581\n",
      "[222]\tvalidation_0-logloss:0.70585\n",
      "[224]\tvalidation_0-logloss:0.70564\n",
      "[226]\tvalidation_0-logloss:0.70566\n",
      "[228]\tvalidation_0-logloss:0.70542\n",
      "[230]\tvalidation_0-logloss:0.70796\n",
      "[232]\tvalidation_0-logloss:0.70822\n",
      "[234]\tvalidation_0-logloss:0.70821\n",
      "[236]\tvalidation_0-logloss:0.70821\n",
      "[238]\tvalidation_0-logloss:0.70842\n",
      "[240]\tvalidation_0-logloss:0.70863\n",
      "[242]\tvalidation_0-logloss:0.70866\n",
      "[244]\tvalidation_0-logloss:0.70832\n",
      "[246]\tvalidation_0-logloss:0.70821\n",
      "[248]\tvalidation_0-logloss:0.70842\n",
      "[250]\tvalidation_0-logloss:0.70841\n",
      "[252]\tvalidation_0-logloss:0.70893\n",
      "[254]\tvalidation_0-logloss:0.70887\n",
      "[256]\tvalidation_0-logloss:0.70886\n",
      "[258]\tvalidation_0-logloss:0.70870\n",
      "[259]\tvalidation_0-logloss:0.70880\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:15:58,884] Trial 70 finished with value: 0.6948185196094354 and parameters: {'eta': 0.12370284754326355, 'gamma': 0.3044706943619489, 'max_depth': 3, 'min_child_weight': 2, 'lambda': 0.37968721987430987, 'alpha': 0.23965757627220852}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:16:03] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69550\n",
      "[2]\tvalidation_0-logloss:0.69540\n",
      "[4]\tvalidation_0-logloss:0.69530\n",
      "[6]\tvalidation_0-logloss:0.69625\n",
      "[8]\tvalidation_0-logloss:0.69585\n",
      "[10]\tvalidation_0-logloss:0.69633\n",
      "[12]\tvalidation_0-logloss:0.69544\n",
      "[14]\tvalidation_0-logloss:0.69543\n",
      "[16]\tvalidation_0-logloss:0.69581\n",
      "[18]\tvalidation_0-logloss:0.69559\n",
      "[20]\tvalidation_0-logloss:0.69529\n",
      "[22]\tvalidation_0-logloss:0.69545\n",
      "[24]\tvalidation_0-logloss:0.69578\n",
      "[26]\tvalidation_0-logloss:0.69549\n",
      "[28]\tvalidation_0-logloss:0.69545\n",
      "[30]\tvalidation_0-logloss:0.69587\n",
      "[32]\tvalidation_0-logloss:0.69598\n",
      "[34]\tvalidation_0-logloss:0.69588\n",
      "[36]\tvalidation_0-logloss:0.69585\n",
      "[38]\tvalidation_0-logloss:0.69559\n",
      "[40]\tvalidation_0-logloss:0.69544\n",
      "[42]\tvalidation_0-logloss:0.69537\n",
      "[44]\tvalidation_0-logloss:0.69540\n",
      "[46]\tvalidation_0-logloss:0.69542\n",
      "[48]\tvalidation_0-logloss:0.69538\n",
      "[50]\tvalidation_0-logloss:0.69549\n",
      "[52]\tvalidation_0-logloss:0.69556\n",
      "[54]\tvalidation_0-logloss:0.69591\n",
      "[56]\tvalidation_0-logloss:0.69550\n",
      "[58]\tvalidation_0-logloss:0.69542\n",
      "[60]\tvalidation_0-logloss:0.69549\n",
      "[62]\tvalidation_0-logloss:0.69552\n",
      "[64]\tvalidation_0-logloss:0.69543\n",
      "[66]\tvalidation_0-logloss:0.69561\n",
      "[68]\tvalidation_0-logloss:0.69579\n",
      "[70]\tvalidation_0-logloss:0.69583\n",
      "[72]\tvalidation_0-logloss:0.69586\n",
      "[74]\tvalidation_0-logloss:0.69596\n",
      "[76]\tvalidation_0-logloss:0.69628\n",
      "[78]\tvalidation_0-logloss:0.69608\n",
      "[80]\tvalidation_0-logloss:0.69601\n",
      "[82]\tvalidation_0-logloss:0.69596\n",
      "[84]\tvalidation_0-logloss:0.69627\n",
      "[86]\tvalidation_0-logloss:0.69646\n",
      "[88]\tvalidation_0-logloss:0.69615\n",
      "[90]\tvalidation_0-logloss:0.69635\n",
      "[92]\tvalidation_0-logloss:0.69628\n",
      "[94]\tvalidation_0-logloss:0.69645\n",
      "[96]\tvalidation_0-logloss:0.69663\n",
      "[98]\tvalidation_0-logloss:0.69689\n",
      "[100]\tvalidation_0-logloss:0.69678\n",
      "[102]\tvalidation_0-logloss:0.69692\n",
      "[104]\tvalidation_0-logloss:0.69682\n",
      "[106]\tvalidation_0-logloss:0.69708\n",
      "[108]\tvalidation_0-logloss:0.69731\n",
      "[110]\tvalidation_0-logloss:0.69730\n",
      "[112]\tvalidation_0-logloss:0.69802\n",
      "[114]\tvalidation_0-logloss:0.69798\n",
      "[116]\tvalidation_0-logloss:0.69809\n",
      "[118]\tvalidation_0-logloss:0.69826\n",
      "[120]\tvalidation_0-logloss:0.69860\n",
      "[122]\tvalidation_0-logloss:0.69908\n",
      "[124]\tvalidation_0-logloss:0.69881\n",
      "[126]\tvalidation_0-logloss:0.69906\n",
      "[128]\tvalidation_0-logloss:0.69881\n",
      "[130]\tvalidation_0-logloss:0.69893\n",
      "[132]\tvalidation_0-logloss:0.69880\n",
      "[134]\tvalidation_0-logloss:0.69877\n",
      "[136]\tvalidation_0-logloss:0.69889\n",
      "[138]\tvalidation_0-logloss:0.69894\n",
      "[140]\tvalidation_0-logloss:0.69893\n",
      "[142]\tvalidation_0-logloss:0.69906\n",
      "[144]\tvalidation_0-logloss:0.69917\n",
      "[146]\tvalidation_0-logloss:0.69891\n",
      "[148]\tvalidation_0-logloss:0.69942\n",
      "[150]\tvalidation_0-logloss:0.69932\n",
      "[152]\tvalidation_0-logloss:0.69934\n",
      "[154]\tvalidation_0-logloss:0.69951\n",
      "[156]\tvalidation_0-logloss:0.69958\n",
      "[158]\tvalidation_0-logloss:0.69974\n",
      "[160]\tvalidation_0-logloss:0.69963\n",
      "[162]\tvalidation_0-logloss:0.69955\n",
      "[164]\tvalidation_0-logloss:0.69992\n",
      "[166]\tvalidation_0-logloss:0.70064\n",
      "[168]\tvalidation_0-logloss:0.70081\n",
      "[170]\tvalidation_0-logloss:0.70086\n",
      "[172]\tvalidation_0-logloss:0.70094\n",
      "[174]\tvalidation_0-logloss:0.70080\n",
      "[176]\tvalidation_0-logloss:0.70109\n",
      "[178]\tvalidation_0-logloss:0.70164\n",
      "[180]\tvalidation_0-logloss:0.70169\n",
      "[182]\tvalidation_0-logloss:0.70257\n",
      "[184]\tvalidation_0-logloss:0.70289\n",
      "[186]\tvalidation_0-logloss:0.70253\n",
      "[188]\tvalidation_0-logloss:0.70254\n",
      "[190]\tvalidation_0-logloss:0.70278\n",
      "[192]\tvalidation_0-logloss:0.70237\n",
      "[194]\tvalidation_0-logloss:0.70260\n",
      "[196]\tvalidation_0-logloss:0.70272\n",
      "[198]\tvalidation_0-logloss:0.70280\n",
      "[200]\tvalidation_0-logloss:0.70336\n",
      "[202]\tvalidation_0-logloss:0.70334\n",
      "[204]\tvalidation_0-logloss:0.70349\n",
      "[206]\tvalidation_0-logloss:0.70332\n",
      "[208]\tvalidation_0-logloss:0.70347\n",
      "[210]\tvalidation_0-logloss:0.70335\n",
      "[212]\tvalidation_0-logloss:0.70365\n",
      "[214]\tvalidation_0-logloss:0.70354\n",
      "[216]\tvalidation_0-logloss:0.70343\n",
      "[218]\tvalidation_0-logloss:0.70341\n",
      "[220]\tvalidation_0-logloss:0.70350\n",
      "[222]\tvalidation_0-logloss:0.70379\n",
      "[224]\tvalidation_0-logloss:0.70427\n",
      "[226]\tvalidation_0-logloss:0.70498\n",
      "[228]\tvalidation_0-logloss:0.70497\n",
      "[230]\tvalidation_0-logloss:0.70525\n",
      "[232]\tvalidation_0-logloss:0.70534\n",
      "[234]\tvalidation_0-logloss:0.70535\n",
      "[236]\tvalidation_0-logloss:0.70552\n",
      "[238]\tvalidation_0-logloss:0.70791\n",
      "[240]\tvalidation_0-logloss:0.70773\n",
      "[242]\tvalidation_0-logloss:0.70828\n",
      "[244]\tvalidation_0-logloss:0.70823\n",
      "[246]\tvalidation_0-logloss:0.70874\n",
      "[248]\tvalidation_0-logloss:0.70908\n",
      "[250]\tvalidation_0-logloss:0.70895\n",
      "[252]\tvalidation_0-logloss:0.70923\n",
      "[253]\tvalidation_0-logloss:0.70920\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:17:08,525] Trial 71 finished with value: 0.6952025396848492 and parameters: {'eta': 0.17012421964514068, 'gamma': 0.05129797462542687, 'max_depth': 3, 'min_child_weight': 3, 'lambda': 0.17098214049755933, 'alpha': 0.9429737739484164}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:17:13] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69574\n",
      "[2]\tvalidation_0-logloss:0.69477\n",
      "[4]\tvalidation_0-logloss:0.69591\n",
      "[6]\tvalidation_0-logloss:0.69491\n",
      "[8]\tvalidation_0-logloss:0.69522\n",
      "[10]\tvalidation_0-logloss:0.69529\n",
      "[12]\tvalidation_0-logloss:0.69551\n",
      "[14]\tvalidation_0-logloss:0.69481\n",
      "[16]\tvalidation_0-logloss:0.69434\n",
      "[18]\tvalidation_0-logloss:0.69446\n",
      "[20]\tvalidation_0-logloss:0.69489\n",
      "[22]\tvalidation_0-logloss:0.69487\n",
      "[24]\tvalidation_0-logloss:0.69468\n",
      "[26]\tvalidation_0-logloss:0.69538\n",
      "[28]\tvalidation_0-logloss:0.69545\n",
      "[30]\tvalidation_0-logloss:0.69529\n",
      "[32]\tvalidation_0-logloss:0.69561\n",
      "[34]\tvalidation_0-logloss:0.69840\n",
      "[36]\tvalidation_0-logloss:0.69815\n",
      "[38]\tvalidation_0-logloss:0.69840\n",
      "[40]\tvalidation_0-logloss:0.69832\n",
      "[42]\tvalidation_0-logloss:0.69910\n",
      "[44]\tvalidation_0-logloss:0.69943\n",
      "[46]\tvalidation_0-logloss:0.69944\n",
      "[48]\tvalidation_0-logloss:0.69966\n",
      "[50]\tvalidation_0-logloss:0.69990\n",
      "[52]\tvalidation_0-logloss:0.69964\n",
      "[54]\tvalidation_0-logloss:0.70030\n",
      "[56]\tvalidation_0-logloss:0.69997\n",
      "[58]\tvalidation_0-logloss:0.69999\n",
      "[60]\tvalidation_0-logloss:0.70006\n",
      "[62]\tvalidation_0-logloss:0.70002\n",
      "[64]\tvalidation_0-logloss:0.70121\n",
      "[66]\tvalidation_0-logloss:0.70150\n",
      "[68]\tvalidation_0-logloss:0.70122\n",
      "[70]\tvalidation_0-logloss:0.70074\n",
      "[72]\tvalidation_0-logloss:0.70122\n",
      "[74]\tvalidation_0-logloss:0.70204\n",
      "[76]\tvalidation_0-logloss:0.70271\n",
      "[78]\tvalidation_0-logloss:0.70277\n",
      "[80]\tvalidation_0-logloss:0.70286\n",
      "[82]\tvalidation_0-logloss:0.70354\n",
      "[84]\tvalidation_0-logloss:0.70387\n",
      "[86]\tvalidation_0-logloss:0.70482\n",
      "[88]\tvalidation_0-logloss:0.70467\n",
      "[90]\tvalidation_0-logloss:0.70481\n",
      "[92]\tvalidation_0-logloss:0.70549\n",
      "[94]\tvalidation_0-logloss:0.70588\n",
      "[96]\tvalidation_0-logloss:0.70579\n",
      "[98]\tvalidation_0-logloss:0.70580\n",
      "[100]\tvalidation_0-logloss:0.70694\n",
      "[102]\tvalidation_0-logloss:0.70768\n",
      "[104]\tvalidation_0-logloss:0.70784\n",
      "[106]\tvalidation_0-logloss:0.70785\n",
      "[108]\tvalidation_0-logloss:0.70898\n",
      "[110]\tvalidation_0-logloss:0.70889\n",
      "[112]\tvalidation_0-logloss:0.70875\n",
      "[114]\tvalidation_0-logloss:0.70977\n",
      "[116]\tvalidation_0-logloss:0.70957\n",
      "[118]\tvalidation_0-logloss:0.70926\n",
      "[120]\tvalidation_0-logloss:0.70977\n",
      "[122]\tvalidation_0-logloss:0.70975\n",
      "[124]\tvalidation_0-logloss:0.70972\n",
      "[126]\tvalidation_0-logloss:0.70952\n",
      "[128]\tvalidation_0-logloss:0.70970\n",
      "[130]\tvalidation_0-logloss:0.71086\n",
      "[132]\tvalidation_0-logloss:0.71139\n",
      "[134]\tvalidation_0-logloss:0.71165\n",
      "[136]\tvalidation_0-logloss:0.71163\n",
      "[138]\tvalidation_0-logloss:0.71187\n",
      "[140]\tvalidation_0-logloss:0.71194\n",
      "[142]\tvalidation_0-logloss:0.71181\n",
      "[144]\tvalidation_0-logloss:0.71230\n",
      "[146]\tvalidation_0-logloss:0.71200\n",
      "[148]\tvalidation_0-logloss:0.71209\n",
      "[150]\tvalidation_0-logloss:0.71167\n",
      "[152]\tvalidation_0-logloss:0.71169\n",
      "[154]\tvalidation_0-logloss:0.71209\n",
      "[156]\tvalidation_0-logloss:0.71087\n",
      "[158]\tvalidation_0-logloss:0.71080\n",
      "[160]\tvalidation_0-logloss:0.71109\n",
      "[162]\tvalidation_0-logloss:0.71114\n",
      "[164]\tvalidation_0-logloss:0.71094\n",
      "[166]\tvalidation_0-logloss:0.71099\n",
      "[168]\tvalidation_0-logloss:0.71046\n",
      "[170]\tvalidation_0-logloss:0.71029\n",
      "[172]\tvalidation_0-logloss:0.71327\n",
      "[174]\tvalidation_0-logloss:0.71273\n",
      "[176]\tvalidation_0-logloss:0.71264\n",
      "[178]\tvalidation_0-logloss:0.71312\n",
      "[180]\tvalidation_0-logloss:0.71310\n",
      "[182]\tvalidation_0-logloss:0.71323\n",
      "[184]\tvalidation_0-logloss:0.71352\n",
      "[186]\tvalidation_0-logloss:0.71352\n",
      "[188]\tvalidation_0-logloss:0.71351\n",
      "[190]\tvalidation_0-logloss:0.71364\n",
      "[192]\tvalidation_0-logloss:0.71478\n",
      "[194]\tvalidation_0-logloss:0.71504\n",
      "[196]\tvalidation_0-logloss:0.71618\n",
      "[198]\tvalidation_0-logloss:0.71750\n",
      "[200]\tvalidation_0-logloss:0.71777\n",
      "[202]\tvalidation_0-logloss:0.71795\n",
      "[204]\tvalidation_0-logloss:0.71819\n",
      "[206]\tvalidation_0-logloss:0.71803\n",
      "[208]\tvalidation_0-logloss:0.71629\n",
      "[210]\tvalidation_0-logloss:0.71687\n",
      "[212]\tvalidation_0-logloss:0.71761\n",
      "[214]\tvalidation_0-logloss:0.71905\n",
      "[216]\tvalidation_0-logloss:0.71836\n",
      "[218]\tvalidation_0-logloss:0.71822\n",
      "[220]\tvalidation_0-logloss:0.71802\n",
      "[222]\tvalidation_0-logloss:0.71823\n",
      "[224]\tvalidation_0-logloss:0.71919\n",
      "[226]\tvalidation_0-logloss:0.71923\n",
      "[228]\tvalidation_0-logloss:0.71909\n",
      "[230]\tvalidation_0-logloss:0.71990\n",
      "[232]\tvalidation_0-logloss:0.71976\n",
      "[234]\tvalidation_0-logloss:0.71949\n",
      "[236]\tvalidation_0-logloss:0.72067\n",
      "[238]\tvalidation_0-logloss:0.72075\n",
      "[240]\tvalidation_0-logloss:0.72134\n",
      "[242]\tvalidation_0-logloss:0.72203\n",
      "[244]\tvalidation_0-logloss:0.72332\n",
      "[246]\tvalidation_0-logloss:0.72305\n",
      "[248]\tvalidation_0-logloss:0.72316\n",
      "[250]\tvalidation_0-logloss:0.72425\n",
      "[252]\tvalidation_0-logloss:0.72418\n",
      "[254]\tvalidation_0-logloss:0.72432\n",
      "[256]\tvalidation_0-logloss:0.72364\n",
      "[258]\tvalidation_0-logloss:0.72353\n",
      "[260]\tvalidation_0-logloss:0.72378\n",
      "[262]\tvalidation_0-logloss:0.72347\n",
      "[264]\tvalidation_0-logloss:0.72389\n",
      "[265]\tvalidation_0-logloss:0.72390\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:18:22,394] Trial 72 finished with value: 0.6942052377904075 and parameters: {'eta': 0.2453434223097501, 'gamma': 0.2402768908253476, 'max_depth': 3, 'min_child_weight': 2, 'lambda': 0.24918905858869303, 'alpha': 0.9594645557186462}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:18:27] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69587\n",
      "[2]\tvalidation_0-logloss:0.69508\n",
      "[4]\tvalidation_0-logloss:0.69549\n",
      "[6]\tvalidation_0-logloss:0.69540\n",
      "[8]\tvalidation_0-logloss:0.69554\n",
      "[10]\tvalidation_0-logloss:0.69564\n",
      "[12]\tvalidation_0-logloss:0.69610\n",
      "[14]\tvalidation_0-logloss:0.69640\n",
      "[16]\tvalidation_0-logloss:0.69569\n",
      "[18]\tvalidation_0-logloss:0.69564\n",
      "[20]\tvalidation_0-logloss:0.69580\n",
      "[22]\tvalidation_0-logloss:0.69577\n",
      "[24]\tvalidation_0-logloss:0.69596\n",
      "[26]\tvalidation_0-logloss:0.69588\n",
      "[28]\tvalidation_0-logloss:0.69615\n",
      "[30]\tvalidation_0-logloss:0.69713\n",
      "[32]\tvalidation_0-logloss:0.69788\n",
      "[34]\tvalidation_0-logloss:0.69783\n",
      "[36]\tvalidation_0-logloss:0.69882\n",
      "[38]\tvalidation_0-logloss:0.69913\n",
      "[40]\tvalidation_0-logloss:0.69899\n",
      "[42]\tvalidation_0-logloss:0.69971\n",
      "[44]\tvalidation_0-logloss:0.69984\n",
      "[46]\tvalidation_0-logloss:0.69973\n",
      "[48]\tvalidation_0-logloss:0.70074\n",
      "[50]\tvalidation_0-logloss:0.70124\n",
      "[52]\tvalidation_0-logloss:0.70142\n",
      "[54]\tvalidation_0-logloss:0.70149\n",
      "[56]\tvalidation_0-logloss:0.70138\n",
      "[58]\tvalidation_0-logloss:0.70217\n",
      "[60]\tvalidation_0-logloss:0.70251\n",
      "[62]\tvalidation_0-logloss:0.70281\n",
      "[64]\tvalidation_0-logloss:0.70242\n",
      "[66]\tvalidation_0-logloss:0.70245\n",
      "[68]\tvalidation_0-logloss:0.70298\n",
      "[70]\tvalidation_0-logloss:0.70309\n",
      "[72]\tvalidation_0-logloss:0.70441\n",
      "[74]\tvalidation_0-logloss:0.70489\n",
      "[76]\tvalidation_0-logloss:0.70537\n",
      "[78]\tvalidation_0-logloss:0.70545\n",
      "[80]\tvalidation_0-logloss:0.70640\n",
      "[82]\tvalidation_0-logloss:0.70720\n",
      "[84]\tvalidation_0-logloss:0.70745\n",
      "[86]\tvalidation_0-logloss:0.70816\n",
      "[88]\tvalidation_0-logloss:0.70825\n",
      "[90]\tvalidation_0-logloss:0.70816\n",
      "[92]\tvalidation_0-logloss:0.70995\n",
      "[94]\tvalidation_0-logloss:0.71040\n",
      "[96]\tvalidation_0-logloss:0.71098\n",
      "[98]\tvalidation_0-logloss:0.71164\n",
      "[100]\tvalidation_0-logloss:0.71184\n",
      "[102]\tvalidation_0-logloss:0.71195\n",
      "[104]\tvalidation_0-logloss:0.71167\n",
      "[106]\tvalidation_0-logloss:0.71193\n",
      "[108]\tvalidation_0-logloss:0.71176\n",
      "[110]\tvalidation_0-logloss:0.71141\n",
      "[112]\tvalidation_0-logloss:0.71104\n",
      "[114]\tvalidation_0-logloss:0.71146\n",
      "[116]\tvalidation_0-logloss:0.71133\n",
      "[118]\tvalidation_0-logloss:0.71132\n",
      "[120]\tvalidation_0-logloss:0.71160\n",
      "[122]\tvalidation_0-logloss:0.71228\n",
      "[124]\tvalidation_0-logloss:0.71258\n",
      "[126]\tvalidation_0-logloss:0.71234\n",
      "[128]\tvalidation_0-logloss:0.71346\n",
      "[130]\tvalidation_0-logloss:0.71313\n",
      "[132]\tvalidation_0-logloss:0.71410\n",
      "[134]\tvalidation_0-logloss:0.71388\n",
      "[136]\tvalidation_0-logloss:0.71449\n",
      "[138]\tvalidation_0-logloss:0.71485\n",
      "[140]\tvalidation_0-logloss:0.71503\n",
      "[142]\tvalidation_0-logloss:0.71507\n",
      "[144]\tvalidation_0-logloss:0.71468\n",
      "[146]\tvalidation_0-logloss:0.71432\n",
      "[148]\tvalidation_0-logloss:0.71484\n",
      "[150]\tvalidation_0-logloss:0.71496\n",
      "[152]\tvalidation_0-logloss:0.71567\n",
      "[154]\tvalidation_0-logloss:0.71580\n",
      "[156]\tvalidation_0-logloss:0.71618\n",
      "[158]\tvalidation_0-logloss:0.71614\n",
      "[160]\tvalidation_0-logloss:0.71664\n",
      "[162]\tvalidation_0-logloss:0.71688\n",
      "[164]\tvalidation_0-logloss:0.71701\n",
      "[166]\tvalidation_0-logloss:0.71728\n",
      "[168]\tvalidation_0-logloss:0.71731\n",
      "[170]\tvalidation_0-logloss:0.71812\n",
      "[172]\tvalidation_0-logloss:0.71920\n",
      "[174]\tvalidation_0-logloss:0.72038\n",
      "[176]\tvalidation_0-logloss:0.72047\n",
      "[178]\tvalidation_0-logloss:0.72137\n",
      "[180]\tvalidation_0-logloss:0.72246\n",
      "[182]\tvalidation_0-logloss:0.72324\n",
      "[184]\tvalidation_0-logloss:0.72369\n",
      "[186]\tvalidation_0-logloss:0.72363\n",
      "[188]\tvalidation_0-logloss:0.72503\n",
      "[190]\tvalidation_0-logloss:0.72482\n",
      "[192]\tvalidation_0-logloss:0.72463\n",
      "[194]\tvalidation_0-logloss:0.72363\n",
      "[196]\tvalidation_0-logloss:0.72707\n",
      "[198]\tvalidation_0-logloss:0.72845\n",
      "[200]\tvalidation_0-logloss:0.72903\n",
      "[202]\tvalidation_0-logloss:0.72913\n",
      "[204]\tvalidation_0-logloss:0.73063\n",
      "[206]\tvalidation_0-logloss:0.73082\n",
      "[208]\tvalidation_0-logloss:0.73176\n",
      "[210]\tvalidation_0-logloss:0.73238\n",
      "[212]\tvalidation_0-logloss:0.73264\n",
      "[214]\tvalidation_0-logloss:0.73266\n",
      "[216]\tvalidation_0-logloss:0.73517\n",
      "[218]\tvalidation_0-logloss:0.73610\n",
      "[220]\tvalidation_0-logloss:0.73634\n",
      "[222]\tvalidation_0-logloss:0.73711\n",
      "[224]\tvalidation_0-logloss:0.73715\n",
      "[226]\tvalidation_0-logloss:0.73704\n",
      "[228]\tvalidation_0-logloss:0.73718\n",
      "[230]\tvalidation_0-logloss:0.73720\n",
      "[232]\tvalidation_0-logloss:0.73738\n",
      "[234]\tvalidation_0-logloss:0.73751\n",
      "[236]\tvalidation_0-logloss:0.73777\n",
      "[238]\tvalidation_0-logloss:0.73773\n",
      "[240]\tvalidation_0-logloss:0.73721\n",
      "[242]\tvalidation_0-logloss:0.73982\n",
      "[244]\tvalidation_0-logloss:0.74042\n",
      "[246]\tvalidation_0-logloss:0.74060\n",
      "[248]\tvalidation_0-logloss:0.74082\n",
      "[250]\tvalidation_0-logloss:0.74086\n",
      "[251]\tvalidation_0-logloss:0.74085\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:19:37,285] Trial 73 finished with value: 0.6950687020271535 and parameters: {'eta': 0.22248876354862426, 'gamma': 0.10710566467603737, 'max_depth': 4, 'min_child_weight': 1, 'lambda': 0.11286001469179796, 'alpha': 0.9014017538245773}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:19:42] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69534\n",
      "[2]\tvalidation_0-logloss:0.69564\n",
      "[4]\tvalidation_0-logloss:0.69528\n",
      "[6]\tvalidation_0-logloss:0.69554\n",
      "[8]\tvalidation_0-logloss:0.69510\n",
      "[10]\tvalidation_0-logloss:0.69501\n",
      "[12]\tvalidation_0-logloss:0.69532\n",
      "[14]\tvalidation_0-logloss:0.69561\n",
      "[16]\tvalidation_0-logloss:0.69597\n",
      "[18]\tvalidation_0-logloss:0.69605\n",
      "[20]\tvalidation_0-logloss:0.69583\n",
      "[22]\tvalidation_0-logloss:0.69623\n",
      "[24]\tvalidation_0-logloss:0.69632\n",
      "[26]\tvalidation_0-logloss:0.69636\n",
      "[28]\tvalidation_0-logloss:0.69631\n",
      "[30]\tvalidation_0-logloss:0.69627\n",
      "[32]\tvalidation_0-logloss:0.69656\n",
      "[34]\tvalidation_0-logloss:0.69691\n",
      "[36]\tvalidation_0-logloss:0.69674\n",
      "[38]\tvalidation_0-logloss:0.69619\n",
      "[40]\tvalidation_0-logloss:0.69596\n",
      "[42]\tvalidation_0-logloss:0.69592\n",
      "[44]\tvalidation_0-logloss:0.69611\n",
      "[46]\tvalidation_0-logloss:0.69630\n",
      "[48]\tvalidation_0-logloss:0.69624\n",
      "[50]\tvalidation_0-logloss:0.69616\n",
      "[52]\tvalidation_0-logloss:0.69636\n",
      "[54]\tvalidation_0-logloss:0.69620\n",
      "[56]\tvalidation_0-logloss:0.69610\n",
      "[58]\tvalidation_0-logloss:0.69649\n",
      "[60]\tvalidation_0-logloss:0.69661\n",
      "[62]\tvalidation_0-logloss:0.69667\n",
      "[64]\tvalidation_0-logloss:0.69665\n",
      "[66]\tvalidation_0-logloss:0.69659\n",
      "[68]\tvalidation_0-logloss:0.69672\n",
      "[70]\tvalidation_0-logloss:0.69718\n",
      "[72]\tvalidation_0-logloss:0.69702\n",
      "[74]\tvalidation_0-logloss:0.69685\n",
      "[76]\tvalidation_0-logloss:0.69691\n",
      "[78]\tvalidation_0-logloss:0.69697\n",
      "[80]\tvalidation_0-logloss:0.69668\n",
      "[82]\tvalidation_0-logloss:0.69667\n",
      "[84]\tvalidation_0-logloss:0.69685\n",
      "[86]\tvalidation_0-logloss:0.69774\n",
      "[88]\tvalidation_0-logloss:0.69788\n",
      "[90]\tvalidation_0-logloss:0.69793\n",
      "[92]\tvalidation_0-logloss:0.69800\n",
      "[94]\tvalidation_0-logloss:0.69794\n",
      "[96]\tvalidation_0-logloss:0.69761\n",
      "[98]\tvalidation_0-logloss:0.69765\n",
      "[100]\tvalidation_0-logloss:0.69768\n",
      "[102]\tvalidation_0-logloss:0.69773\n",
      "[104]\tvalidation_0-logloss:0.69789\n",
      "[106]\tvalidation_0-logloss:0.69795\n",
      "[108]\tvalidation_0-logloss:0.69788\n",
      "[110]\tvalidation_0-logloss:0.69795\n",
      "[112]\tvalidation_0-logloss:0.69787\n",
      "[114]\tvalidation_0-logloss:0.69801\n",
      "[116]\tvalidation_0-logloss:0.69811\n",
      "[118]\tvalidation_0-logloss:0.69807\n",
      "[120]\tvalidation_0-logloss:0.69814\n",
      "[122]\tvalidation_0-logloss:0.69822\n",
      "[124]\tvalidation_0-logloss:0.69826\n",
      "[126]\tvalidation_0-logloss:0.69824\n",
      "[128]\tvalidation_0-logloss:0.69836\n",
      "[130]\tvalidation_0-logloss:0.69840\n",
      "[132]\tvalidation_0-logloss:0.69839\n",
      "[134]\tvalidation_0-logloss:0.69838\n",
      "[136]\tvalidation_0-logloss:0.69837\n",
      "[138]\tvalidation_0-logloss:0.69857\n",
      "[140]\tvalidation_0-logloss:0.69858\n",
      "[142]\tvalidation_0-logloss:0.69879\n",
      "[144]\tvalidation_0-logloss:0.69915\n",
      "[146]\tvalidation_0-logloss:0.69904\n",
      "[148]\tvalidation_0-logloss:0.69938\n",
      "[150]\tvalidation_0-logloss:0.69944\n",
      "[152]\tvalidation_0-logloss:0.69950\n",
      "[154]\tvalidation_0-logloss:0.69963\n",
      "[156]\tvalidation_0-logloss:0.69970\n",
      "[158]\tvalidation_0-logloss:0.69974\n",
      "[160]\tvalidation_0-logloss:0.69983\n",
      "[162]\tvalidation_0-logloss:0.69982\n",
      "[164]\tvalidation_0-logloss:0.70007\n",
      "[166]\tvalidation_0-logloss:0.70008\n",
      "[168]\tvalidation_0-logloss:0.70027\n",
      "[170]\tvalidation_0-logloss:0.70044\n",
      "[172]\tvalidation_0-logloss:0.70046\n",
      "[174]\tvalidation_0-logloss:0.70050\n",
      "[176]\tvalidation_0-logloss:0.70050\n",
      "[178]\tvalidation_0-logloss:0.70057\n",
      "[180]\tvalidation_0-logloss:0.70058\n",
      "[182]\tvalidation_0-logloss:0.70058\n",
      "[184]\tvalidation_0-logloss:0.70075\n",
      "[186]\tvalidation_0-logloss:0.70095\n",
      "[188]\tvalidation_0-logloss:0.70082\n",
      "[190]\tvalidation_0-logloss:0.70106\n",
      "[192]\tvalidation_0-logloss:0.70092\n",
      "[194]\tvalidation_0-logloss:0.70102\n",
      "[196]\tvalidation_0-logloss:0.70106\n",
      "[198]\tvalidation_0-logloss:0.70095\n",
      "[200]\tvalidation_0-logloss:0.70092\n",
      "[202]\tvalidation_0-logloss:0.70094\n",
      "[204]\tvalidation_0-logloss:0.70079\n",
      "[206]\tvalidation_0-logloss:0.70090\n",
      "[208]\tvalidation_0-logloss:0.70077\n",
      "[210]\tvalidation_0-logloss:0.70071\n",
      "[212]\tvalidation_0-logloss:0.70095\n",
      "[214]\tvalidation_0-logloss:0.70101\n",
      "[216]\tvalidation_0-logloss:0.70100\n",
      "[218]\tvalidation_0-logloss:0.70112\n",
      "[220]\tvalidation_0-logloss:0.70099\n",
      "[222]\tvalidation_0-logloss:0.70101\n",
      "[224]\tvalidation_0-logloss:0.70137\n",
      "[226]\tvalidation_0-logloss:0.70142\n",
      "[228]\tvalidation_0-logloss:0.70124\n",
      "[230]\tvalidation_0-logloss:0.70119\n",
      "[232]\tvalidation_0-logloss:0.70116\n",
      "[234]\tvalidation_0-logloss:0.70098\n",
      "[236]\tvalidation_0-logloss:0.70097\n",
      "[238]\tvalidation_0-logloss:0.70130\n",
      "[240]\tvalidation_0-logloss:0.70141\n",
      "[242]\tvalidation_0-logloss:0.70140\n",
      "[244]\tvalidation_0-logloss:0.70133\n",
      "[246]\tvalidation_0-logloss:0.70132\n",
      "[248]\tvalidation_0-logloss:0.70135\n",
      "[250]\tvalidation_0-logloss:0.70183\n",
      "[252]\tvalidation_0-logloss:0.70187\n",
      "[254]\tvalidation_0-logloss:0.70218\n",
      "[256]\tvalidation_0-logloss:0.70211\n",
      "[258]\tvalidation_0-logloss:0.70278\n",
      "[259]\tvalidation_0-logloss:0.70268\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:20:50,564] Trial 74 finished with value: 0.6950078961214832 and parameters: {'eta': 0.08741294132103276, 'gamma': 0.19309894050139456, 'max_depth': 3, 'min_child_weight': 2, 'lambda': 0.024960279809952884, 'alpha': 0.14462334719765388}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:20:55] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69527\n",
      "[2]\tvalidation_0-logloss:0.69457\n",
      "[4]\tvalidation_0-logloss:0.69472\n",
      "[6]\tvalidation_0-logloss:0.69514\n",
      "[8]\tvalidation_0-logloss:0.69519\n",
      "[10]\tvalidation_0-logloss:0.69597\n",
      "[12]\tvalidation_0-logloss:0.69586\n",
      "[14]\tvalidation_0-logloss:0.69624\n",
      "[16]\tvalidation_0-logloss:0.69606\n",
      "[18]\tvalidation_0-logloss:0.69628\n",
      "[20]\tvalidation_0-logloss:0.69624\n",
      "[22]\tvalidation_0-logloss:0.69611\n",
      "[24]\tvalidation_0-logloss:0.69610\n",
      "[26]\tvalidation_0-logloss:0.69719\n",
      "[28]\tvalidation_0-logloss:0.69682\n",
      "[30]\tvalidation_0-logloss:0.69817\n",
      "[32]\tvalidation_0-logloss:0.69862\n",
      "[34]\tvalidation_0-logloss:0.69842\n",
      "[36]\tvalidation_0-logloss:0.69809\n",
      "[38]\tvalidation_0-logloss:0.69866\n",
      "[40]\tvalidation_0-logloss:0.69933\n",
      "[42]\tvalidation_0-logloss:0.69984\n",
      "[44]\tvalidation_0-logloss:0.69947\n",
      "[46]\tvalidation_0-logloss:0.70057\n",
      "[48]\tvalidation_0-logloss:0.70078\n",
      "[50]\tvalidation_0-logloss:0.70054\n",
      "[52]\tvalidation_0-logloss:0.70028\n",
      "[54]\tvalidation_0-logloss:0.69960\n",
      "[56]\tvalidation_0-logloss:0.69963\n",
      "[58]\tvalidation_0-logloss:0.69986\n",
      "[60]\tvalidation_0-logloss:0.70006\n",
      "[62]\tvalidation_0-logloss:0.70008\n",
      "[64]\tvalidation_0-logloss:0.70008\n",
      "[66]\tvalidation_0-logloss:0.69972\n",
      "[68]\tvalidation_0-logloss:0.69936\n",
      "[70]\tvalidation_0-logloss:0.69959\n",
      "[72]\tvalidation_0-logloss:0.69941\n",
      "[74]\tvalidation_0-logloss:0.69949\n",
      "[76]\tvalidation_0-logloss:0.69941\n",
      "[78]\tvalidation_0-logloss:0.69956\n",
      "[80]\tvalidation_0-logloss:0.69969\n",
      "[82]\tvalidation_0-logloss:0.70026\n",
      "[84]\tvalidation_0-logloss:0.70050\n",
      "[86]\tvalidation_0-logloss:0.70061\n",
      "[88]\tvalidation_0-logloss:0.70062\n",
      "[90]\tvalidation_0-logloss:0.70063\n",
      "[92]\tvalidation_0-logloss:0.70087\n",
      "[94]\tvalidation_0-logloss:0.70161\n",
      "[96]\tvalidation_0-logloss:0.70149\n",
      "[98]\tvalidation_0-logloss:0.70151\n",
      "[100]\tvalidation_0-logloss:0.70120\n",
      "[102]\tvalidation_0-logloss:0.70133\n",
      "[104]\tvalidation_0-logloss:0.70181\n",
      "[106]\tvalidation_0-logloss:0.70173\n",
      "[108]\tvalidation_0-logloss:0.70169\n",
      "[110]\tvalidation_0-logloss:0.70193\n",
      "[112]\tvalidation_0-logloss:0.70150\n",
      "[114]\tvalidation_0-logloss:0.70151\n",
      "[116]\tvalidation_0-logloss:0.70141\n",
      "[118]\tvalidation_0-logloss:0.70158\n",
      "[120]\tvalidation_0-logloss:0.70163\n",
      "[122]\tvalidation_0-logloss:0.70185\n",
      "[124]\tvalidation_0-logloss:0.70201\n",
      "[126]\tvalidation_0-logloss:0.70195\n",
      "[128]\tvalidation_0-logloss:0.70204\n",
      "[130]\tvalidation_0-logloss:0.70228\n",
      "[132]\tvalidation_0-logloss:0.70225\n",
      "[134]\tvalidation_0-logloss:0.70220\n",
      "[136]\tvalidation_0-logloss:0.70213\n",
      "[138]\tvalidation_0-logloss:0.70223\n",
      "[140]\tvalidation_0-logloss:0.70205\n",
      "[142]\tvalidation_0-logloss:0.70271\n",
      "[144]\tvalidation_0-logloss:0.70271\n",
      "[146]\tvalidation_0-logloss:0.70267\n",
      "[148]\tvalidation_0-logloss:0.70265\n",
      "[150]\tvalidation_0-logloss:0.70315\n",
      "[152]\tvalidation_0-logloss:0.70377\n",
      "[154]\tvalidation_0-logloss:0.70392\n",
      "[156]\tvalidation_0-logloss:0.70392\n",
      "[158]\tvalidation_0-logloss:0.70390\n",
      "[160]\tvalidation_0-logloss:0.70374\n",
      "[162]\tvalidation_0-logloss:0.70393\n",
      "[164]\tvalidation_0-logloss:0.70384\n",
      "[166]\tvalidation_0-logloss:0.70377\n",
      "[168]\tvalidation_0-logloss:0.70391\n",
      "[170]\tvalidation_0-logloss:0.70399\n",
      "[172]\tvalidation_0-logloss:0.70380\n",
      "[174]\tvalidation_0-logloss:0.70379\n",
      "[176]\tvalidation_0-logloss:0.70380\n",
      "[178]\tvalidation_0-logloss:0.70408\n",
      "[180]\tvalidation_0-logloss:0.70408\n",
      "[182]\tvalidation_0-logloss:0.70406\n",
      "[184]\tvalidation_0-logloss:0.70428\n",
      "[186]\tvalidation_0-logloss:0.70437\n",
      "[188]\tvalidation_0-logloss:0.70436\n",
      "[190]\tvalidation_0-logloss:0.70416\n",
      "[192]\tvalidation_0-logloss:0.70435\n",
      "[194]\tvalidation_0-logloss:0.70389\n",
      "[196]\tvalidation_0-logloss:0.70352\n",
      "[198]\tvalidation_0-logloss:0.70352\n",
      "[200]\tvalidation_0-logloss:0.70349\n",
      "[202]\tvalidation_0-logloss:0.70362\n",
      "[204]\tvalidation_0-logloss:0.70362\n",
      "[206]\tvalidation_0-logloss:0.70374\n",
      "[208]\tvalidation_0-logloss:0.70360\n",
      "[210]\tvalidation_0-logloss:0.70368\n",
      "[212]\tvalidation_0-logloss:0.70361\n",
      "[214]\tvalidation_0-logloss:0.70367\n",
      "[216]\tvalidation_0-logloss:0.70350\n",
      "[218]\tvalidation_0-logloss:0.70347\n",
      "[220]\tvalidation_0-logloss:0.70383\n",
      "[222]\tvalidation_0-logloss:0.70387\n",
      "[224]\tvalidation_0-logloss:0.70392\n",
      "[226]\tvalidation_0-logloss:0.70415\n",
      "[228]\tvalidation_0-logloss:0.70382\n",
      "[230]\tvalidation_0-logloss:0.70398\n",
      "[232]\tvalidation_0-logloss:0.70383\n",
      "[234]\tvalidation_0-logloss:0.70375\n",
      "[236]\tvalidation_0-logloss:0.70390\n",
      "[238]\tvalidation_0-logloss:0.70408\n",
      "[240]\tvalidation_0-logloss:0.70432\n",
      "[242]\tvalidation_0-logloss:0.70439\n",
      "[244]\tvalidation_0-logloss:0.70449\n",
      "[246]\tvalidation_0-logloss:0.70447\n",
      "[248]\tvalidation_0-logloss:0.70465\n",
      "[250]\tvalidation_0-logloss:0.70466\n",
      "[252]\tvalidation_0-logloss:0.70492\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:21:56,438] Trial 75 finished with value: 0.6941576784392367 and parameters: {'eta': 0.23785461908943709, 'gamma': 0.1392022541860486, 'max_depth': 2, 'min_child_weight': 1, 'lambda': 0.07043083817419525, 'alpha': 0.09321219798961877}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:22:01] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69579\n",
      "[2]\tvalidation_0-logloss:0.69504\n",
      "[4]\tvalidation_0-logloss:0.69539\n",
      "[6]\tvalidation_0-logloss:0.69538\n",
      "[8]\tvalidation_0-logloss:0.69475\n",
      "[10]\tvalidation_0-logloss:0.69432\n",
      "[12]\tvalidation_0-logloss:0.69481\n",
      "[14]\tvalidation_0-logloss:0.69495\n",
      "[16]\tvalidation_0-logloss:0.69489\n",
      "[18]\tvalidation_0-logloss:0.69432\n",
      "[20]\tvalidation_0-logloss:0.69515\n",
      "[22]\tvalidation_0-logloss:0.69501\n",
      "[24]\tvalidation_0-logloss:0.69545\n",
      "[26]\tvalidation_0-logloss:0.69632\n",
      "[28]\tvalidation_0-logloss:0.69652\n",
      "[30]\tvalidation_0-logloss:0.69642\n",
      "[32]\tvalidation_0-logloss:0.69658\n",
      "[34]\tvalidation_0-logloss:0.69660\n",
      "[36]\tvalidation_0-logloss:0.69686\n",
      "[38]\tvalidation_0-logloss:0.69668\n",
      "[40]\tvalidation_0-logloss:0.69703\n",
      "[42]\tvalidation_0-logloss:0.69730\n",
      "[44]\tvalidation_0-logloss:0.69904\n",
      "[46]\tvalidation_0-logloss:0.69942\n",
      "[48]\tvalidation_0-logloss:0.69959\n",
      "[50]\tvalidation_0-logloss:0.69933\n",
      "[52]\tvalidation_0-logloss:0.69938\n",
      "[54]\tvalidation_0-logloss:0.69947\n",
      "[56]\tvalidation_0-logloss:0.70055\n",
      "[58]\tvalidation_0-logloss:0.70062\n",
      "[60]\tvalidation_0-logloss:0.70084\n",
      "[62]\tvalidation_0-logloss:0.70121\n",
      "[64]\tvalidation_0-logloss:0.70144\n",
      "[66]\tvalidation_0-logloss:0.70174\n",
      "[68]\tvalidation_0-logloss:0.70210\n",
      "[70]\tvalidation_0-logloss:0.70309\n",
      "[72]\tvalidation_0-logloss:0.70313\n",
      "[74]\tvalidation_0-logloss:0.70340\n",
      "[76]\tvalidation_0-logloss:0.70351\n",
      "[78]\tvalidation_0-logloss:0.70364\n",
      "[80]\tvalidation_0-logloss:0.70394\n",
      "[82]\tvalidation_0-logloss:0.70434\n",
      "[84]\tvalidation_0-logloss:0.70457\n",
      "[86]\tvalidation_0-logloss:0.70493\n",
      "[88]\tvalidation_0-logloss:0.70528\n",
      "[90]\tvalidation_0-logloss:0.70537\n",
      "[92]\tvalidation_0-logloss:0.70556\n",
      "[94]\tvalidation_0-logloss:0.70571\n",
      "[96]\tvalidation_0-logloss:0.70656\n",
      "[98]\tvalidation_0-logloss:0.70693\n",
      "[100]\tvalidation_0-logloss:0.70686\n",
      "[102]\tvalidation_0-logloss:0.70764\n",
      "[104]\tvalidation_0-logloss:0.70790\n",
      "[106]\tvalidation_0-logloss:0.70876\n",
      "[108]\tvalidation_0-logloss:0.70805\n",
      "[110]\tvalidation_0-logloss:0.70835\n",
      "[112]\tvalidation_0-logloss:0.70856\n",
      "[114]\tvalidation_0-logloss:0.70847\n",
      "[116]\tvalidation_0-logloss:0.70889\n",
      "[118]\tvalidation_0-logloss:0.70904\n",
      "[120]\tvalidation_0-logloss:0.70999\n",
      "[122]\tvalidation_0-logloss:0.71033\n",
      "[124]\tvalidation_0-logloss:0.71028\n",
      "[126]\tvalidation_0-logloss:0.71058\n",
      "[128]\tvalidation_0-logloss:0.71063\n",
      "[130]\tvalidation_0-logloss:0.71082\n",
      "[132]\tvalidation_0-logloss:0.71094\n",
      "[134]\tvalidation_0-logloss:0.71106\n",
      "[136]\tvalidation_0-logloss:0.71186\n",
      "[138]\tvalidation_0-logloss:0.71294\n",
      "[140]\tvalidation_0-logloss:0.71283\n",
      "[142]\tvalidation_0-logloss:0.71289\n",
      "[144]\tvalidation_0-logloss:0.71306\n",
      "[146]\tvalidation_0-logloss:0.71355\n",
      "[148]\tvalidation_0-logloss:0.71380\n",
      "[150]\tvalidation_0-logloss:0.71378\n",
      "[152]\tvalidation_0-logloss:0.71435\n",
      "[154]\tvalidation_0-logloss:0.71449\n",
      "[156]\tvalidation_0-logloss:0.71436\n",
      "[158]\tvalidation_0-logloss:0.71451\n",
      "[160]\tvalidation_0-logloss:0.71450\n",
      "[162]\tvalidation_0-logloss:0.71458\n",
      "[164]\tvalidation_0-logloss:0.71552\n",
      "[166]\tvalidation_0-logloss:0.71503\n",
      "[168]\tvalidation_0-logloss:0.71469\n",
      "[170]\tvalidation_0-logloss:0.71475\n",
      "[172]\tvalidation_0-logloss:0.71346\n",
      "[174]\tvalidation_0-logloss:0.71333\n",
      "[176]\tvalidation_0-logloss:0.71341\n",
      "[178]\tvalidation_0-logloss:0.71340\n",
      "[180]\tvalidation_0-logloss:0.71418\n",
      "[182]\tvalidation_0-logloss:0.71454\n",
      "[184]\tvalidation_0-logloss:0.71478\n",
      "[186]\tvalidation_0-logloss:0.71491\n",
      "[188]\tvalidation_0-logloss:0.71627\n",
      "[190]\tvalidation_0-logloss:0.71643\n",
      "[192]\tvalidation_0-logloss:0.71661\n",
      "[194]\tvalidation_0-logloss:0.71722\n",
      "[196]\tvalidation_0-logloss:0.71747\n",
      "[198]\tvalidation_0-logloss:0.71782\n",
      "[200]\tvalidation_0-logloss:0.71837\n",
      "[202]\tvalidation_0-logloss:0.71805\n",
      "[204]\tvalidation_0-logloss:0.71942\n",
      "[206]\tvalidation_0-logloss:0.71985\n",
      "[208]\tvalidation_0-logloss:0.71985\n",
      "[210]\tvalidation_0-logloss:0.71989\n",
      "[212]\tvalidation_0-logloss:0.72009\n",
      "[214]\tvalidation_0-logloss:0.72002\n",
      "[216]\tvalidation_0-logloss:0.72034\n",
      "[218]\tvalidation_0-logloss:0.72039\n",
      "[220]\tvalidation_0-logloss:0.72118\n",
      "[222]\tvalidation_0-logloss:0.72116\n",
      "[224]\tvalidation_0-logloss:0.72121\n",
      "[226]\tvalidation_0-logloss:0.72101\n",
      "[228]\tvalidation_0-logloss:0.72166\n",
      "[230]\tvalidation_0-logloss:0.72174\n",
      "[232]\tvalidation_0-logloss:0.72179\n",
      "[234]\tvalidation_0-logloss:0.72240\n",
      "[236]\tvalidation_0-logloss:0.72273\n",
      "[238]\tvalidation_0-logloss:0.72282\n",
      "[240]\tvalidation_0-logloss:0.72314\n",
      "[242]\tvalidation_0-logloss:0.72345\n",
      "[244]\tvalidation_0-logloss:0.72339\n",
      "[246]\tvalidation_0-logloss:0.72376\n",
      "[248]\tvalidation_0-logloss:0.72372\n",
      "[250]\tvalidation_0-logloss:0.72421\n",
      "[252]\tvalidation_0-logloss:0.72429\n",
      "[254]\tvalidation_0-logloss:0.72456\n",
      "[256]\tvalidation_0-logloss:0.72492\n",
      "[258]\tvalidation_0-logloss:0.72562\n",
      "[260]\tvalidation_0-logloss:0.72578\n",
      "[262]\tvalidation_0-logloss:0.72628\n",
      "[264]\tvalidation_0-logloss:0.72640\n",
      "[266]\tvalidation_0-logloss:0.72717\n",
      "[267]\tvalidation_0-logloss:0.72712\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:23:14,320] Trial 76 finished with value: 0.6941204574350444 and parameters: {'eta': 0.2091761097584778, 'gamma': 0.04540351175018742, 'max_depth': 4, 'min_child_weight': 3, 'lambda': 0.9022875155725648, 'alpha': 0.03903171222547711}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:23:19] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69687\n",
      "[2]\tvalidation_0-logloss:0.69606\n",
      "[4]\tvalidation_0-logloss:0.69681\n",
      "[6]\tvalidation_0-logloss:0.69817\n",
      "[8]\tvalidation_0-logloss:0.69832\n",
      "[10]\tvalidation_0-logloss:0.69731\n",
      "[12]\tvalidation_0-logloss:0.69775\n",
      "[14]\tvalidation_0-logloss:0.69952\n",
      "[16]\tvalidation_0-logloss:0.70124\n",
      "[18]\tvalidation_0-logloss:0.70186\n",
      "[20]\tvalidation_0-logloss:0.70314\n",
      "[22]\tvalidation_0-logloss:0.70199\n",
      "[24]\tvalidation_0-logloss:0.70240\n",
      "[26]\tvalidation_0-logloss:0.70225\n",
      "[28]\tvalidation_0-logloss:0.70157\n",
      "[30]\tvalidation_0-logloss:0.70337\n",
      "[32]\tvalidation_0-logloss:0.70298\n",
      "[34]\tvalidation_0-logloss:0.70524\n",
      "[36]\tvalidation_0-logloss:0.70505\n",
      "[38]\tvalidation_0-logloss:0.70501\n",
      "[40]\tvalidation_0-logloss:0.70575\n",
      "[42]\tvalidation_0-logloss:0.70656\n",
      "[44]\tvalidation_0-logloss:0.70699\n",
      "[46]\tvalidation_0-logloss:0.70775\n",
      "[48]\tvalidation_0-logloss:0.70763\n",
      "[50]\tvalidation_0-logloss:0.70780\n",
      "[52]\tvalidation_0-logloss:0.70848\n",
      "[54]\tvalidation_0-logloss:0.71049\n",
      "[56]\tvalidation_0-logloss:0.71068\n",
      "[58]\tvalidation_0-logloss:0.71212\n",
      "[60]\tvalidation_0-logloss:0.71318\n",
      "[62]\tvalidation_0-logloss:0.71494\n",
      "[64]\tvalidation_0-logloss:0.71518\n",
      "[66]\tvalidation_0-logloss:0.71978\n",
      "[68]\tvalidation_0-logloss:0.71955\n",
      "[70]\tvalidation_0-logloss:0.71992\n",
      "[72]\tvalidation_0-logloss:0.72092\n",
      "[74]\tvalidation_0-logloss:0.72206\n",
      "[76]\tvalidation_0-logloss:0.72255\n",
      "[78]\tvalidation_0-logloss:0.72304\n",
      "[80]\tvalidation_0-logloss:0.72312\n",
      "[82]\tvalidation_0-logloss:0.72338\n",
      "[84]\tvalidation_0-logloss:0.72351\n",
      "[86]\tvalidation_0-logloss:0.72393\n",
      "[88]\tvalidation_0-logloss:0.72609\n",
      "[90]\tvalidation_0-logloss:0.72551\n",
      "[92]\tvalidation_0-logloss:0.72584\n",
      "[94]\tvalidation_0-logloss:0.72586\n",
      "[96]\tvalidation_0-logloss:0.72539\n",
      "[98]\tvalidation_0-logloss:0.72733\n",
      "[100]\tvalidation_0-logloss:0.72717\n",
      "[102]\tvalidation_0-logloss:0.72909\n",
      "[104]\tvalidation_0-logloss:0.72937\n",
      "[106]\tvalidation_0-logloss:0.73027\n",
      "[108]\tvalidation_0-logloss:0.72976\n",
      "[110]\tvalidation_0-logloss:0.73115\n",
      "[112]\tvalidation_0-logloss:0.73220\n",
      "[114]\tvalidation_0-logloss:0.73506\n",
      "[116]\tvalidation_0-logloss:0.73539\n",
      "[118]\tvalidation_0-logloss:0.73585\n",
      "[120]\tvalidation_0-logloss:0.73528\n",
      "[122]\tvalidation_0-logloss:0.73616\n",
      "[124]\tvalidation_0-logloss:0.73879\n",
      "[126]\tvalidation_0-logloss:0.74158\n",
      "[128]\tvalidation_0-logloss:0.74247\n",
      "[130]\tvalidation_0-logloss:0.74252\n",
      "[132]\tvalidation_0-logloss:0.74230\n",
      "[134]\tvalidation_0-logloss:0.74273\n",
      "[136]\tvalidation_0-logloss:0.74178\n",
      "[138]\tvalidation_0-logloss:0.74390\n",
      "[140]\tvalidation_0-logloss:0.74393\n",
      "[142]\tvalidation_0-logloss:0.74356\n",
      "[144]\tvalidation_0-logloss:0.74394\n",
      "[146]\tvalidation_0-logloss:0.74460\n",
      "[148]\tvalidation_0-logloss:0.74489\n",
      "[150]\tvalidation_0-logloss:0.74511\n",
      "[152]\tvalidation_0-logloss:0.74507\n",
      "[154]\tvalidation_0-logloss:0.74618\n",
      "[156]\tvalidation_0-logloss:0.74768\n",
      "[158]\tvalidation_0-logloss:0.74839\n",
      "[160]\tvalidation_0-logloss:0.74874\n",
      "[162]\tvalidation_0-logloss:0.74973\n",
      "[164]\tvalidation_0-logloss:0.74953\n",
      "[166]\tvalidation_0-logloss:0.74976\n",
      "[168]\tvalidation_0-logloss:0.75011\n",
      "[170]\tvalidation_0-logloss:0.75232\n",
      "[172]\tvalidation_0-logloss:0.75243\n",
      "[174]\tvalidation_0-logloss:0.75251\n",
      "[176]\tvalidation_0-logloss:0.75466\n",
      "[178]\tvalidation_0-logloss:0.75433\n",
      "[180]\tvalidation_0-logloss:0.75501\n",
      "[182]\tvalidation_0-logloss:0.75567\n",
      "[184]\tvalidation_0-logloss:0.75618\n",
      "[186]\tvalidation_0-logloss:0.75654\n",
      "[188]\tvalidation_0-logloss:0.75665\n",
      "[190]\tvalidation_0-logloss:0.75680\n",
      "[192]\tvalidation_0-logloss:0.75714\n",
      "[194]\tvalidation_0-logloss:0.75725\n",
      "[196]\tvalidation_0-logloss:0.76354\n",
      "[198]\tvalidation_0-logloss:0.76416\n",
      "[200]\tvalidation_0-logloss:0.76403\n",
      "[202]\tvalidation_0-logloss:0.76408\n",
      "[204]\tvalidation_0-logloss:0.76666\n",
      "[206]\tvalidation_0-logloss:0.76514\n",
      "[208]\tvalidation_0-logloss:0.76532\n",
      "[210]\tvalidation_0-logloss:0.76553\n",
      "[212]\tvalidation_0-logloss:0.76547\n",
      "[214]\tvalidation_0-logloss:0.76603\n",
      "[216]\tvalidation_0-logloss:0.76654\n",
      "[218]\tvalidation_0-logloss:0.76704\n",
      "[220]\tvalidation_0-logloss:0.76778\n",
      "[222]\tvalidation_0-logloss:0.76770\n",
      "[224]\tvalidation_0-logloss:0.76796\n",
      "[226]\tvalidation_0-logloss:0.76915\n",
      "[228]\tvalidation_0-logloss:0.76904\n",
      "[230]\tvalidation_0-logloss:0.76907\n",
      "[232]\tvalidation_0-logloss:0.77028\n",
      "[234]\tvalidation_0-logloss:0.77064\n",
      "[236]\tvalidation_0-logloss:0.76998\n",
      "[238]\tvalidation_0-logloss:0.77003\n",
      "[240]\tvalidation_0-logloss:0.77115\n",
      "[242]\tvalidation_0-logloss:0.77128\n",
      "[244]\tvalidation_0-logloss:0.77045\n",
      "[246]\tvalidation_0-logloss:0.77114\n",
      "[248]\tvalidation_0-logloss:0.77129\n",
      "[250]\tvalidation_0-logloss:0.77215\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:24:30,672] Trial 77 finished with value: 0.695721855371461 and parameters: {'eta': 0.2778184231041678, 'gamma': 0.48218174807853686, 'max_depth': 5, 'min_child_weight': 0, 'lambda': 0.15107110564939752, 'alpha': 0.3893777312325546}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:24:35] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69603\n",
      "[2]\tvalidation_0-logloss:0.69592\n",
      "[4]\tvalidation_0-logloss:0.69789\n",
      "[6]\tvalidation_0-logloss:0.69807\n",
      "[8]\tvalidation_0-logloss:0.70014\n",
      "[10]\tvalidation_0-logloss:0.69936\n",
      "[12]\tvalidation_0-logloss:0.69943\n",
      "[14]\tvalidation_0-logloss:0.69904\n",
      "[16]\tvalidation_0-logloss:0.69992\n",
      "[18]\tvalidation_0-logloss:0.70089\n",
      "[20]\tvalidation_0-logloss:0.70098\n",
      "[22]\tvalidation_0-logloss:0.70074\n",
      "[24]\tvalidation_0-logloss:0.70102\n",
      "[26]\tvalidation_0-logloss:0.70163\n",
      "[28]\tvalidation_0-logloss:0.70215\n",
      "[30]\tvalidation_0-logloss:0.70288\n",
      "[32]\tvalidation_0-logloss:0.70346\n",
      "[34]\tvalidation_0-logloss:0.70424\n",
      "[36]\tvalidation_0-logloss:0.70422\n",
      "[38]\tvalidation_0-logloss:0.70405\n",
      "[40]\tvalidation_0-logloss:0.70445\n",
      "[42]\tvalidation_0-logloss:0.70679\n",
      "[44]\tvalidation_0-logloss:0.70883\n",
      "[46]\tvalidation_0-logloss:0.70895\n",
      "[48]\tvalidation_0-logloss:0.70938\n",
      "[50]\tvalidation_0-logloss:0.71013\n",
      "[52]\tvalidation_0-logloss:0.71123\n",
      "[54]\tvalidation_0-logloss:0.71250\n",
      "[56]\tvalidation_0-logloss:0.71403\n",
      "[58]\tvalidation_0-logloss:0.71388\n",
      "[60]\tvalidation_0-logloss:0.71417\n",
      "[62]\tvalidation_0-logloss:0.71502\n",
      "[64]\tvalidation_0-logloss:0.71595\n",
      "[66]\tvalidation_0-logloss:0.71705\n",
      "[68]\tvalidation_0-logloss:0.71701\n",
      "[70]\tvalidation_0-logloss:0.71749\n",
      "[72]\tvalidation_0-logloss:0.71985\n",
      "[74]\tvalidation_0-logloss:0.71930\n",
      "[76]\tvalidation_0-logloss:0.71966\n",
      "[78]\tvalidation_0-logloss:0.71993\n",
      "[80]\tvalidation_0-logloss:0.71982\n",
      "[82]\tvalidation_0-logloss:0.72024\n",
      "[84]\tvalidation_0-logloss:0.72011\n",
      "[86]\tvalidation_0-logloss:0.72098\n",
      "[88]\tvalidation_0-logloss:0.72109\n",
      "[90]\tvalidation_0-logloss:0.72099\n",
      "[92]\tvalidation_0-logloss:0.72103\n",
      "[94]\tvalidation_0-logloss:0.72257\n",
      "[96]\tvalidation_0-logloss:0.72260\n",
      "[98]\tvalidation_0-logloss:0.72282\n",
      "[100]\tvalidation_0-logloss:0.72280\n",
      "[102]\tvalidation_0-logloss:0.72329\n",
      "[104]\tvalidation_0-logloss:0.72360\n",
      "[106]\tvalidation_0-logloss:0.72364\n",
      "[108]\tvalidation_0-logloss:0.72425\n",
      "[110]\tvalidation_0-logloss:0.72486\n",
      "[112]\tvalidation_0-logloss:0.72473\n",
      "[114]\tvalidation_0-logloss:0.72577\n",
      "[116]\tvalidation_0-logloss:0.72605\n",
      "[118]\tvalidation_0-logloss:0.72759\n",
      "[120]\tvalidation_0-logloss:0.72816\n",
      "[122]\tvalidation_0-logloss:0.72885\n",
      "[124]\tvalidation_0-logloss:0.72849\n",
      "[126]\tvalidation_0-logloss:0.72869\n",
      "[128]\tvalidation_0-logloss:0.72923\n",
      "[130]\tvalidation_0-logloss:0.72969\n",
      "[132]\tvalidation_0-logloss:0.73014\n",
      "[134]\tvalidation_0-logloss:0.73015\n",
      "[136]\tvalidation_0-logloss:0.73003\n",
      "[138]\tvalidation_0-logloss:0.73183\n",
      "[140]\tvalidation_0-logloss:0.73220\n",
      "[142]\tvalidation_0-logloss:0.73291\n",
      "[144]\tvalidation_0-logloss:0.73279\n",
      "[146]\tvalidation_0-logloss:0.73319\n",
      "[148]\tvalidation_0-logloss:0.73364\n",
      "[150]\tvalidation_0-logloss:0.73480\n",
      "[152]\tvalidation_0-logloss:0.73523\n",
      "[154]\tvalidation_0-logloss:0.73660\n",
      "[156]\tvalidation_0-logloss:0.73674\n",
      "[158]\tvalidation_0-logloss:0.73988\n",
      "[160]\tvalidation_0-logloss:0.74037\n",
      "[162]\tvalidation_0-logloss:0.74110\n",
      "[164]\tvalidation_0-logloss:0.74138\n",
      "[166]\tvalidation_0-logloss:0.74237\n",
      "[168]\tvalidation_0-logloss:0.74265\n",
      "[170]\tvalidation_0-logloss:0.74385\n",
      "[172]\tvalidation_0-logloss:0.74396\n",
      "[174]\tvalidation_0-logloss:0.74265\n",
      "[176]\tvalidation_0-logloss:0.74267\n",
      "[178]\tvalidation_0-logloss:0.74306\n",
      "[180]\tvalidation_0-logloss:0.74303\n",
      "[182]\tvalidation_0-logloss:0.74418\n",
      "[184]\tvalidation_0-logloss:0.74458\n",
      "[186]\tvalidation_0-logloss:0.74472\n",
      "[188]\tvalidation_0-logloss:0.74472\n",
      "[190]\tvalidation_0-logloss:0.74659\n",
      "[192]\tvalidation_0-logloss:0.74705\n",
      "[194]\tvalidation_0-logloss:0.74764\n",
      "[196]\tvalidation_0-logloss:0.74789\n",
      "[198]\tvalidation_0-logloss:0.74954\n",
      "[200]\tvalidation_0-logloss:0.74952\n",
      "[202]\tvalidation_0-logloss:0.74972\n",
      "[204]\tvalidation_0-logloss:0.75104\n",
      "[206]\tvalidation_0-logloss:0.75142\n",
      "[208]\tvalidation_0-logloss:0.75158\n",
      "[210]\tvalidation_0-logloss:0.75170\n",
      "[212]\tvalidation_0-logloss:0.75202\n",
      "[214]\tvalidation_0-logloss:0.75247\n",
      "[216]\tvalidation_0-logloss:0.75274\n",
      "[218]\tvalidation_0-logloss:0.75303\n",
      "[220]\tvalidation_0-logloss:0.75354\n",
      "[222]\tvalidation_0-logloss:0.75385\n",
      "[224]\tvalidation_0-logloss:0.75408\n",
      "[226]\tvalidation_0-logloss:0.75450\n",
      "[228]\tvalidation_0-logloss:0.75525\n",
      "[230]\tvalidation_0-logloss:0.75572\n",
      "[232]\tvalidation_0-logloss:0.75676\n",
      "[234]\tvalidation_0-logloss:0.75707\n",
      "[236]\tvalidation_0-logloss:0.75829\n",
      "[238]\tvalidation_0-logloss:0.75874\n",
      "[240]\tvalidation_0-logloss:0.75818\n",
      "[242]\tvalidation_0-logloss:0.75872\n",
      "[244]\tvalidation_0-logloss:0.76071\n",
      "[246]\tvalidation_0-logloss:0.76166\n",
      "[248]\tvalidation_0-logloss:0.76167\n",
      "[250]\tvalidation_0-logloss:0.76200\n",
      "[251]\tvalidation_0-logloss:0.76275\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:25:52,510] Trial 78 finished with value: 0.695499963014585 and parameters: {'eta': 0.18022705197488254, 'gamma': 0.279299420937479, 'max_depth': 6, 'min_child_weight': 1, 'lambda': 0.5329070934845971, 'alpha': 0.8040033869275195}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:25:57] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69540\n",
      "[2]\tvalidation_0-logloss:0.69591\n",
      "[4]\tvalidation_0-logloss:0.69544\n",
      "[6]\tvalidation_0-logloss:0.69530\n",
      "[8]\tvalidation_0-logloss:0.69520\n",
      "[10]\tvalidation_0-logloss:0.69503\n",
      "[12]\tvalidation_0-logloss:0.69515\n",
      "[14]\tvalidation_0-logloss:0.69523\n",
      "[16]\tvalidation_0-logloss:0.69501\n",
      "[18]\tvalidation_0-logloss:0.69476\n",
      "[20]\tvalidation_0-logloss:0.69484\n",
      "[22]\tvalidation_0-logloss:0.69456\n",
      "[24]\tvalidation_0-logloss:0.69440\n",
      "[26]\tvalidation_0-logloss:0.69449\n",
      "[28]\tvalidation_0-logloss:0.69434\n",
      "[30]\tvalidation_0-logloss:0.69459\n",
      "[32]\tvalidation_0-logloss:0.69450\n",
      "[34]\tvalidation_0-logloss:0.69484\n",
      "[36]\tvalidation_0-logloss:0.69475\n",
      "[38]\tvalidation_0-logloss:0.69478\n",
      "[40]\tvalidation_0-logloss:0.69476\n",
      "[42]\tvalidation_0-logloss:0.69424\n",
      "[44]\tvalidation_0-logloss:0.69446\n",
      "[46]\tvalidation_0-logloss:0.69451\n",
      "[48]\tvalidation_0-logloss:0.69493\n",
      "[50]\tvalidation_0-logloss:0.69511\n",
      "[52]\tvalidation_0-logloss:0.69515\n",
      "[54]\tvalidation_0-logloss:0.69526\n",
      "[56]\tvalidation_0-logloss:0.69504\n",
      "[58]\tvalidation_0-logloss:0.69509\n",
      "[60]\tvalidation_0-logloss:0.69484\n",
      "[62]\tvalidation_0-logloss:0.69491\n",
      "[64]\tvalidation_0-logloss:0.69497\n",
      "[66]\tvalidation_0-logloss:0.69497\n",
      "[68]\tvalidation_0-logloss:0.69476\n",
      "[70]\tvalidation_0-logloss:0.69478\n",
      "[72]\tvalidation_0-logloss:0.69506\n",
      "[74]\tvalidation_0-logloss:0.69519\n",
      "[76]\tvalidation_0-logloss:0.69518\n",
      "[78]\tvalidation_0-logloss:0.69508\n",
      "[80]\tvalidation_0-logloss:0.69521\n",
      "[82]\tvalidation_0-logloss:0.69510\n",
      "[84]\tvalidation_0-logloss:0.69540\n",
      "[86]\tvalidation_0-logloss:0.69525\n",
      "[88]\tvalidation_0-logloss:0.69531\n",
      "[90]\tvalidation_0-logloss:0.69525\n",
      "[92]\tvalidation_0-logloss:0.69530\n",
      "[94]\tvalidation_0-logloss:0.69565\n",
      "[96]\tvalidation_0-logloss:0.69574\n",
      "[98]\tvalidation_0-logloss:0.69574\n",
      "[100]\tvalidation_0-logloss:0.69593\n",
      "[102]\tvalidation_0-logloss:0.69603\n",
      "[104]\tvalidation_0-logloss:0.69633\n",
      "[106]\tvalidation_0-logloss:0.69662\n",
      "[108]\tvalidation_0-logloss:0.69666\n",
      "[110]\tvalidation_0-logloss:0.69674\n",
      "[112]\tvalidation_0-logloss:0.69663\n",
      "[114]\tvalidation_0-logloss:0.69687\n",
      "[116]\tvalidation_0-logloss:0.69684\n",
      "[118]\tvalidation_0-logloss:0.69706\n",
      "[120]\tvalidation_0-logloss:0.69691\n",
      "[122]\tvalidation_0-logloss:0.69692\n",
      "[124]\tvalidation_0-logloss:0.69691\n",
      "[126]\tvalidation_0-logloss:0.69659\n",
      "[128]\tvalidation_0-logloss:0.69671\n",
      "[130]\tvalidation_0-logloss:0.69669\n",
      "[132]\tvalidation_0-logloss:0.69692\n",
      "[134]\tvalidation_0-logloss:0.69680\n",
      "[136]\tvalidation_0-logloss:0.69693\n",
      "[138]\tvalidation_0-logloss:0.69748\n",
      "[140]\tvalidation_0-logloss:0.69736\n",
      "[142]\tvalidation_0-logloss:0.69735\n",
      "[144]\tvalidation_0-logloss:0.69796\n",
      "[146]\tvalidation_0-logloss:0.69807\n",
      "[148]\tvalidation_0-logloss:0.69829\n",
      "[150]\tvalidation_0-logloss:0.69858\n",
      "[152]\tvalidation_0-logloss:0.69875\n",
      "[154]\tvalidation_0-logloss:0.69885\n",
      "[156]\tvalidation_0-logloss:0.69910\n",
      "[158]\tvalidation_0-logloss:0.69934\n",
      "[160]\tvalidation_0-logloss:0.69968\n",
      "[162]\tvalidation_0-logloss:0.69982\n",
      "[164]\tvalidation_0-logloss:0.69992\n",
      "[166]\tvalidation_0-logloss:0.69984\n",
      "[168]\tvalidation_0-logloss:0.69978\n",
      "[170]\tvalidation_0-logloss:0.69972\n",
      "[172]\tvalidation_0-logloss:0.69973\n",
      "[174]\tvalidation_0-logloss:0.70013\n",
      "[176]\tvalidation_0-logloss:0.70028\n",
      "[178]\tvalidation_0-logloss:0.70055\n",
      "[180]\tvalidation_0-logloss:0.70057\n",
      "[182]\tvalidation_0-logloss:0.70045\n",
      "[184]\tvalidation_0-logloss:0.70077\n",
      "[186]\tvalidation_0-logloss:0.70112\n",
      "[188]\tvalidation_0-logloss:0.70125\n",
      "[190]\tvalidation_0-logloss:0.70129\n",
      "[192]\tvalidation_0-logloss:0.70134\n",
      "[194]\tvalidation_0-logloss:0.70134\n",
      "[196]\tvalidation_0-logloss:0.70152\n",
      "[198]\tvalidation_0-logloss:0.70165\n",
      "[200]\tvalidation_0-logloss:0.70169\n",
      "[202]\tvalidation_0-logloss:0.70241\n",
      "[204]\tvalidation_0-logloss:0.70279\n",
      "[206]\tvalidation_0-logloss:0.70318\n",
      "[208]\tvalidation_0-logloss:0.70328\n",
      "[210]\tvalidation_0-logloss:0.70346\n",
      "[212]\tvalidation_0-logloss:0.70344\n",
      "[214]\tvalidation_0-logloss:0.70354\n",
      "[216]\tvalidation_0-logloss:0.70353\n",
      "[218]\tvalidation_0-logloss:0.70379\n",
      "[220]\tvalidation_0-logloss:0.70382\n",
      "[222]\tvalidation_0-logloss:0.70377\n",
      "[224]\tvalidation_0-logloss:0.70367\n",
      "[226]\tvalidation_0-logloss:0.70361\n",
      "[228]\tvalidation_0-logloss:0.70396\n",
      "[230]\tvalidation_0-logloss:0.70423\n",
      "[232]\tvalidation_0-logloss:0.70431\n",
      "[234]\tvalidation_0-logloss:0.70443\n",
      "[236]\tvalidation_0-logloss:0.70445\n",
      "[238]\tvalidation_0-logloss:0.70472\n",
      "[240]\tvalidation_0-logloss:0.70466\n",
      "[242]\tvalidation_0-logloss:0.70466\n",
      "[244]\tvalidation_0-logloss:0.70461\n",
      "[246]\tvalidation_0-logloss:0.70454\n",
      "[248]\tvalidation_0-logloss:0.70474\n",
      "[250]\tvalidation_0-logloss:0.70471\n",
      "[252]\tvalidation_0-logloss:0.70465\n",
      "[254]\tvalidation_0-logloss:0.70470\n",
      "[256]\tvalidation_0-logloss:0.70479\n",
      "[258]\tvalidation_0-logloss:0.70567\n",
      "[260]\tvalidation_0-logloss:0.70571\n",
      "[262]\tvalidation_0-logloss:0.70585\n",
      "[264]\tvalidation_0-logloss:0.70594\n",
      "[266]\tvalidation_0-logloss:0.70606\n",
      "[268]\tvalidation_0-logloss:0.70618\n",
      "[270]\tvalidation_0-logloss:0.70625\n",
      "[272]\tvalidation_0-logloss:0.70661\n",
      "[274]\tvalidation_0-logloss:0.70679\n",
      "[276]\tvalidation_0-logloss:0.70725\n",
      "[278]\tvalidation_0-logloss:0.70734\n",
      "[280]\tvalidation_0-logloss:0.70732\n",
      "[282]\tvalidation_0-logloss:0.70738\n",
      "[284]\tvalidation_0-logloss:0.70750\n",
      "[286]\tvalidation_0-logloss:0.70778\n",
      "[288]\tvalidation_0-logloss:0.70794\n",
      "[290]\tvalidation_0-logloss:0.70793\n",
      "[292]\tvalidation_0-logloss:0.70775\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:27:21,782] Trial 79 finished with value: 0.6942440273723156 and parameters: {'eta': 0.06788397589733468, 'gamma': 0.5769621901105889, 'max_depth': 5, 'min_child_weight': 6, 'lambda': 0.22589622550010027, 'alpha': 0.5643479669723664}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:27:26] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69530\n",
      "[2]\tvalidation_0-logloss:0.69578\n",
      "[4]\tvalidation_0-logloss:0.69562\n",
      "[6]\tvalidation_0-logloss:0.69541\n",
      "[8]\tvalidation_0-logloss:0.69527\n",
      "[10]\tvalidation_0-logloss:0.69512\n",
      "[12]\tvalidation_0-logloss:0.69498\n",
      "[14]\tvalidation_0-logloss:0.69502\n",
      "[16]\tvalidation_0-logloss:0.69489\n",
      "[18]\tvalidation_0-logloss:0.69499\n",
      "[20]\tvalidation_0-logloss:0.69511\n",
      "[22]\tvalidation_0-logloss:0.69507\n",
      "[24]\tvalidation_0-logloss:0.69527\n",
      "[26]\tvalidation_0-logloss:0.69511\n",
      "[28]\tvalidation_0-logloss:0.69514\n",
      "[30]\tvalidation_0-logloss:0.69530\n",
      "[32]\tvalidation_0-logloss:0.69531\n",
      "[34]\tvalidation_0-logloss:0.69553\n",
      "[36]\tvalidation_0-logloss:0.69516\n",
      "[38]\tvalidation_0-logloss:0.69516\n",
      "[40]\tvalidation_0-logloss:0.69520\n",
      "[42]\tvalidation_0-logloss:0.69570\n",
      "[44]\tvalidation_0-logloss:0.69552\n",
      "[46]\tvalidation_0-logloss:0.69563\n",
      "[48]\tvalidation_0-logloss:0.69568\n",
      "[50]\tvalidation_0-logloss:0.69572\n",
      "[52]\tvalidation_0-logloss:0.69575\n",
      "[54]\tvalidation_0-logloss:0.69595\n",
      "[56]\tvalidation_0-logloss:0.69585\n",
      "[58]\tvalidation_0-logloss:0.69585\n",
      "[60]\tvalidation_0-logloss:0.69564\n",
      "[62]\tvalidation_0-logloss:0.69567\n",
      "[64]\tvalidation_0-logloss:0.69564\n",
      "[66]\tvalidation_0-logloss:0.69533\n",
      "[68]\tvalidation_0-logloss:0.69534\n",
      "[70]\tvalidation_0-logloss:0.69467\n",
      "[72]\tvalidation_0-logloss:0.69456\n",
      "[74]\tvalidation_0-logloss:0.69457\n",
      "[76]\tvalidation_0-logloss:0.69433\n",
      "[78]\tvalidation_0-logloss:0.69426\n",
      "[80]\tvalidation_0-logloss:0.69403\n",
      "[82]\tvalidation_0-logloss:0.69392\n",
      "[84]\tvalidation_0-logloss:0.69405\n",
      "[86]\tvalidation_0-logloss:0.69411\n",
      "[88]\tvalidation_0-logloss:0.69422\n",
      "[90]\tvalidation_0-logloss:0.69418\n",
      "[92]\tvalidation_0-logloss:0.69423\n",
      "[94]\tvalidation_0-logloss:0.69428\n",
      "[96]\tvalidation_0-logloss:0.69440\n",
      "[98]\tvalidation_0-logloss:0.69436\n",
      "[100]\tvalidation_0-logloss:0.69432\n",
      "[102]\tvalidation_0-logloss:0.69430\n",
      "[104]\tvalidation_0-logloss:0.69436\n",
      "[106]\tvalidation_0-logloss:0.69466\n",
      "[108]\tvalidation_0-logloss:0.69471\n",
      "[110]\tvalidation_0-logloss:0.69493\n",
      "[112]\tvalidation_0-logloss:0.69495\n",
      "[114]\tvalidation_0-logloss:0.69498\n",
      "[116]\tvalidation_0-logloss:0.69497\n",
      "[118]\tvalidation_0-logloss:0.69516\n",
      "[120]\tvalidation_0-logloss:0.69528\n",
      "[122]\tvalidation_0-logloss:0.69526\n",
      "[124]\tvalidation_0-logloss:0.69529\n",
      "[126]\tvalidation_0-logloss:0.69533\n",
      "[128]\tvalidation_0-logloss:0.69530\n",
      "[130]\tvalidation_0-logloss:0.69531\n",
      "[132]\tvalidation_0-logloss:0.69538\n",
      "[134]\tvalidation_0-logloss:0.69544\n",
      "[136]\tvalidation_0-logloss:0.69548\n",
      "[138]\tvalidation_0-logloss:0.69540\n",
      "[140]\tvalidation_0-logloss:0.69535\n",
      "[142]\tvalidation_0-logloss:0.69539\n",
      "[144]\tvalidation_0-logloss:0.69536\n",
      "[146]\tvalidation_0-logloss:0.69542\n",
      "[148]\tvalidation_0-logloss:0.69547\n",
      "[150]\tvalidation_0-logloss:0.69579\n",
      "[152]\tvalidation_0-logloss:0.69581\n",
      "[154]\tvalidation_0-logloss:0.69560\n",
      "[156]\tvalidation_0-logloss:0.69560\n",
      "[158]\tvalidation_0-logloss:0.69558\n",
      "[160]\tvalidation_0-logloss:0.69554\n",
      "[162]\tvalidation_0-logloss:0.69589\n",
      "[164]\tvalidation_0-logloss:0.69596\n",
      "[166]\tvalidation_0-logloss:0.69602\n",
      "[168]\tvalidation_0-logloss:0.69603\n",
      "[170]\tvalidation_0-logloss:0.69597\n",
      "[172]\tvalidation_0-logloss:0.69612\n",
      "[174]\tvalidation_0-logloss:0.69622\n",
      "[176]\tvalidation_0-logloss:0.69628\n",
      "[178]\tvalidation_0-logloss:0.69635\n",
      "[180]\tvalidation_0-logloss:0.69650\n",
      "[182]\tvalidation_0-logloss:0.69644\n",
      "[184]\tvalidation_0-logloss:0.69657\n",
      "[186]\tvalidation_0-logloss:0.69674\n",
      "[188]\tvalidation_0-logloss:0.69694\n",
      "[190]\tvalidation_0-logloss:0.69712\n",
      "[192]\tvalidation_0-logloss:0.69711\n",
      "[194]\tvalidation_0-logloss:0.69712\n",
      "[196]\tvalidation_0-logloss:0.69728\n",
      "[198]\tvalidation_0-logloss:0.69736\n",
      "[200]\tvalidation_0-logloss:0.69732\n",
      "[202]\tvalidation_0-logloss:0.69733\n",
      "[204]\tvalidation_0-logloss:0.69741\n",
      "[206]\tvalidation_0-logloss:0.69757\n",
      "[208]\tvalidation_0-logloss:0.69755\n",
      "[210]\tvalidation_0-logloss:0.69768\n",
      "[212]\tvalidation_0-logloss:0.69776\n",
      "[214]\tvalidation_0-logloss:0.69772\n",
      "[216]\tvalidation_0-logloss:0.69781\n",
      "[218]\tvalidation_0-logloss:0.69782\n",
      "[220]\tvalidation_0-logloss:0.69799\n",
      "[222]\tvalidation_0-logloss:0.69802\n",
      "[224]\tvalidation_0-logloss:0.69805\n",
      "[226]\tvalidation_0-logloss:0.69801\n",
      "[228]\tvalidation_0-logloss:0.69821\n",
      "[230]\tvalidation_0-logloss:0.69815\n",
      "[232]\tvalidation_0-logloss:0.69824\n",
      "[234]\tvalidation_0-logloss:0.69824\n",
      "[236]\tvalidation_0-logloss:0.69822\n",
      "[238]\tvalidation_0-logloss:0.69854\n",
      "[240]\tvalidation_0-logloss:0.69866\n",
      "[242]\tvalidation_0-logloss:0.69870\n",
      "[244]\tvalidation_0-logloss:0.69874\n",
      "[246]\tvalidation_0-logloss:0.69884\n",
      "[248]\tvalidation_0-logloss:0.69898\n",
      "[250]\tvalidation_0-logloss:0.69916\n",
      "[252]\tvalidation_0-logloss:0.69924\n",
      "[254]\tvalidation_0-logloss:0.69926\n",
      "[256]\tvalidation_0-logloss:0.69936\n",
      "[258]\tvalidation_0-logloss:0.69937\n",
      "[260]\tvalidation_0-logloss:0.69933\n",
      "[262]\tvalidation_0-logloss:0.69929\n",
      "[264]\tvalidation_0-logloss:0.69938\n",
      "[266]\tvalidation_0-logloss:0.69947\n",
      "[268]\tvalidation_0-logloss:0.69943\n",
      "[270]\tvalidation_0-logloss:0.69953\n",
      "[272]\tvalidation_0-logloss:0.69940\n",
      "[274]\tvalidation_0-logloss:0.69933\n",
      "[276]\tvalidation_0-logloss:0.69938\n",
      "[278]\tvalidation_0-logloss:0.69944\n",
      "[280]\tvalidation_0-logloss:0.69969\n",
      "[282]\tvalidation_0-logloss:0.69983\n",
      "[284]\tvalidation_0-logloss:0.70014\n",
      "[286]\tvalidation_0-logloss:0.70008\n",
      "[288]\tvalidation_0-logloss:0.70013\n",
      "[290]\tvalidation_0-logloss:0.70041\n",
      "[292]\tvalidation_0-logloss:0.70063\n",
      "[294]\tvalidation_0-logloss:0.70067\n",
      "[296]\tvalidation_0-logloss:0.70065\n",
      "[298]\tvalidation_0-logloss:0.70044\n",
      "[300]\tvalidation_0-logloss:0.70049\n",
      "[302]\tvalidation_0-logloss:0.70052\n",
      "[304]\tvalidation_0-logloss:0.70050\n",
      "[306]\tvalidation_0-logloss:0.70057\n",
      "[308]\tvalidation_0-logloss:0.70057\n",
      "[310]\tvalidation_0-logloss:0.70058\n",
      "[312]\tvalidation_0-logloss:0.70084\n",
      "[314]\tvalidation_0-logloss:0.70084\n",
      "[316]\tvalidation_0-logloss:0.70089\n",
      "[318]\tvalidation_0-logloss:0.70076\n",
      "[320]\tvalidation_0-logloss:0.70082\n",
      "[322]\tvalidation_0-logloss:0.70061\n",
      "[324]\tvalidation_0-logloss:0.70079\n",
      "[326]\tvalidation_0-logloss:0.70091\n",
      "[328]\tvalidation_0-logloss:0.70080\n",
      "[330]\tvalidation_0-logloss:0.70085\n",
      "[331]\tvalidation_0-logloss:0.70088\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:28:57,459] Trial 80 finished with value: 0.6939097405054966 and parameters: {'eta': 0.05789795653870416, 'gamma': 0.32978418470664894, 'max_depth': 4, 'min_child_weight': 2, 'lambda': 0.1134146372217513, 'alpha': 0.2764363942709714}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:29:02] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69529\n",
      "[2]\tvalidation_0-logloss:0.69575\n",
      "[4]\tvalidation_0-logloss:0.69559\n",
      "[6]\tvalidation_0-logloss:0.69540\n",
      "[8]\tvalidation_0-logloss:0.69530\n",
      "[10]\tvalidation_0-logloss:0.69514\n",
      "[12]\tvalidation_0-logloss:0.69510\n",
      "[14]\tvalidation_0-logloss:0.69515\n",
      "[16]\tvalidation_0-logloss:0.69503\n",
      "[18]\tvalidation_0-logloss:0.69554\n",
      "[20]\tvalidation_0-logloss:0.69536\n",
      "[22]\tvalidation_0-logloss:0.69527\n",
      "[24]\tvalidation_0-logloss:0.69528\n",
      "[26]\tvalidation_0-logloss:0.69527\n",
      "[28]\tvalidation_0-logloss:0.69507\n",
      "[30]\tvalidation_0-logloss:0.69506\n",
      "[32]\tvalidation_0-logloss:0.69516\n",
      "[34]\tvalidation_0-logloss:0.69519\n",
      "[36]\tvalidation_0-logloss:0.69536\n",
      "[38]\tvalidation_0-logloss:0.69533\n",
      "[40]\tvalidation_0-logloss:0.69524\n",
      "[42]\tvalidation_0-logloss:0.69458\n",
      "[44]\tvalidation_0-logloss:0.69477\n",
      "[46]\tvalidation_0-logloss:0.69475\n",
      "[48]\tvalidation_0-logloss:0.69477\n",
      "[50]\tvalidation_0-logloss:0.69496\n",
      "[52]\tvalidation_0-logloss:0.69506\n",
      "[54]\tvalidation_0-logloss:0.69504\n",
      "[56]\tvalidation_0-logloss:0.69501\n",
      "[58]\tvalidation_0-logloss:0.69523\n",
      "[60]\tvalidation_0-logloss:0.69520\n",
      "[62]\tvalidation_0-logloss:0.69512\n",
      "[64]\tvalidation_0-logloss:0.69502\n",
      "[66]\tvalidation_0-logloss:0.69487\n",
      "[68]\tvalidation_0-logloss:0.69485\n",
      "[70]\tvalidation_0-logloss:0.69491\n",
      "[72]\tvalidation_0-logloss:0.69498\n",
      "[74]\tvalidation_0-logloss:0.69497\n",
      "[76]\tvalidation_0-logloss:0.69507\n",
      "[78]\tvalidation_0-logloss:0.69498\n",
      "[80]\tvalidation_0-logloss:0.69506\n",
      "[82]\tvalidation_0-logloss:0.69510\n",
      "[84]\tvalidation_0-logloss:0.69500\n",
      "[86]\tvalidation_0-logloss:0.69509\n",
      "[88]\tvalidation_0-logloss:0.69447\n",
      "[90]\tvalidation_0-logloss:0.69447\n",
      "[92]\tvalidation_0-logloss:0.69437\n",
      "[94]\tvalidation_0-logloss:0.69433\n",
      "[96]\tvalidation_0-logloss:0.69437\n",
      "[98]\tvalidation_0-logloss:0.69441\n",
      "[100]\tvalidation_0-logloss:0.69409\n",
      "[102]\tvalidation_0-logloss:0.69415\n",
      "[104]\tvalidation_0-logloss:0.69453\n",
      "[106]\tvalidation_0-logloss:0.69491\n",
      "[108]\tvalidation_0-logloss:0.69483\n",
      "[110]\tvalidation_0-logloss:0.69478\n",
      "[112]\tvalidation_0-logloss:0.69478\n",
      "[114]\tvalidation_0-logloss:0.69481\n",
      "[116]\tvalidation_0-logloss:0.69489\n",
      "[118]\tvalidation_0-logloss:0.69495\n",
      "[120]\tvalidation_0-logloss:0.69491\n",
      "[122]\tvalidation_0-logloss:0.69501\n",
      "[124]\tvalidation_0-logloss:0.69506\n",
      "[126]\tvalidation_0-logloss:0.69511\n",
      "[128]\tvalidation_0-logloss:0.69508\n",
      "[130]\tvalidation_0-logloss:0.69524\n",
      "[132]\tvalidation_0-logloss:0.69535\n",
      "[134]\tvalidation_0-logloss:0.69533\n",
      "[136]\tvalidation_0-logloss:0.69535\n",
      "[138]\tvalidation_0-logloss:0.69533\n",
      "[140]\tvalidation_0-logloss:0.69529\n",
      "[142]\tvalidation_0-logloss:0.69545\n",
      "[144]\tvalidation_0-logloss:0.69560\n",
      "[146]\tvalidation_0-logloss:0.69541\n",
      "[148]\tvalidation_0-logloss:0.69551\n",
      "[150]\tvalidation_0-logloss:0.69560\n",
      "[152]\tvalidation_0-logloss:0.69566\n",
      "[154]\tvalidation_0-logloss:0.69576\n",
      "[156]\tvalidation_0-logloss:0.69617\n",
      "[158]\tvalidation_0-logloss:0.69617\n",
      "[160]\tvalidation_0-logloss:0.69630\n",
      "[162]\tvalidation_0-logloss:0.69637\n",
      "[164]\tvalidation_0-logloss:0.69651\n",
      "[166]\tvalidation_0-logloss:0.69658\n",
      "[168]\tvalidation_0-logloss:0.69659\n",
      "[170]\tvalidation_0-logloss:0.69669\n",
      "[172]\tvalidation_0-logloss:0.69664\n",
      "[174]\tvalidation_0-logloss:0.69677\n",
      "[176]\tvalidation_0-logloss:0.69715\n",
      "[178]\tvalidation_0-logloss:0.69722\n",
      "[180]\tvalidation_0-logloss:0.69717\n",
      "[182]\tvalidation_0-logloss:0.69730\n",
      "[184]\tvalidation_0-logloss:0.69708\n",
      "[186]\tvalidation_0-logloss:0.69709\n",
      "[188]\tvalidation_0-logloss:0.69725\n",
      "[190]\tvalidation_0-logloss:0.69720\n",
      "[192]\tvalidation_0-logloss:0.69717\n",
      "[194]\tvalidation_0-logloss:0.69708\n",
      "[196]\tvalidation_0-logloss:0.69706\n",
      "[198]\tvalidation_0-logloss:0.69707\n",
      "[200]\tvalidation_0-logloss:0.69705\n",
      "[202]\tvalidation_0-logloss:0.69707\n",
      "[204]\tvalidation_0-logloss:0.69718\n",
      "[206]\tvalidation_0-logloss:0.69712\n",
      "[208]\tvalidation_0-logloss:0.69716\n",
      "[210]\tvalidation_0-logloss:0.69739\n",
      "[212]\tvalidation_0-logloss:0.69756\n",
      "[214]\tvalidation_0-logloss:0.69756\n",
      "[216]\tvalidation_0-logloss:0.69754\n",
      "[218]\tvalidation_0-logloss:0.69753\n",
      "[220]\tvalidation_0-logloss:0.69774\n",
      "[222]\tvalidation_0-logloss:0.69803\n",
      "[224]\tvalidation_0-logloss:0.69803\n",
      "[226]\tvalidation_0-logloss:0.69815\n",
      "[228]\tvalidation_0-logloss:0.69817\n",
      "[230]\tvalidation_0-logloss:0.69822\n",
      "[232]\tvalidation_0-logloss:0.69867\n",
      "[234]\tvalidation_0-logloss:0.69873\n",
      "[236]\tvalidation_0-logloss:0.69879\n",
      "[238]\tvalidation_0-logloss:0.69878\n",
      "[240]\tvalidation_0-logloss:0.69880\n",
      "[242]\tvalidation_0-logloss:0.69888\n",
      "[244]\tvalidation_0-logloss:0.69890\n",
      "[246]\tvalidation_0-logloss:0.69901\n",
      "[248]\tvalidation_0-logloss:0.69908\n",
      "[250]\tvalidation_0-logloss:0.69899\n",
      "[252]\tvalidation_0-logloss:0.69887\n",
      "[254]\tvalidation_0-logloss:0.69892\n",
      "[256]\tvalidation_0-logloss:0.69902\n",
      "[258]\tvalidation_0-logloss:0.69905\n",
      "[260]\tvalidation_0-logloss:0.69900\n",
      "[262]\tvalidation_0-logloss:0.69904\n",
      "[264]\tvalidation_0-logloss:0.69928\n",
      "[266]\tvalidation_0-logloss:0.69940\n",
      "[268]\tvalidation_0-logloss:0.69951\n",
      "[270]\tvalidation_0-logloss:0.69946\n",
      "[272]\tvalidation_0-logloss:0.69948\n",
      "[274]\tvalidation_0-logloss:0.69953\n",
      "[276]\tvalidation_0-logloss:0.69945\n",
      "[278]\tvalidation_0-logloss:0.69944\n",
      "[280]\tvalidation_0-logloss:0.69935\n",
      "[282]\tvalidation_0-logloss:0.69935\n",
      "[284]\tvalidation_0-logloss:0.69933\n",
      "[286]\tvalidation_0-logloss:0.69947\n",
      "[288]\tvalidation_0-logloss:0.69967\n",
      "[290]\tvalidation_0-logloss:0.69963\n",
      "[292]\tvalidation_0-logloss:0.69981\n",
      "[294]\tvalidation_0-logloss:0.69986\n",
      "[296]\tvalidation_0-logloss:0.69986\n",
      "[298]\tvalidation_0-logloss:0.69976\n",
      "[300]\tvalidation_0-logloss:0.69975\n",
      "[302]\tvalidation_0-logloss:0.69972\n",
      "[304]\tvalidation_0-logloss:0.69955\n",
      "[306]\tvalidation_0-logloss:0.69967\n",
      "[308]\tvalidation_0-logloss:0.69971\n",
      "[310]\tvalidation_0-logloss:0.69969\n",
      "[312]\tvalidation_0-logloss:0.69980\n",
      "[314]\tvalidation_0-logloss:0.69968\n",
      "[316]\tvalidation_0-logloss:0.69981\n",
      "[318]\tvalidation_0-logloss:0.69996\n",
      "[320]\tvalidation_0-logloss:0.70020\n",
      "[322]\tvalidation_0-logloss:0.70042\n",
      "[324]\tvalidation_0-logloss:0.70039\n",
      "[326]\tvalidation_0-logloss:0.70050\n",
      "[328]\tvalidation_0-logloss:0.70030\n",
      "[330]\tvalidation_0-logloss:0.70020\n",
      "[332]\tvalidation_0-logloss:0.70026\n",
      "[334]\tvalidation_0-logloss:0.70024\n",
      "[336]\tvalidation_0-logloss:0.70024\n",
      "[338]\tvalidation_0-logloss:0.70036\n",
      "[340]\tvalidation_0-logloss:0.70049\n",
      "[342]\tvalidation_0-logloss:0.70052\n",
      "[344]\tvalidation_0-logloss:0.70054\n",
      "[346]\tvalidation_0-logloss:0.70056\n",
      "[348]\tvalidation_0-logloss:0.70056\n",
      "[350]\tvalidation_0-logloss:0.70076\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:30:38,439] Trial 81 finished with value: 0.6940846628239368 and parameters: {'eta': 0.055544688083475104, 'gamma': 0.23622838419379, 'max_depth': 4, 'min_child_weight': 2, 'lambda': 0.11252035810843217, 'alpha': 0.2898054471182181}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:30:43] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69530\n",
      "[2]\tvalidation_0-logloss:0.69554\n",
      "[4]\tvalidation_0-logloss:0.69539\n",
      "[6]\tvalidation_0-logloss:0.69535\n",
      "[8]\tvalidation_0-logloss:0.69505\n",
      "[10]\tvalidation_0-logloss:0.69493\n",
      "[12]\tvalidation_0-logloss:0.69504\n",
      "[14]\tvalidation_0-logloss:0.69508\n",
      "[16]\tvalidation_0-logloss:0.69507\n",
      "[18]\tvalidation_0-logloss:0.69517\n",
      "[20]\tvalidation_0-logloss:0.69534\n",
      "[22]\tvalidation_0-logloss:0.69504\n",
      "[24]\tvalidation_0-logloss:0.69498\n",
      "[26]\tvalidation_0-logloss:0.69515\n",
      "[28]\tvalidation_0-logloss:0.69528\n",
      "[30]\tvalidation_0-logloss:0.69537\n",
      "[32]\tvalidation_0-logloss:0.69524\n",
      "[34]\tvalidation_0-logloss:0.69548\n",
      "[36]\tvalidation_0-logloss:0.69539\n",
      "[38]\tvalidation_0-logloss:0.69547\n",
      "[40]\tvalidation_0-logloss:0.69577\n",
      "[42]\tvalidation_0-logloss:0.69565\n",
      "[44]\tvalidation_0-logloss:0.69552\n",
      "[46]\tvalidation_0-logloss:0.69568\n",
      "[48]\tvalidation_0-logloss:0.69564\n",
      "[50]\tvalidation_0-logloss:0.69560\n",
      "[52]\tvalidation_0-logloss:0.69558\n",
      "[54]\tvalidation_0-logloss:0.69557\n",
      "[56]\tvalidation_0-logloss:0.69566\n",
      "[58]\tvalidation_0-logloss:0.69575\n",
      "[60]\tvalidation_0-logloss:0.69560\n",
      "[62]\tvalidation_0-logloss:0.69557\n",
      "[64]\tvalidation_0-logloss:0.69567\n",
      "[66]\tvalidation_0-logloss:0.69566\n",
      "[68]\tvalidation_0-logloss:0.69577\n",
      "[70]\tvalidation_0-logloss:0.69595\n",
      "[72]\tvalidation_0-logloss:0.69576\n",
      "[74]\tvalidation_0-logloss:0.69568\n",
      "[76]\tvalidation_0-logloss:0.69567\n",
      "[78]\tvalidation_0-logloss:0.69557\n",
      "[80]\tvalidation_0-logloss:0.69563\n",
      "[82]\tvalidation_0-logloss:0.69576\n",
      "[84]\tvalidation_0-logloss:0.69596\n",
      "[86]\tvalidation_0-logloss:0.69608\n",
      "[88]\tvalidation_0-logloss:0.69616\n",
      "[90]\tvalidation_0-logloss:0.69619\n",
      "[92]\tvalidation_0-logloss:0.69630\n",
      "[94]\tvalidation_0-logloss:0.69629\n",
      "[96]\tvalidation_0-logloss:0.69632\n",
      "[98]\tvalidation_0-logloss:0.69639\n",
      "[100]\tvalidation_0-logloss:0.69642\n",
      "[102]\tvalidation_0-logloss:0.69657\n",
      "[104]\tvalidation_0-logloss:0.69646\n",
      "[106]\tvalidation_0-logloss:0.69639\n",
      "[108]\tvalidation_0-logloss:0.69633\n",
      "[110]\tvalidation_0-logloss:0.69628\n",
      "[112]\tvalidation_0-logloss:0.69624\n",
      "[114]\tvalidation_0-logloss:0.69634\n",
      "[116]\tvalidation_0-logloss:0.69634\n",
      "[118]\tvalidation_0-logloss:0.69637\n",
      "[120]\tvalidation_0-logloss:0.69636\n",
      "[122]\tvalidation_0-logloss:0.69633\n",
      "[124]\tvalidation_0-logloss:0.69642\n",
      "[126]\tvalidation_0-logloss:0.69640\n",
      "[128]\tvalidation_0-logloss:0.69631\n",
      "[130]\tvalidation_0-logloss:0.69648\n",
      "[132]\tvalidation_0-logloss:0.69629\n",
      "[134]\tvalidation_0-logloss:0.69617\n",
      "[136]\tvalidation_0-logloss:0.69680\n",
      "[138]\tvalidation_0-logloss:0.69676\n",
      "[140]\tvalidation_0-logloss:0.69684\n",
      "[142]\tvalidation_0-logloss:0.69683\n",
      "[144]\tvalidation_0-logloss:0.69697\n",
      "[146]\tvalidation_0-logloss:0.69691\n",
      "[148]\tvalidation_0-logloss:0.69685\n",
      "[150]\tvalidation_0-logloss:0.69684\n",
      "[152]\tvalidation_0-logloss:0.69693\n",
      "[154]\tvalidation_0-logloss:0.69738\n",
      "[156]\tvalidation_0-logloss:0.69736\n",
      "[158]\tvalidation_0-logloss:0.69751\n",
      "[160]\tvalidation_0-logloss:0.69766\n",
      "[162]\tvalidation_0-logloss:0.69770\n",
      "[164]\tvalidation_0-logloss:0.69775\n",
      "[166]\tvalidation_0-logloss:0.69772\n",
      "[168]\tvalidation_0-logloss:0.69778\n",
      "[170]\tvalidation_0-logloss:0.69779\n",
      "[172]\tvalidation_0-logloss:0.69790\n",
      "[174]\tvalidation_0-logloss:0.69798\n",
      "[176]\tvalidation_0-logloss:0.69799\n",
      "[178]\tvalidation_0-logloss:0.69802\n",
      "[180]\tvalidation_0-logloss:0.69803\n",
      "[182]\tvalidation_0-logloss:0.69806\n",
      "[184]\tvalidation_0-logloss:0.69843\n",
      "[186]\tvalidation_0-logloss:0.69844\n",
      "[188]\tvalidation_0-logloss:0.69845\n",
      "[190]\tvalidation_0-logloss:0.69842\n",
      "[192]\tvalidation_0-logloss:0.69850\n",
      "[194]\tvalidation_0-logloss:0.69851\n",
      "[196]\tvalidation_0-logloss:0.69846\n",
      "[198]\tvalidation_0-logloss:0.69907\n",
      "[200]\tvalidation_0-logloss:0.69907\n",
      "[202]\tvalidation_0-logloss:0.69918\n",
      "[204]\tvalidation_0-logloss:0.69928\n",
      "[206]\tvalidation_0-logloss:0.69926\n",
      "[208]\tvalidation_0-logloss:0.69923\n",
      "[210]\tvalidation_0-logloss:0.69888\n",
      "[212]\tvalidation_0-logloss:0.69894\n",
      "[214]\tvalidation_0-logloss:0.69889\n",
      "[216]\tvalidation_0-logloss:0.69902\n",
      "[218]\tvalidation_0-logloss:0.69905\n",
      "[220]\tvalidation_0-logloss:0.69898\n",
      "[222]\tvalidation_0-logloss:0.69906\n",
      "[224]\tvalidation_0-logloss:0.69902\n",
      "[226]\tvalidation_0-logloss:0.69897\n",
      "[228]\tvalidation_0-logloss:0.69893\n",
      "[230]\tvalidation_0-logloss:0.69864\n",
      "[232]\tvalidation_0-logloss:0.69869\n",
      "[234]\tvalidation_0-logloss:0.69882\n",
      "[236]\tvalidation_0-logloss:0.69891\n",
      "[238]\tvalidation_0-logloss:0.69897\n",
      "[240]\tvalidation_0-logloss:0.69900\n",
      "[242]\tvalidation_0-logloss:0.69901\n",
      "[244]\tvalidation_0-logloss:0.69898\n",
      "[246]\tvalidation_0-logloss:0.69910\n",
      "[248]\tvalidation_0-logloss:0.69912\n",
      "[250]\tvalidation_0-logloss:0.69901\n",
      "[252]\tvalidation_0-logloss:0.69903\n",
      "[254]\tvalidation_0-logloss:0.69898\n",
      "[256]\tvalidation_0-logloss:0.69915\n",
      "[258]\tvalidation_0-logloss:0.69909\n",
      "[260]\tvalidation_0-logloss:0.69905\n",
      "[261]\tvalidation_0-logloss:0.69912\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:31:50,989] Trial 82 finished with value: 0.6948771129362372 and parameters: {'eta': 0.05898642346181593, 'gamma': 0.32403219086385215, 'max_depth': 3, 'min_child_weight': 3, 'lambda': 0.07127410697328937, 'alpha': 0.2138765478180208}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:31:55] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69544\n",
      "[2]\tvalidation_0-logloss:0.69553\n",
      "[4]\tvalidation_0-logloss:0.69511\n",
      "[6]\tvalidation_0-logloss:0.69458\n",
      "[8]\tvalidation_0-logloss:0.69466\n",
      "[10]\tvalidation_0-logloss:0.69481\n",
      "[12]\tvalidation_0-logloss:0.69443\n",
      "[14]\tvalidation_0-logloss:0.69426\n",
      "[16]\tvalidation_0-logloss:0.69423\n",
      "[18]\tvalidation_0-logloss:0.69400\n",
      "[20]\tvalidation_0-logloss:0.69398\n",
      "[22]\tvalidation_0-logloss:0.69397\n",
      "[24]\tvalidation_0-logloss:0.69362\n",
      "[26]\tvalidation_0-logloss:0.69359\n",
      "[28]\tvalidation_0-logloss:0.69370\n",
      "[30]\tvalidation_0-logloss:0.69385\n",
      "[32]\tvalidation_0-logloss:0.69389\n",
      "[34]\tvalidation_0-logloss:0.69420\n",
      "[36]\tvalidation_0-logloss:0.69416\n",
      "[38]\tvalidation_0-logloss:0.69330\n",
      "[40]\tvalidation_0-logloss:0.69360\n",
      "[42]\tvalidation_0-logloss:0.69381\n",
      "[44]\tvalidation_0-logloss:0.69370\n",
      "[46]\tvalidation_0-logloss:0.69352\n",
      "[48]\tvalidation_0-logloss:0.69385\n",
      "[50]\tvalidation_0-logloss:0.69390\n",
      "[52]\tvalidation_0-logloss:0.69388\n",
      "[54]\tvalidation_0-logloss:0.69462\n",
      "[56]\tvalidation_0-logloss:0.69435\n",
      "[58]\tvalidation_0-logloss:0.69436\n",
      "[60]\tvalidation_0-logloss:0.69483\n",
      "[62]\tvalidation_0-logloss:0.69536\n",
      "[64]\tvalidation_0-logloss:0.69545\n",
      "[66]\tvalidation_0-logloss:0.69543\n",
      "[68]\tvalidation_0-logloss:0.69514\n",
      "[70]\tvalidation_0-logloss:0.69522\n",
      "[72]\tvalidation_0-logloss:0.69530\n",
      "[74]\tvalidation_0-logloss:0.69547\n",
      "[76]\tvalidation_0-logloss:0.69549\n",
      "[78]\tvalidation_0-logloss:0.69608\n",
      "[80]\tvalidation_0-logloss:0.69619\n",
      "[82]\tvalidation_0-logloss:0.69627\n",
      "[84]\tvalidation_0-logloss:0.69657\n",
      "[86]\tvalidation_0-logloss:0.69668\n",
      "[88]\tvalidation_0-logloss:0.69684\n",
      "[90]\tvalidation_0-logloss:0.69674\n",
      "[92]\tvalidation_0-logloss:0.69671\n",
      "[94]\tvalidation_0-logloss:0.69681\n",
      "[96]\tvalidation_0-logloss:0.69687\n",
      "[98]\tvalidation_0-logloss:0.69711\n",
      "[100]\tvalidation_0-logloss:0.69719\n",
      "[102]\tvalidation_0-logloss:0.69741\n",
      "[104]\tvalidation_0-logloss:0.69750\n",
      "[106]\tvalidation_0-logloss:0.69763\n",
      "[108]\tvalidation_0-logloss:0.69774\n",
      "[110]\tvalidation_0-logloss:0.69854\n",
      "[112]\tvalidation_0-logloss:0.69852\n",
      "[114]\tvalidation_0-logloss:0.69870\n",
      "[116]\tvalidation_0-logloss:0.69880\n",
      "[118]\tvalidation_0-logloss:0.69894\n",
      "[120]\tvalidation_0-logloss:0.69880\n",
      "[122]\tvalidation_0-logloss:0.69893\n",
      "[124]\tvalidation_0-logloss:0.69898\n",
      "[126]\tvalidation_0-logloss:0.69905\n",
      "[128]\tvalidation_0-logloss:0.69943\n",
      "[130]\tvalidation_0-logloss:0.69961\n",
      "[132]\tvalidation_0-logloss:0.69968\n",
      "[134]\tvalidation_0-logloss:0.69976\n",
      "[136]\tvalidation_0-logloss:0.70012\n",
      "[138]\tvalidation_0-logloss:0.70030\n",
      "[140]\tvalidation_0-logloss:0.70027\n",
      "[142]\tvalidation_0-logloss:0.70011\n",
      "[144]\tvalidation_0-logloss:0.70025\n",
      "[146]\tvalidation_0-logloss:0.70092\n",
      "[148]\tvalidation_0-logloss:0.70090\n",
      "[150]\tvalidation_0-logloss:0.70096\n",
      "[152]\tvalidation_0-logloss:0.70114\n",
      "[154]\tvalidation_0-logloss:0.70160\n",
      "[156]\tvalidation_0-logloss:0.70168\n",
      "[158]\tvalidation_0-logloss:0.70164\n",
      "[160]\tvalidation_0-logloss:0.70160\n",
      "[162]\tvalidation_0-logloss:0.70159\n",
      "[164]\tvalidation_0-logloss:0.70172\n",
      "[166]\tvalidation_0-logloss:0.70286\n",
      "[168]\tvalidation_0-logloss:0.70264\n",
      "[170]\tvalidation_0-logloss:0.70266\n",
      "[172]\tvalidation_0-logloss:0.70261\n",
      "[174]\tvalidation_0-logloss:0.70284\n",
      "[176]\tvalidation_0-logloss:0.70335\n",
      "[178]\tvalidation_0-logloss:0.70339\n",
      "[180]\tvalidation_0-logloss:0.70371\n",
      "[182]\tvalidation_0-logloss:0.70376\n",
      "[184]\tvalidation_0-logloss:0.70374\n",
      "[186]\tvalidation_0-logloss:0.70380\n",
      "[188]\tvalidation_0-logloss:0.70441\n",
      "[190]\tvalidation_0-logloss:0.70472\n",
      "[192]\tvalidation_0-logloss:0.70480\n",
      "[194]\tvalidation_0-logloss:0.70506\n",
      "[196]\tvalidation_0-logloss:0.70516\n",
      "[198]\tvalidation_0-logloss:0.70579\n",
      "[200]\tvalidation_0-logloss:0.70566\n",
      "[202]\tvalidation_0-logloss:0.70577\n",
      "[204]\tvalidation_0-logloss:0.70599\n",
      "[206]\tvalidation_0-logloss:0.70633\n",
      "[208]\tvalidation_0-logloss:0.70628\n",
      "[210]\tvalidation_0-logloss:0.70695\n",
      "[212]\tvalidation_0-logloss:0.70748\n",
      "[214]\tvalidation_0-logloss:0.70758\n",
      "[216]\tvalidation_0-logloss:0.70786\n",
      "[218]\tvalidation_0-logloss:0.70798\n",
      "[220]\tvalidation_0-logloss:0.70812\n",
      "[222]\tvalidation_0-logloss:0.70821\n",
      "[224]\tvalidation_0-logloss:0.70833\n",
      "[226]\tvalidation_0-logloss:0.70884\n",
      "[228]\tvalidation_0-logloss:0.70906\n",
      "[230]\tvalidation_0-logloss:0.70888\n",
      "[232]\tvalidation_0-logloss:0.70913\n",
      "[234]\tvalidation_0-logloss:0.70936\n",
      "[236]\tvalidation_0-logloss:0.70909\n",
      "[238]\tvalidation_0-logloss:0.70910\n",
      "[240]\tvalidation_0-logloss:0.70916\n",
      "[242]\tvalidation_0-logloss:0.70899\n",
      "[244]\tvalidation_0-logloss:0.70906\n",
      "[246]\tvalidation_0-logloss:0.70904\n",
      "[248]\tvalidation_0-logloss:0.70900\n",
      "[250]\tvalidation_0-logloss:0.70891\n",
      "[252]\tvalidation_0-logloss:0.70911\n",
      "[254]\tvalidation_0-logloss:0.70905\n",
      "[256]\tvalidation_0-logloss:0.70999\n",
      "[258]\tvalidation_0-logloss:0.71028\n",
      "[260]\tvalidation_0-logloss:0.71017\n",
      "[262]\tvalidation_0-logloss:0.71036\n",
      "[264]\tvalidation_0-logloss:0.71046\n",
      "[266]\tvalidation_0-logloss:0.71052\n",
      "[268]\tvalidation_0-logloss:0.71070\n",
      "[270]\tvalidation_0-logloss:0.71081\n",
      "[272]\tvalidation_0-logloss:0.71097\n",
      "[274]\tvalidation_0-logloss:0.71200\n",
      "[276]\tvalidation_0-logloss:0.71193\n",
      "[278]\tvalidation_0-logloss:0.71192\n",
      "[280]\tvalidation_0-logloss:0.71202\n",
      "[282]\tvalidation_0-logloss:0.71213\n",
      "[284]\tvalidation_0-logloss:0.71232\n",
      "[286]\tvalidation_0-logloss:0.71235\n",
      "[288]\tvalidation_0-logloss:0.71245\n",
      "[289]\tvalidation_0-logloss:0.71247\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:33:22,031] Trial 83 finished with value: 0.693256777111019 and parameters: {'eta': 0.07686061943142045, 'gamma': 0.4383783702719265, 'max_depth': 5, 'min_child_weight': 2, 'lambda': 0.035563021361038394, 'alpha': 0.19262099745699915}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:33:26] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69538\n",
      "[2]\tvalidation_0-logloss:0.69616\n",
      "[4]\tvalidation_0-logloss:0.69564\n",
      "[6]\tvalidation_0-logloss:0.69534\n",
      "[8]\tvalidation_0-logloss:0.69513\n",
      "[10]\tvalidation_0-logloss:0.69552\n",
      "[12]\tvalidation_0-logloss:0.69516\n",
      "[14]\tvalidation_0-logloss:0.69499\n",
      "[16]\tvalidation_0-logloss:0.69512\n",
      "[18]\tvalidation_0-logloss:0.69478\n",
      "[20]\tvalidation_0-logloss:0.69488\n",
      "[22]\tvalidation_0-logloss:0.69496\n",
      "[24]\tvalidation_0-logloss:0.69452\n",
      "[26]\tvalidation_0-logloss:0.69462\n",
      "[28]\tvalidation_0-logloss:0.69440\n",
      "[30]\tvalidation_0-logloss:0.69428\n",
      "[32]\tvalidation_0-logloss:0.69446\n",
      "[34]\tvalidation_0-logloss:0.69439\n",
      "[36]\tvalidation_0-logloss:0.69433\n",
      "[38]\tvalidation_0-logloss:0.69416\n",
      "[40]\tvalidation_0-logloss:0.69420\n",
      "[42]\tvalidation_0-logloss:0.69356\n",
      "[44]\tvalidation_0-logloss:0.69356\n",
      "[46]\tvalidation_0-logloss:0.69356\n",
      "[48]\tvalidation_0-logloss:0.69374\n",
      "[50]\tvalidation_0-logloss:0.69380\n",
      "[52]\tvalidation_0-logloss:0.69405\n",
      "[54]\tvalidation_0-logloss:0.69380\n",
      "[56]\tvalidation_0-logloss:0.69368\n",
      "[58]\tvalidation_0-logloss:0.69368\n",
      "[60]\tvalidation_0-logloss:0.69365\n",
      "[62]\tvalidation_0-logloss:0.69398\n",
      "[64]\tvalidation_0-logloss:0.69401\n",
      "[66]\tvalidation_0-logloss:0.69400\n",
      "[68]\tvalidation_0-logloss:0.69398\n",
      "[70]\tvalidation_0-logloss:0.69445\n",
      "[72]\tvalidation_0-logloss:0.69466\n",
      "[74]\tvalidation_0-logloss:0.69459\n",
      "[76]\tvalidation_0-logloss:0.69454\n",
      "[78]\tvalidation_0-logloss:0.69457\n",
      "[80]\tvalidation_0-logloss:0.69508\n",
      "[82]\tvalidation_0-logloss:0.69521\n",
      "[84]\tvalidation_0-logloss:0.69574\n",
      "[86]\tvalidation_0-logloss:0.69578\n",
      "[88]\tvalidation_0-logloss:0.69597\n",
      "[90]\tvalidation_0-logloss:0.69623\n",
      "[92]\tvalidation_0-logloss:0.69643\n",
      "[94]\tvalidation_0-logloss:0.69655\n",
      "[96]\tvalidation_0-logloss:0.69664\n",
      "[98]\tvalidation_0-logloss:0.69720\n",
      "[100]\tvalidation_0-logloss:0.69743\n",
      "[102]\tvalidation_0-logloss:0.69755\n",
      "[104]\tvalidation_0-logloss:0.69774\n",
      "[106]\tvalidation_0-logloss:0.69812\n",
      "[108]\tvalidation_0-logloss:0.69872\n",
      "[110]\tvalidation_0-logloss:0.69870\n",
      "[112]\tvalidation_0-logloss:0.69868\n",
      "[114]\tvalidation_0-logloss:0.69906\n",
      "[116]\tvalidation_0-logloss:0.69896\n",
      "[118]\tvalidation_0-logloss:0.69905\n",
      "[120]\tvalidation_0-logloss:0.69898\n",
      "[122]\tvalidation_0-logloss:0.69944\n",
      "[124]\tvalidation_0-logloss:0.69962\n",
      "[126]\tvalidation_0-logloss:0.69958\n",
      "[128]\tvalidation_0-logloss:0.69977\n",
      "[130]\tvalidation_0-logloss:0.69998\n",
      "[132]\tvalidation_0-logloss:0.70000\n",
      "[134]\tvalidation_0-logloss:0.70024\n",
      "[136]\tvalidation_0-logloss:0.70039\n",
      "[138]\tvalidation_0-logloss:0.70050\n",
      "[140]\tvalidation_0-logloss:0.70110\n",
      "[142]\tvalidation_0-logloss:0.70167\n",
      "[144]\tvalidation_0-logloss:0.70167\n",
      "[146]\tvalidation_0-logloss:0.70183\n",
      "[148]\tvalidation_0-logloss:0.70219\n",
      "[150]\tvalidation_0-logloss:0.70196\n",
      "[152]\tvalidation_0-logloss:0.70207\n",
      "[154]\tvalidation_0-logloss:0.70218\n",
      "[156]\tvalidation_0-logloss:0.70238\n",
      "[158]\tvalidation_0-logloss:0.70269\n",
      "[160]\tvalidation_0-logloss:0.70274\n",
      "[162]\tvalidation_0-logloss:0.70276\n",
      "[164]\tvalidation_0-logloss:0.70367\n",
      "[166]\tvalidation_0-logloss:0.70380\n",
      "[168]\tvalidation_0-logloss:0.70384\n",
      "[170]\tvalidation_0-logloss:0.70372\n",
      "[172]\tvalidation_0-logloss:0.70392\n",
      "[174]\tvalidation_0-logloss:0.70404\n",
      "[176]\tvalidation_0-logloss:0.70436\n",
      "[178]\tvalidation_0-logloss:0.70460\n",
      "[180]\tvalidation_0-logloss:0.70474\n",
      "[182]\tvalidation_0-logloss:0.70472\n",
      "[184]\tvalidation_0-logloss:0.70484\n",
      "[186]\tvalidation_0-logloss:0.70539\n",
      "[188]\tvalidation_0-logloss:0.70587\n",
      "[190]\tvalidation_0-logloss:0.70670\n",
      "[192]\tvalidation_0-logloss:0.70695\n",
      "[194]\tvalidation_0-logloss:0.70716\n",
      "[196]\tvalidation_0-logloss:0.70729\n",
      "[198]\tvalidation_0-logloss:0.70763\n",
      "[200]\tvalidation_0-logloss:0.70773\n",
      "[202]\tvalidation_0-logloss:0.70784\n",
      "[204]\tvalidation_0-logloss:0.70803\n",
      "[206]\tvalidation_0-logloss:0.70829\n",
      "[208]\tvalidation_0-logloss:0.70861\n",
      "[210]\tvalidation_0-logloss:0.70886\n",
      "[212]\tvalidation_0-logloss:0.70892\n",
      "[214]\tvalidation_0-logloss:0.70952\n",
      "[216]\tvalidation_0-logloss:0.70961\n",
      "[218]\tvalidation_0-logloss:0.70962\n",
      "[220]\tvalidation_0-logloss:0.70991\n",
      "[222]\tvalidation_0-logloss:0.70999\n",
      "[224]\tvalidation_0-logloss:0.70997\n",
      "[226]\tvalidation_0-logloss:0.70999\n",
      "[228]\tvalidation_0-logloss:0.71036\n",
      "[230]\tvalidation_0-logloss:0.71083\n",
      "[232]\tvalidation_0-logloss:0.71096\n",
      "[234]\tvalidation_0-logloss:0.71109\n",
      "[236]\tvalidation_0-logloss:0.71127\n",
      "[238]\tvalidation_0-logloss:0.71115\n",
      "[240]\tvalidation_0-logloss:0.71109\n",
      "[242]\tvalidation_0-logloss:0.71122\n",
      "[244]\tvalidation_0-logloss:0.71148\n",
      "[246]\tvalidation_0-logloss:0.71191\n",
      "[248]\tvalidation_0-logloss:0.71230\n",
      "[250]\tvalidation_0-logloss:0.71262\n",
      "[252]\tvalidation_0-logloss:0.71274\n",
      "[254]\tvalidation_0-logloss:0.71275\n",
      "[256]\tvalidation_0-logloss:0.71301\n",
      "[258]\tvalidation_0-logloss:0.71307\n",
      "[260]\tvalidation_0-logloss:0.71350\n",
      "[262]\tvalidation_0-logloss:0.71346\n",
      "[264]\tvalidation_0-logloss:0.71360\n",
      "[266]\tvalidation_0-logloss:0.71370\n",
      "[268]\tvalidation_0-logloss:0.71363\n",
      "[270]\tvalidation_0-logloss:0.71348\n",
      "[272]\tvalidation_0-logloss:0.71359\n",
      "[274]\tvalidation_0-logloss:0.71375\n",
      "[276]\tvalidation_0-logloss:0.71374\n",
      "[278]\tvalidation_0-logloss:0.71376\n",
      "[280]\tvalidation_0-logloss:0.71376\n",
      "[282]\tvalidation_0-logloss:0.71375\n",
      "[284]\tvalidation_0-logloss:0.71381\n",
      "[286]\tvalidation_0-logloss:0.71404\n",
      "[288]\tvalidation_0-logloss:0.71421\n",
      "[290]\tvalidation_0-logloss:0.71396\n",
      "[292]\tvalidation_0-logloss:0.71420\n",
      "[293]\tvalidation_0-logloss:0.71431\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:34:58,376] Trial 84 finished with value: 0.6935443886241898 and parameters: {'eta': 0.0732180298093714, 'gamma': 0.44944707162215025, 'max_depth': 6, 'min_child_weight': 2, 'lambda': 0.03212126119451828, 'alpha': 0.18695018963382337}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:35:02] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69540\n",
      "[2]\tvalidation_0-logloss:0.69625\n",
      "[4]\tvalidation_0-logloss:0.69578\n",
      "[6]\tvalidation_0-logloss:0.69538\n",
      "[8]\tvalidation_0-logloss:0.69519\n",
      "[10]\tvalidation_0-logloss:0.69427\n",
      "[12]\tvalidation_0-logloss:0.69449\n",
      "[14]\tvalidation_0-logloss:0.69452\n",
      "[16]\tvalidation_0-logloss:0.69467\n",
      "[18]\tvalidation_0-logloss:0.69457\n",
      "[20]\tvalidation_0-logloss:0.69514\n",
      "[22]\tvalidation_0-logloss:0.69500\n",
      "[24]\tvalidation_0-logloss:0.69501\n",
      "[26]\tvalidation_0-logloss:0.69489\n",
      "[28]\tvalidation_0-logloss:0.69517\n",
      "[30]\tvalidation_0-logloss:0.69529\n",
      "[32]\tvalidation_0-logloss:0.69532\n",
      "[34]\tvalidation_0-logloss:0.69530\n",
      "[36]\tvalidation_0-logloss:0.69561\n",
      "[38]\tvalidation_0-logloss:0.69580\n",
      "[40]\tvalidation_0-logloss:0.69592\n",
      "[42]\tvalidation_0-logloss:0.69599\n",
      "[44]\tvalidation_0-logloss:0.69626\n",
      "[46]\tvalidation_0-logloss:0.69623\n",
      "[48]\tvalidation_0-logloss:0.69627\n",
      "[50]\tvalidation_0-logloss:0.69638\n",
      "[52]\tvalidation_0-logloss:0.69635\n",
      "[54]\tvalidation_0-logloss:0.69639\n",
      "[56]\tvalidation_0-logloss:0.69648\n",
      "[58]\tvalidation_0-logloss:0.69662\n",
      "[60]\tvalidation_0-logloss:0.69644\n",
      "[62]\tvalidation_0-logloss:0.69637\n",
      "[64]\tvalidation_0-logloss:0.69680\n",
      "[66]\tvalidation_0-logloss:0.69719\n",
      "[68]\tvalidation_0-logloss:0.69726\n",
      "[70]\tvalidation_0-logloss:0.69705\n",
      "[72]\tvalidation_0-logloss:0.69740\n",
      "[74]\tvalidation_0-logloss:0.69730\n",
      "[76]\tvalidation_0-logloss:0.69784\n",
      "[78]\tvalidation_0-logloss:0.69787\n",
      "[80]\tvalidation_0-logloss:0.69819\n",
      "[82]\tvalidation_0-logloss:0.69873\n",
      "[84]\tvalidation_0-logloss:0.69877\n",
      "[86]\tvalidation_0-logloss:0.69871\n",
      "[88]\tvalidation_0-logloss:0.69895\n",
      "[90]\tvalidation_0-logloss:0.69904\n",
      "[92]\tvalidation_0-logloss:0.69987\n",
      "[94]\tvalidation_0-logloss:0.69988\n",
      "[96]\tvalidation_0-logloss:0.70049\n",
      "[98]\tvalidation_0-logloss:0.70068\n",
      "[100]\tvalidation_0-logloss:0.70115\n",
      "[102]\tvalidation_0-logloss:0.70123\n",
      "[104]\tvalidation_0-logloss:0.70128\n",
      "[106]\tvalidation_0-logloss:0.70127\n",
      "[108]\tvalidation_0-logloss:0.70135\n",
      "[110]\tvalidation_0-logloss:0.70148\n",
      "[112]\tvalidation_0-logloss:0.70221\n",
      "[114]\tvalidation_0-logloss:0.70253\n",
      "[116]\tvalidation_0-logloss:0.70249\n",
      "[118]\tvalidation_0-logloss:0.70243\n",
      "[120]\tvalidation_0-logloss:0.70237\n",
      "[122]\tvalidation_0-logloss:0.70248\n",
      "[124]\tvalidation_0-logloss:0.70267\n",
      "[126]\tvalidation_0-logloss:0.70289\n",
      "[128]\tvalidation_0-logloss:0.70287\n",
      "[130]\tvalidation_0-logloss:0.70314\n",
      "[132]\tvalidation_0-logloss:0.70366\n",
      "[134]\tvalidation_0-logloss:0.70407\n",
      "[136]\tvalidation_0-logloss:0.70388\n",
      "[138]\tvalidation_0-logloss:0.70411\n",
      "[140]\tvalidation_0-logloss:0.70439\n",
      "[142]\tvalidation_0-logloss:0.70487\n",
      "[144]\tvalidation_0-logloss:0.70516\n",
      "[146]\tvalidation_0-logloss:0.70524\n",
      "[148]\tvalidation_0-logloss:0.70526\n",
      "[150]\tvalidation_0-logloss:0.70544\n",
      "[152]\tvalidation_0-logloss:0.70594\n",
      "[154]\tvalidation_0-logloss:0.70590\n",
      "[156]\tvalidation_0-logloss:0.70610\n",
      "[158]\tvalidation_0-logloss:0.70631\n",
      "[160]\tvalidation_0-logloss:0.70640\n",
      "[162]\tvalidation_0-logloss:0.70699\n",
      "[164]\tvalidation_0-logloss:0.70730\n",
      "[166]\tvalidation_0-logloss:0.70744\n",
      "[168]\tvalidation_0-logloss:0.70757\n",
      "[170]\tvalidation_0-logloss:0.70774\n",
      "[172]\tvalidation_0-logloss:0.70779\n",
      "[174]\tvalidation_0-logloss:0.70821\n",
      "[176]\tvalidation_0-logloss:0.70819\n",
      "[178]\tvalidation_0-logloss:0.70877\n",
      "[180]\tvalidation_0-logloss:0.70907\n",
      "[182]\tvalidation_0-logloss:0.70905\n",
      "[184]\tvalidation_0-logloss:0.70909\n",
      "[186]\tvalidation_0-logloss:0.70928\n",
      "[188]\tvalidation_0-logloss:0.70943\n",
      "[190]\tvalidation_0-logloss:0.70941\n",
      "[192]\tvalidation_0-logloss:0.70937\n",
      "[194]\tvalidation_0-logloss:0.70931\n",
      "[196]\tvalidation_0-logloss:0.70950\n",
      "[198]\tvalidation_0-logloss:0.70956\n",
      "[200]\tvalidation_0-logloss:0.70972\n",
      "[202]\tvalidation_0-logloss:0.71000\n",
      "[204]\tvalidation_0-logloss:0.71014\n",
      "[206]\tvalidation_0-logloss:0.71012\n",
      "[208]\tvalidation_0-logloss:0.71052\n",
      "[210]\tvalidation_0-logloss:0.71071\n",
      "[212]\tvalidation_0-logloss:0.71089\n",
      "[214]\tvalidation_0-logloss:0.71130\n",
      "[216]\tvalidation_0-logloss:0.71146\n",
      "[218]\tvalidation_0-logloss:0.71193\n",
      "[220]\tvalidation_0-logloss:0.71181\n",
      "[222]\tvalidation_0-logloss:0.71216\n",
      "[224]\tvalidation_0-logloss:0.71253\n",
      "[226]\tvalidation_0-logloss:0.71256\n",
      "[228]\tvalidation_0-logloss:0.71290\n",
      "[230]\tvalidation_0-logloss:0.71278\n",
      "[232]\tvalidation_0-logloss:0.71306\n",
      "[234]\tvalidation_0-logloss:0.71311\n",
      "[236]\tvalidation_0-logloss:0.71341\n",
      "[238]\tvalidation_0-logloss:0.71348\n",
      "[240]\tvalidation_0-logloss:0.71353\n",
      "[242]\tvalidation_0-logloss:0.71360\n",
      "[244]\tvalidation_0-logloss:0.71355\n",
      "[246]\tvalidation_0-logloss:0.71365\n",
      "[248]\tvalidation_0-logloss:0.71365\n",
      "[250]\tvalidation_0-logloss:0.71413\n",
      "[252]\tvalidation_0-logloss:0.71407\n",
      "[254]\tvalidation_0-logloss:0.71345\n",
      "[256]\tvalidation_0-logloss:0.71372\n",
      "[258]\tvalidation_0-logloss:0.71357\n",
      "[259]\tvalidation_0-logloss:0.71371\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:36:26,922] Trial 85 finished with value: 0.6940996129907251 and parameters: {'eta': 0.07706474125170917, 'gamma': 0.44431477878736947, 'max_depth': 6, 'min_child_weight': 1, 'lambda': 0.03473184241935278, 'alpha': 0.18836888988961448}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:36:31] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69520\n",
      "[2]\tvalidation_0-logloss:0.69724\n",
      "[4]\tvalidation_0-logloss:0.69738\n",
      "[6]\tvalidation_0-logloss:0.69800\n",
      "[8]\tvalidation_0-logloss:0.69853\n",
      "[10]\tvalidation_0-logloss:0.69834\n",
      "[12]\tvalidation_0-logloss:0.69967\n",
      "[14]\tvalidation_0-logloss:0.69887\n",
      "[16]\tvalidation_0-logloss:0.69860\n",
      "[18]\tvalidation_0-logloss:0.69887\n",
      "[20]\tvalidation_0-logloss:0.69890\n",
      "[22]\tvalidation_0-logloss:0.69914\n",
      "[24]\tvalidation_0-logloss:0.69973\n",
      "[26]\tvalidation_0-logloss:0.70017\n",
      "[28]\tvalidation_0-logloss:0.70041\n",
      "[30]\tvalidation_0-logloss:0.70080\n",
      "[32]\tvalidation_0-logloss:0.70149\n",
      "[34]\tvalidation_0-logloss:0.70218\n",
      "[36]\tvalidation_0-logloss:0.70244\n",
      "[38]\tvalidation_0-logloss:0.70259\n",
      "[40]\tvalidation_0-logloss:0.70255\n",
      "[42]\tvalidation_0-logloss:0.70294\n",
      "[44]\tvalidation_0-logloss:0.70296\n",
      "[46]\tvalidation_0-logloss:0.70373\n",
      "[48]\tvalidation_0-logloss:0.70377\n",
      "[50]\tvalidation_0-logloss:0.70426\n",
      "[52]\tvalidation_0-logloss:0.70494\n",
      "[54]\tvalidation_0-logloss:0.70572\n",
      "[56]\tvalidation_0-logloss:0.70549\n",
      "[58]\tvalidation_0-logloss:0.70560\n",
      "[60]\tvalidation_0-logloss:0.70593\n",
      "[62]\tvalidation_0-logloss:0.70612\n",
      "[64]\tvalidation_0-logloss:0.70595\n",
      "[66]\tvalidation_0-logloss:0.70671\n",
      "[68]\tvalidation_0-logloss:0.70674\n",
      "[70]\tvalidation_0-logloss:0.70773\n",
      "[72]\tvalidation_0-logloss:0.70819\n",
      "[74]\tvalidation_0-logloss:0.70907\n",
      "[76]\tvalidation_0-logloss:0.71022\n",
      "[78]\tvalidation_0-logloss:0.71077\n",
      "[80]\tvalidation_0-logloss:0.71112\n",
      "[82]\tvalidation_0-logloss:0.71133\n",
      "[84]\tvalidation_0-logloss:0.71125\n",
      "[86]\tvalidation_0-logloss:0.71140\n",
      "[88]\tvalidation_0-logloss:0.71217\n",
      "[90]\tvalidation_0-logloss:0.71305\n",
      "[92]\tvalidation_0-logloss:0.71471\n",
      "[94]\tvalidation_0-logloss:0.71486\n",
      "[96]\tvalidation_0-logloss:0.71513\n",
      "[98]\tvalidation_0-logloss:0.71571\n",
      "[100]\tvalidation_0-logloss:0.71586\n",
      "[102]\tvalidation_0-logloss:0.71689\n",
      "[104]\tvalidation_0-logloss:0.71774\n",
      "[106]\tvalidation_0-logloss:0.71862\n",
      "[108]\tvalidation_0-logloss:0.71970\n",
      "[110]\tvalidation_0-logloss:0.72021\n",
      "[112]\tvalidation_0-logloss:0.72037\n",
      "[114]\tvalidation_0-logloss:0.72037\n",
      "[116]\tvalidation_0-logloss:0.72003\n",
      "[118]\tvalidation_0-logloss:0.72021\n",
      "[120]\tvalidation_0-logloss:0.72013\n",
      "[122]\tvalidation_0-logloss:0.72001\n",
      "[124]\tvalidation_0-logloss:0.71997\n",
      "[126]\tvalidation_0-logloss:0.72037\n",
      "[128]\tvalidation_0-logloss:0.72066\n",
      "[130]\tvalidation_0-logloss:0.72005\n",
      "[132]\tvalidation_0-logloss:0.72047\n",
      "[134]\tvalidation_0-logloss:0.72062\n",
      "[136]\tvalidation_0-logloss:0.72070\n",
      "[138]\tvalidation_0-logloss:0.72074\n",
      "[140]\tvalidation_0-logloss:0.72036\n",
      "[142]\tvalidation_0-logloss:0.72107\n",
      "[144]\tvalidation_0-logloss:0.72143\n",
      "[146]\tvalidation_0-logloss:0.72361\n",
      "[148]\tvalidation_0-logloss:0.72389\n",
      "[150]\tvalidation_0-logloss:0.72394\n",
      "[152]\tvalidation_0-logloss:0.72415\n",
      "[154]\tvalidation_0-logloss:0.72423\n",
      "[156]\tvalidation_0-logloss:0.72424\n",
      "[158]\tvalidation_0-logloss:0.72434\n",
      "[160]\tvalidation_0-logloss:0.72482\n",
      "[162]\tvalidation_0-logloss:0.72502\n",
      "[164]\tvalidation_0-logloss:0.72509\n",
      "[166]\tvalidation_0-logloss:0.72557\n",
      "[168]\tvalidation_0-logloss:0.72578\n",
      "[170]\tvalidation_0-logloss:0.72603\n",
      "[172]\tvalidation_0-logloss:0.72647\n",
      "[174]\tvalidation_0-logloss:0.72689\n",
      "[176]\tvalidation_0-logloss:0.72735\n",
      "[178]\tvalidation_0-logloss:0.72757\n",
      "[180]\tvalidation_0-logloss:0.72807\n",
      "[182]\tvalidation_0-logloss:0.72810\n",
      "[184]\tvalidation_0-logloss:0.72827\n",
      "[186]\tvalidation_0-logloss:0.72855\n",
      "[188]\tvalidation_0-logloss:0.72881\n",
      "[190]\tvalidation_0-logloss:0.72925\n",
      "[192]\tvalidation_0-logloss:0.72940\n",
      "[194]\tvalidation_0-logloss:0.73005\n",
      "[196]\tvalidation_0-logloss:0.73066\n",
      "[198]\tvalidation_0-logloss:0.73085\n",
      "[200]\tvalidation_0-logloss:0.73055\n",
      "[202]\tvalidation_0-logloss:0.73110\n",
      "[204]\tvalidation_0-logloss:0.73136\n",
      "[206]\tvalidation_0-logloss:0.73130\n",
      "[208]\tvalidation_0-logloss:0.73203\n",
      "[210]\tvalidation_0-logloss:0.73218\n",
      "[212]\tvalidation_0-logloss:0.73223\n",
      "[214]\tvalidation_0-logloss:0.73253\n",
      "[216]\tvalidation_0-logloss:0.73284\n",
      "[218]\tvalidation_0-logloss:0.73318\n",
      "[220]\tvalidation_0-logloss:0.73351\n",
      "[222]\tvalidation_0-logloss:0.73343\n",
      "[224]\tvalidation_0-logloss:0.73497\n",
      "[226]\tvalidation_0-logloss:0.73501\n",
      "[228]\tvalidation_0-logloss:0.73531\n",
      "[230]\tvalidation_0-logloss:0.73553\n",
      "[232]\tvalidation_0-logloss:0.73625\n",
      "[234]\tvalidation_0-logloss:0.73667\n",
      "[236]\tvalidation_0-logloss:0.73679\n",
      "[238]\tvalidation_0-logloss:0.73706\n",
      "[240]\tvalidation_0-logloss:0.73660\n",
      "[242]\tvalidation_0-logloss:0.73698\n",
      "[244]\tvalidation_0-logloss:0.73719\n",
      "[246]\tvalidation_0-logloss:0.73753\n",
      "[248]\tvalidation_0-logloss:0.73853\n",
      "[249]\tvalidation_0-logloss:0.73886\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:37:53,712] Trial 86 finished with value: 0.6952036507716763 and parameters: {'eta': 0.10032404911767571, 'gamma': 0.5230865612290806, 'max_depth': 7, 'min_child_weight': 0, 'lambda': 0.001152858771577267, 'alpha': 0.1445801413999155}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:37:58] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69534\n",
      "[2]\tvalidation_0-logloss:0.69556\n",
      "[4]\tvalidation_0-logloss:0.69559\n",
      "[6]\tvalidation_0-logloss:0.69554\n",
      "[8]\tvalidation_0-logloss:0.69521\n",
      "[10]\tvalidation_0-logloss:0.69514\n",
      "[12]\tvalidation_0-logloss:0.69507\n",
      "[14]\tvalidation_0-logloss:0.69502\n",
      "[16]\tvalidation_0-logloss:0.69500\n",
      "[18]\tvalidation_0-logloss:0.69499\n",
      "[20]\tvalidation_0-logloss:0.69484\n",
      "[22]\tvalidation_0-logloss:0.69481\n",
      "[24]\tvalidation_0-logloss:0.69479\n",
      "[26]\tvalidation_0-logloss:0.69495\n",
      "[28]\tvalidation_0-logloss:0.69467\n",
      "[30]\tvalidation_0-logloss:0.69473\n",
      "[32]\tvalidation_0-logloss:0.69480\n",
      "[34]\tvalidation_0-logloss:0.69473\n",
      "[36]\tvalidation_0-logloss:0.69442\n",
      "[38]\tvalidation_0-logloss:0.69413\n",
      "[40]\tvalidation_0-logloss:0.69392\n",
      "[42]\tvalidation_0-logloss:0.69394\n",
      "[44]\tvalidation_0-logloss:0.69393\n",
      "[46]\tvalidation_0-logloss:0.69383\n",
      "[48]\tvalidation_0-logloss:0.69373\n",
      "[50]\tvalidation_0-logloss:0.69383\n",
      "[52]\tvalidation_0-logloss:0.69409\n",
      "[54]\tvalidation_0-logloss:0.69410\n",
      "[56]\tvalidation_0-logloss:0.69415\n",
      "[58]\tvalidation_0-logloss:0.69417\n",
      "[60]\tvalidation_0-logloss:0.69418\n",
      "[62]\tvalidation_0-logloss:0.69404\n",
      "[64]\tvalidation_0-logloss:0.69412\n",
      "[66]\tvalidation_0-logloss:0.69401\n",
      "[68]\tvalidation_0-logloss:0.69405\n",
      "[70]\tvalidation_0-logloss:0.69404\n",
      "[72]\tvalidation_0-logloss:0.69399\n",
      "[74]\tvalidation_0-logloss:0.69383\n",
      "[76]\tvalidation_0-logloss:0.69385\n",
      "[78]\tvalidation_0-logloss:0.69379\n",
      "[80]\tvalidation_0-logloss:0.69375\n",
      "[82]\tvalidation_0-logloss:0.69394\n",
      "[84]\tvalidation_0-logloss:0.69389\n",
      "[86]\tvalidation_0-logloss:0.69397\n",
      "[88]\tvalidation_0-logloss:0.69397\n",
      "[90]\tvalidation_0-logloss:0.69406\n",
      "[92]\tvalidation_0-logloss:0.69403\n",
      "[94]\tvalidation_0-logloss:0.69407\n",
      "[96]\tvalidation_0-logloss:0.69413\n",
      "[98]\tvalidation_0-logloss:0.69419\n",
      "[100]\tvalidation_0-logloss:0.69425\n",
      "[102]\tvalidation_0-logloss:0.69432\n",
      "[104]\tvalidation_0-logloss:0.69424\n",
      "[106]\tvalidation_0-logloss:0.69413\n",
      "[108]\tvalidation_0-logloss:0.69416\n",
      "[110]\tvalidation_0-logloss:0.69416\n",
      "[112]\tvalidation_0-logloss:0.69424\n",
      "[114]\tvalidation_0-logloss:0.69427\n",
      "[116]\tvalidation_0-logloss:0.69431\n",
      "[118]\tvalidation_0-logloss:0.69439\n",
      "[120]\tvalidation_0-logloss:0.69432\n",
      "[122]\tvalidation_0-logloss:0.69438\n",
      "[124]\tvalidation_0-logloss:0.69446\n",
      "[126]\tvalidation_0-logloss:0.69448\n",
      "[128]\tvalidation_0-logloss:0.69442\n",
      "[130]\tvalidation_0-logloss:0.69448\n",
      "[132]\tvalidation_0-logloss:0.69444\n",
      "[134]\tvalidation_0-logloss:0.69443\n",
      "[136]\tvalidation_0-logloss:0.69439\n",
      "[138]\tvalidation_0-logloss:0.69442\n",
      "[140]\tvalidation_0-logloss:0.69446\n",
      "[142]\tvalidation_0-logloss:0.69454\n",
      "[144]\tvalidation_0-logloss:0.69468\n",
      "[146]\tvalidation_0-logloss:0.69466\n",
      "[148]\tvalidation_0-logloss:0.69480\n",
      "[150]\tvalidation_0-logloss:0.69511\n",
      "[152]\tvalidation_0-logloss:0.69520\n",
      "[154]\tvalidation_0-logloss:0.69528\n",
      "[156]\tvalidation_0-logloss:0.69537\n",
      "[158]\tvalidation_0-logloss:0.69540\n",
      "[160]\tvalidation_0-logloss:0.69538\n",
      "[162]\tvalidation_0-logloss:0.69535\n",
      "[164]\tvalidation_0-logloss:0.69540\n",
      "[166]\tvalidation_0-logloss:0.69545\n",
      "[168]\tvalidation_0-logloss:0.69565\n",
      "[170]\tvalidation_0-logloss:0.69557\n",
      "[172]\tvalidation_0-logloss:0.69554\n",
      "[174]\tvalidation_0-logloss:0.69563\n",
      "[176]\tvalidation_0-logloss:0.69566\n",
      "[178]\tvalidation_0-logloss:0.69564\n",
      "[180]\tvalidation_0-logloss:0.69570\n",
      "[182]\tvalidation_0-logloss:0.69564\n",
      "[184]\tvalidation_0-logloss:0.69580\n",
      "[186]\tvalidation_0-logloss:0.69596\n",
      "[188]\tvalidation_0-logloss:0.69611\n",
      "[190]\tvalidation_0-logloss:0.69613\n",
      "[192]\tvalidation_0-logloss:0.69620\n",
      "[194]\tvalidation_0-logloss:0.69621\n",
      "[196]\tvalidation_0-logloss:0.69632\n",
      "[198]\tvalidation_0-logloss:0.69639\n",
      "[200]\tvalidation_0-logloss:0.69639\n",
      "[202]\tvalidation_0-logloss:0.69659\n",
      "[204]\tvalidation_0-logloss:0.69661\n",
      "[206]\tvalidation_0-logloss:0.69675\n",
      "[208]\tvalidation_0-logloss:0.69693\n",
      "[210]\tvalidation_0-logloss:0.69697\n",
      "[212]\tvalidation_0-logloss:0.69725\n",
      "[214]\tvalidation_0-logloss:0.69721\n",
      "[216]\tvalidation_0-logloss:0.69723\n",
      "[218]\tvalidation_0-logloss:0.69749\n",
      "[220]\tvalidation_0-logloss:0.69756\n",
      "[222]\tvalidation_0-logloss:0.69755\n",
      "[224]\tvalidation_0-logloss:0.69756\n",
      "[226]\tvalidation_0-logloss:0.69764\n",
      "[228]\tvalidation_0-logloss:0.69786\n",
      "[230]\tvalidation_0-logloss:0.69795\n",
      "[232]\tvalidation_0-logloss:0.69786\n",
      "[234]\tvalidation_0-logloss:0.69812\n",
      "[236]\tvalidation_0-logloss:0.69818\n",
      "[238]\tvalidation_0-logloss:0.69823\n",
      "[240]\tvalidation_0-logloss:0.69832\n",
      "[242]\tvalidation_0-logloss:0.69837\n",
      "[244]\tvalidation_0-logloss:0.69853\n",
      "[246]\tvalidation_0-logloss:0.69847\n",
      "[248]\tvalidation_0-logloss:0.69867\n",
      "[250]\tvalidation_0-logloss:0.69869\n",
      "[252]\tvalidation_0-logloss:0.69879\n",
      "[254]\tvalidation_0-logloss:0.69864\n",
      "[256]\tvalidation_0-logloss:0.69857\n",
      "[258]\tvalidation_0-logloss:0.69879\n",
      "[260]\tvalidation_0-logloss:0.69886\n",
      "[262]\tvalidation_0-logloss:0.69876\n",
      "[264]\tvalidation_0-logloss:0.69877\n",
      "[266]\tvalidation_0-logloss:0.69894\n",
      "[268]\tvalidation_0-logloss:0.69889\n",
      "[270]\tvalidation_0-logloss:0.69893\n",
      "[272]\tvalidation_0-logloss:0.69884\n",
      "[274]\tvalidation_0-logloss:0.69908\n",
      "[276]\tvalidation_0-logloss:0.69907\n",
      "[278]\tvalidation_0-logloss:0.69941\n",
      "[280]\tvalidation_0-logloss:0.69958\n",
      "[282]\tvalidation_0-logloss:0.69963\n",
      "[284]\tvalidation_0-logloss:0.69979\n",
      "[286]\tvalidation_0-logloss:0.69975\n",
      "[288]\tvalidation_0-logloss:0.69974\n",
      "[290]\tvalidation_0-logloss:0.69974\n",
      "[292]\tvalidation_0-logloss:0.69969\n",
      "[294]\tvalidation_0-logloss:0.69973\n",
      "[296]\tvalidation_0-logloss:0.69978\n",
      "[298]\tvalidation_0-logloss:0.69970\n",
      "[300]\tvalidation_0-logloss:0.69970\n",
      "[302]\tvalidation_0-logloss:0.69975\n",
      "[304]\tvalidation_0-logloss:0.69969\n",
      "[306]\tvalidation_0-logloss:0.69963\n",
      "[308]\tvalidation_0-logloss:0.69980\n",
      "[310]\tvalidation_0-logloss:0.69991\n",
      "[312]\tvalidation_0-logloss:0.69985\n",
      "[314]\tvalidation_0-logloss:0.69985\n",
      "[316]\tvalidation_0-logloss:0.69996\n",
      "[318]\tvalidation_0-logloss:0.70009\n",
      "[320]\tvalidation_0-logloss:0.70013\n",
      "[322]\tvalidation_0-logloss:0.70020\n",
      "[324]\tvalidation_0-logloss:0.70026\n",
      "[326]\tvalidation_0-logloss:0.70047\n",
      "[328]\tvalidation_0-logloss:0.70056\n",
      "[330]\tvalidation_0-logloss:0.70065\n",
      "[331]\tvalidation_0-logloss:0.70068\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:39:38,392] Trial 87 finished with value: 0.6935747946692873 and parameters: {'eta': 0.04221818040478219, 'gamma': 0.43039732460434016, 'max_depth': 5, 'min_child_weight': 2, 'lambda': 0.03682548837248864, 'alpha': 0.05199287325653937}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:39:43] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69531\n",
      "[2]\tvalidation_0-logloss:0.69569\n",
      "[4]\tvalidation_0-logloss:0.69582\n",
      "[6]\tvalidation_0-logloss:0.69573\n",
      "[8]\tvalidation_0-logloss:0.69514\n",
      "[10]\tvalidation_0-logloss:0.69505\n",
      "[12]\tvalidation_0-logloss:0.69494\n",
      "[14]\tvalidation_0-logloss:0.69510\n",
      "[16]\tvalidation_0-logloss:0.69518\n",
      "[18]\tvalidation_0-logloss:0.69535\n",
      "[20]\tvalidation_0-logloss:0.69525\n",
      "[22]\tvalidation_0-logloss:0.69540\n",
      "[24]\tvalidation_0-logloss:0.69556\n",
      "[26]\tvalidation_0-logloss:0.69542\n",
      "[28]\tvalidation_0-logloss:0.69548\n",
      "[30]\tvalidation_0-logloss:0.69564\n",
      "[32]\tvalidation_0-logloss:0.69551\n",
      "[34]\tvalidation_0-logloss:0.69548\n",
      "[36]\tvalidation_0-logloss:0.69517\n",
      "[38]\tvalidation_0-logloss:0.69512\n",
      "[40]\tvalidation_0-logloss:0.69494\n",
      "[42]\tvalidation_0-logloss:0.69483\n",
      "[44]\tvalidation_0-logloss:0.69488\n",
      "[46]\tvalidation_0-logloss:0.69508\n",
      "[48]\tvalidation_0-logloss:0.69503\n",
      "[50]\tvalidation_0-logloss:0.69502\n",
      "[52]\tvalidation_0-logloss:0.69507\n",
      "[54]\tvalidation_0-logloss:0.69499\n",
      "[56]\tvalidation_0-logloss:0.69533\n",
      "[58]\tvalidation_0-logloss:0.69559\n",
      "[60]\tvalidation_0-logloss:0.69559\n",
      "[62]\tvalidation_0-logloss:0.69560\n",
      "[64]\tvalidation_0-logloss:0.69559\n",
      "[66]\tvalidation_0-logloss:0.69599\n",
      "[68]\tvalidation_0-logloss:0.69587\n",
      "[70]\tvalidation_0-logloss:0.69591\n",
      "[72]\tvalidation_0-logloss:0.69605\n",
      "[74]\tvalidation_0-logloss:0.69600\n",
      "[76]\tvalidation_0-logloss:0.69621\n",
      "[78]\tvalidation_0-logloss:0.69632\n",
      "[80]\tvalidation_0-logloss:0.69642\n",
      "[82]\tvalidation_0-logloss:0.69635\n",
      "[84]\tvalidation_0-logloss:0.69650\n",
      "[86]\tvalidation_0-logloss:0.69672\n",
      "[88]\tvalidation_0-logloss:0.69659\n",
      "[90]\tvalidation_0-logloss:0.69671\n",
      "[92]\tvalidation_0-logloss:0.69675\n",
      "[94]\tvalidation_0-logloss:0.69696\n",
      "[96]\tvalidation_0-logloss:0.69680\n",
      "[98]\tvalidation_0-logloss:0.69663\n",
      "[100]\tvalidation_0-logloss:0.69682\n",
      "[102]\tvalidation_0-logloss:0.69667\n",
      "[104]\tvalidation_0-logloss:0.69666\n",
      "[106]\tvalidation_0-logloss:0.69660\n",
      "[108]\tvalidation_0-logloss:0.69686\n",
      "[110]\tvalidation_0-logloss:0.69686\n",
      "[112]\tvalidation_0-logloss:0.69684\n",
      "[114]\tvalidation_0-logloss:0.69681\n",
      "[116]\tvalidation_0-logloss:0.69664\n",
      "[118]\tvalidation_0-logloss:0.69707\n",
      "[120]\tvalidation_0-logloss:0.69712\n",
      "[122]\tvalidation_0-logloss:0.69721\n",
      "[124]\tvalidation_0-logloss:0.69720\n",
      "[126]\tvalidation_0-logloss:0.69705\n",
      "[128]\tvalidation_0-logloss:0.69699\n",
      "[130]\tvalidation_0-logloss:0.69706\n",
      "[132]\tvalidation_0-logloss:0.69704\n",
      "[134]\tvalidation_0-logloss:0.69714\n",
      "[136]\tvalidation_0-logloss:0.69720\n",
      "[138]\tvalidation_0-logloss:0.69752\n",
      "[140]\tvalidation_0-logloss:0.69767\n",
      "[142]\tvalidation_0-logloss:0.69781\n",
      "[144]\tvalidation_0-logloss:0.69777\n",
      "[146]\tvalidation_0-logloss:0.69771\n",
      "[148]\tvalidation_0-logloss:0.69766\n",
      "[150]\tvalidation_0-logloss:0.69793\n",
      "[152]\tvalidation_0-logloss:0.69781\n",
      "[154]\tvalidation_0-logloss:0.69795\n",
      "[156]\tvalidation_0-logloss:0.69820\n",
      "[158]\tvalidation_0-logloss:0.69849\n",
      "[160]\tvalidation_0-logloss:0.69881\n",
      "[162]\tvalidation_0-logloss:0.69903\n",
      "[164]\tvalidation_0-logloss:0.69925\n",
      "[166]\tvalidation_0-logloss:0.69933\n",
      "[168]\tvalidation_0-logloss:0.69941\n",
      "[170]\tvalidation_0-logloss:0.69933\n",
      "[172]\tvalidation_0-logloss:0.69967\n",
      "[174]\tvalidation_0-logloss:0.69974\n",
      "[176]\tvalidation_0-logloss:0.69981\n",
      "[178]\tvalidation_0-logloss:0.69993\n",
      "[180]\tvalidation_0-logloss:0.69993\n",
      "[182]\tvalidation_0-logloss:0.70003\n",
      "[184]\tvalidation_0-logloss:0.70014\n",
      "[186]\tvalidation_0-logloss:0.70025\n",
      "[188]\tvalidation_0-logloss:0.70031\n",
      "[190]\tvalidation_0-logloss:0.70028\n",
      "[192]\tvalidation_0-logloss:0.70038\n",
      "[194]\tvalidation_0-logloss:0.70044\n",
      "[196]\tvalidation_0-logloss:0.70065\n",
      "[198]\tvalidation_0-logloss:0.70040\n",
      "[200]\tvalidation_0-logloss:0.70043\n",
      "[202]\tvalidation_0-logloss:0.70053\n",
      "[204]\tvalidation_0-logloss:0.70051\n",
      "[206]\tvalidation_0-logloss:0.70062\n",
      "[208]\tvalidation_0-logloss:0.70080\n",
      "[210]\tvalidation_0-logloss:0.70093\n",
      "[212]\tvalidation_0-logloss:0.70089\n",
      "[214]\tvalidation_0-logloss:0.70099\n",
      "[216]\tvalidation_0-logloss:0.70139\n",
      "[218]\tvalidation_0-logloss:0.70149\n",
      "[220]\tvalidation_0-logloss:0.70153\n",
      "[222]\tvalidation_0-logloss:0.70155\n",
      "[224]\tvalidation_0-logloss:0.70157\n",
      "[226]\tvalidation_0-logloss:0.70174\n",
      "[228]\tvalidation_0-logloss:0.70200\n",
      "[230]\tvalidation_0-logloss:0.70207\n",
      "[232]\tvalidation_0-logloss:0.70217\n",
      "[234]\tvalidation_0-logloss:0.70230\n",
      "[236]\tvalidation_0-logloss:0.70259\n",
      "[238]\tvalidation_0-logloss:0.70257\n",
      "[240]\tvalidation_0-logloss:0.70257\n",
      "[242]\tvalidation_0-logloss:0.70280\n",
      "[244]\tvalidation_0-logloss:0.70281\n",
      "[246]\tvalidation_0-logloss:0.70278\n",
      "[248]\tvalidation_0-logloss:0.70280\n",
      "[250]\tvalidation_0-logloss:0.70289\n",
      "[252]\tvalidation_0-logloss:0.70313\n",
      "[254]\tvalidation_0-logloss:0.70338\n",
      "[256]\tvalidation_0-logloss:0.70371\n",
      "[258]\tvalidation_0-logloss:0.70378\n",
      "[260]\tvalidation_0-logloss:0.70372\n",
      "[262]\tvalidation_0-logloss:0.70407\n",
      "[264]\tvalidation_0-logloss:0.70416\n",
      "[266]\tvalidation_0-logloss:0.70411\n",
      "[268]\tvalidation_0-logloss:0.70417\n",
      "[270]\tvalidation_0-logloss:0.70422\n",
      "[272]\tvalidation_0-logloss:0.70422\n",
      "[274]\tvalidation_0-logloss:0.70422\n",
      "[276]\tvalidation_0-logloss:0.70447\n",
      "[278]\tvalidation_0-logloss:0.70466\n",
      "[280]\tvalidation_0-logloss:0.70489\n",
      "[282]\tvalidation_0-logloss:0.70489\n",
      "[284]\tvalidation_0-logloss:0.70499\n",
      "[286]\tvalidation_0-logloss:0.70502\n",
      "[288]\tvalidation_0-logloss:0.70500\n",
      "[290]\tvalidation_0-logloss:0.70505\n",
      "[291]\tvalidation_0-logloss:0.70531\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:41:16,321] Trial 88 finished with value: 0.6948306743525994 and parameters: {'eta': 0.047708859765787724, 'gamma': 0.40197489197883374, 'max_depth': 6, 'min_child_weight': 1, 'lambda': 0.0253697345364736, 'alpha': 0.06733021042037833}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:41:21] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69533\n",
      "[2]\tvalidation_0-logloss:0.69556\n",
      "[4]\tvalidation_0-logloss:0.69558\n",
      "[6]\tvalidation_0-logloss:0.69553\n",
      "[8]\tvalidation_0-logloss:0.69520\n",
      "[10]\tvalidation_0-logloss:0.69514\n",
      "[12]\tvalidation_0-logloss:0.69505\n",
      "[14]\tvalidation_0-logloss:0.69500\n",
      "[16]\tvalidation_0-logloss:0.69499\n",
      "[18]\tvalidation_0-logloss:0.69483\n",
      "[20]\tvalidation_0-logloss:0.69468\n",
      "[22]\tvalidation_0-logloss:0.69477\n",
      "[24]\tvalidation_0-logloss:0.69445\n",
      "[26]\tvalidation_0-logloss:0.69445\n",
      "[28]\tvalidation_0-logloss:0.69448\n",
      "[30]\tvalidation_0-logloss:0.69465\n",
      "[32]\tvalidation_0-logloss:0.69480\n",
      "[34]\tvalidation_0-logloss:0.69471\n",
      "[36]\tvalidation_0-logloss:0.69477\n",
      "[38]\tvalidation_0-logloss:0.69447\n",
      "[40]\tvalidation_0-logloss:0.69446\n",
      "[42]\tvalidation_0-logloss:0.69454\n",
      "[44]\tvalidation_0-logloss:0.69465\n",
      "[46]\tvalidation_0-logloss:0.69450\n",
      "[48]\tvalidation_0-logloss:0.69432\n",
      "[50]\tvalidation_0-logloss:0.69437\n",
      "[52]\tvalidation_0-logloss:0.69451\n",
      "[54]\tvalidation_0-logloss:0.69452\n",
      "[56]\tvalidation_0-logloss:0.69470\n",
      "[58]\tvalidation_0-logloss:0.69467\n",
      "[60]\tvalidation_0-logloss:0.69466\n",
      "[62]\tvalidation_0-logloss:0.69455\n",
      "[64]\tvalidation_0-logloss:0.69458\n",
      "[66]\tvalidation_0-logloss:0.69458\n",
      "[68]\tvalidation_0-logloss:0.69462\n",
      "[70]\tvalidation_0-logloss:0.69466\n",
      "[72]\tvalidation_0-logloss:0.69450\n",
      "[74]\tvalidation_0-logloss:0.69450\n",
      "[76]\tvalidation_0-logloss:0.69443\n",
      "[78]\tvalidation_0-logloss:0.69438\n",
      "[80]\tvalidation_0-logloss:0.69442\n",
      "[82]\tvalidation_0-logloss:0.69447\n",
      "[84]\tvalidation_0-logloss:0.69462\n",
      "[86]\tvalidation_0-logloss:0.69469\n",
      "[88]\tvalidation_0-logloss:0.69467\n",
      "[90]\tvalidation_0-logloss:0.69471\n",
      "[92]\tvalidation_0-logloss:0.69472\n",
      "[94]\tvalidation_0-logloss:0.69485\n",
      "[96]\tvalidation_0-logloss:0.69481\n",
      "[98]\tvalidation_0-logloss:0.69478\n",
      "[100]\tvalidation_0-logloss:0.69491\n",
      "[102]\tvalidation_0-logloss:0.69524\n",
      "[104]\tvalidation_0-logloss:0.69525\n",
      "[106]\tvalidation_0-logloss:0.69526\n",
      "[108]\tvalidation_0-logloss:0.69507\n",
      "[110]\tvalidation_0-logloss:0.69501\n",
      "[112]\tvalidation_0-logloss:0.69495\n",
      "[114]\tvalidation_0-logloss:0.69491\n",
      "[116]\tvalidation_0-logloss:0.69485\n",
      "[118]\tvalidation_0-logloss:0.69495\n",
      "[120]\tvalidation_0-logloss:0.69479\n",
      "[122]\tvalidation_0-logloss:0.69485\n",
      "[124]\tvalidation_0-logloss:0.69485\n",
      "[126]\tvalidation_0-logloss:0.69463\n",
      "[128]\tvalidation_0-logloss:0.69498\n",
      "[130]\tvalidation_0-logloss:0.69497\n",
      "[132]\tvalidation_0-logloss:0.69491\n",
      "[134]\tvalidation_0-logloss:0.69503\n",
      "[136]\tvalidation_0-logloss:0.69508\n",
      "[138]\tvalidation_0-logloss:0.69503\n",
      "[140]\tvalidation_0-logloss:0.69510\n",
      "[142]\tvalidation_0-logloss:0.69512\n",
      "[144]\tvalidation_0-logloss:0.69511\n",
      "[146]\tvalidation_0-logloss:0.69520\n",
      "[148]\tvalidation_0-logloss:0.69523\n",
      "[150]\tvalidation_0-logloss:0.69523\n",
      "[152]\tvalidation_0-logloss:0.69522\n",
      "[154]\tvalidation_0-logloss:0.69521\n",
      "[156]\tvalidation_0-logloss:0.69521\n",
      "[158]\tvalidation_0-logloss:0.69508\n",
      "[160]\tvalidation_0-logloss:0.69528\n",
      "[162]\tvalidation_0-logloss:0.69533\n",
      "[164]\tvalidation_0-logloss:0.69540\n",
      "[166]\tvalidation_0-logloss:0.69540\n",
      "[168]\tvalidation_0-logloss:0.69537\n",
      "[170]\tvalidation_0-logloss:0.69525\n",
      "[172]\tvalidation_0-logloss:0.69534\n",
      "[174]\tvalidation_0-logloss:0.69533\n",
      "[176]\tvalidation_0-logloss:0.69531\n",
      "[178]\tvalidation_0-logloss:0.69540\n",
      "[180]\tvalidation_0-logloss:0.69562\n",
      "[182]\tvalidation_0-logloss:0.69575\n",
      "[184]\tvalidation_0-logloss:0.69589\n",
      "[186]\tvalidation_0-logloss:0.69588\n",
      "[188]\tvalidation_0-logloss:0.69582\n",
      "[190]\tvalidation_0-logloss:0.69572\n",
      "[192]\tvalidation_0-logloss:0.69593\n",
      "[194]\tvalidation_0-logloss:0.69602\n",
      "[196]\tvalidation_0-logloss:0.69599\n",
      "[198]\tvalidation_0-logloss:0.69597\n",
      "[200]\tvalidation_0-logloss:0.69622\n",
      "[202]\tvalidation_0-logloss:0.69623\n",
      "[204]\tvalidation_0-logloss:0.69647\n",
      "[206]\tvalidation_0-logloss:0.69654\n",
      "[208]\tvalidation_0-logloss:0.69656\n",
      "[210]\tvalidation_0-logloss:0.69658\n",
      "[212]\tvalidation_0-logloss:0.69666\n",
      "[214]\tvalidation_0-logloss:0.69687\n",
      "[216]\tvalidation_0-logloss:0.69692\n",
      "[218]\tvalidation_0-logloss:0.69697\n",
      "[220]\tvalidation_0-logloss:0.69704\n",
      "[222]\tvalidation_0-logloss:0.69697\n",
      "[224]\tvalidation_0-logloss:0.69717\n",
      "[226]\tvalidation_0-logloss:0.69721\n",
      "[228]\tvalidation_0-logloss:0.69723\n",
      "[230]\tvalidation_0-logloss:0.69741\n",
      "[232]\tvalidation_0-logloss:0.69743\n",
      "[234]\tvalidation_0-logloss:0.69758\n",
      "[236]\tvalidation_0-logloss:0.69767\n",
      "[238]\tvalidation_0-logloss:0.69784\n",
      "[240]\tvalidation_0-logloss:0.69801\n",
      "[242]\tvalidation_0-logloss:0.69797\n",
      "[244]\tvalidation_0-logloss:0.69796\n",
      "[246]\tvalidation_0-logloss:0.69800\n",
      "[248]\tvalidation_0-logloss:0.69799\n",
      "[250]\tvalidation_0-logloss:0.69810\n",
      "[252]\tvalidation_0-logloss:0.69807\n",
      "[254]\tvalidation_0-logloss:0.69796\n",
      "[256]\tvalidation_0-logloss:0.69794\n",
      "[258]\tvalidation_0-logloss:0.69786\n",
      "[260]\tvalidation_0-logloss:0.69800\n",
      "[262]\tvalidation_0-logloss:0.69813\n",
      "[264]\tvalidation_0-logloss:0.69804\n",
      "[266]\tvalidation_0-logloss:0.69801\n",
      "[268]\tvalidation_0-logloss:0.69816\n",
      "[270]\tvalidation_0-logloss:0.69811\n",
      "[272]\tvalidation_0-logloss:0.69819\n",
      "[274]\tvalidation_0-logloss:0.69823\n",
      "[276]\tvalidation_0-logloss:0.69831\n",
      "[278]\tvalidation_0-logloss:0.69855\n",
      "[280]\tvalidation_0-logloss:0.69857\n",
      "[282]\tvalidation_0-logloss:0.69859\n",
      "[284]\tvalidation_0-logloss:0.69870\n",
      "[286]\tvalidation_0-logloss:0.69873\n",
      "[288]\tvalidation_0-logloss:0.69871\n",
      "[290]\tvalidation_0-logloss:0.69869\n",
      "[292]\tvalidation_0-logloss:0.69894\n",
      "[294]\tvalidation_0-logloss:0.69922\n",
      "[296]\tvalidation_0-logloss:0.69920\n",
      "[297]\tvalidation_0-logloss:0.69937\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:42:48,860] Trial 89 finished with value: 0.6943167463403491 and parameters: {'eta': 0.04167698961775743, 'gamma': 0.4552748812450164, 'max_depth': 5, 'min_child_weight': 0, 'lambda': 0.07559659398753316, 'alpha': 0.10285316908952866}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:42:53] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69528\n",
      "[2]\tvalidation_0-logloss:0.69549\n",
      "[4]\tvalidation_0-logloss:0.69582\n",
      "[6]\tvalidation_0-logloss:0.69582\n",
      "[8]\tvalidation_0-logloss:0.69590\n",
      "[10]\tvalidation_0-logloss:0.69565\n",
      "[12]\tvalidation_0-logloss:0.69550\n",
      "[14]\tvalidation_0-logloss:0.69538\n",
      "[16]\tvalidation_0-logloss:0.69528\n",
      "[18]\tvalidation_0-logloss:0.69526\n",
      "[20]\tvalidation_0-logloss:0.69525\n",
      "[22]\tvalidation_0-logloss:0.69511\n",
      "[24]\tvalidation_0-logloss:0.69512\n",
      "[26]\tvalidation_0-logloss:0.69515\n",
      "[28]\tvalidation_0-logloss:0.69519\n",
      "[30]\tvalidation_0-logloss:0.69513\n",
      "[32]\tvalidation_0-logloss:0.69526\n",
      "[34]\tvalidation_0-logloss:0.69529\n",
      "[36]\tvalidation_0-logloss:0.69545\n",
      "[38]\tvalidation_0-logloss:0.69542\n",
      "[40]\tvalidation_0-logloss:0.69551\n",
      "[42]\tvalidation_0-logloss:0.69566\n",
      "[44]\tvalidation_0-logloss:0.69551\n",
      "[46]\tvalidation_0-logloss:0.69544\n",
      "[48]\tvalidation_0-logloss:0.69537\n",
      "[50]\tvalidation_0-logloss:0.69516\n",
      "[52]\tvalidation_0-logloss:0.69517\n",
      "[54]\tvalidation_0-logloss:0.69513\n",
      "[56]\tvalidation_0-logloss:0.69495\n",
      "[58]\tvalidation_0-logloss:0.69499\n",
      "[60]\tvalidation_0-logloss:0.69507\n",
      "[62]\tvalidation_0-logloss:0.69488\n",
      "[64]\tvalidation_0-logloss:0.69493\n",
      "[66]\tvalidation_0-logloss:0.69505\n",
      "[68]\tvalidation_0-logloss:0.69519\n",
      "[70]\tvalidation_0-logloss:0.69517\n",
      "[72]\tvalidation_0-logloss:0.69528\n",
      "[74]\tvalidation_0-logloss:0.69539\n",
      "[76]\tvalidation_0-logloss:0.69562\n",
      "[78]\tvalidation_0-logloss:0.69572\n",
      "[80]\tvalidation_0-logloss:0.69563\n",
      "[82]\tvalidation_0-logloss:0.69566\n",
      "[84]\tvalidation_0-logloss:0.69552\n",
      "[86]\tvalidation_0-logloss:0.69548\n",
      "[88]\tvalidation_0-logloss:0.69550\n",
      "[90]\tvalidation_0-logloss:0.69550\n",
      "[92]\tvalidation_0-logloss:0.69557\n",
      "[94]\tvalidation_0-logloss:0.69560\n",
      "[96]\tvalidation_0-logloss:0.69560\n",
      "[98]\tvalidation_0-logloss:0.69575\n",
      "[100]\tvalidation_0-logloss:0.69586\n",
      "[102]\tvalidation_0-logloss:0.69590\n",
      "[104]\tvalidation_0-logloss:0.69595\n",
      "[106]\tvalidation_0-logloss:0.69601\n",
      "[108]\tvalidation_0-logloss:0.69613\n",
      "[110]\tvalidation_0-logloss:0.69608\n",
      "[112]\tvalidation_0-logloss:0.69608\n",
      "[114]\tvalidation_0-logloss:0.69605\n",
      "[116]\tvalidation_0-logloss:0.69595\n",
      "[118]\tvalidation_0-logloss:0.69618\n",
      "[120]\tvalidation_0-logloss:0.69623\n",
      "[122]\tvalidation_0-logloss:0.69651\n",
      "[124]\tvalidation_0-logloss:0.69649\n",
      "[126]\tvalidation_0-logloss:0.69634\n",
      "[128]\tvalidation_0-logloss:0.69636\n",
      "[130]\tvalidation_0-logloss:0.69627\n",
      "[132]\tvalidation_0-logloss:0.69631\n",
      "[134]\tvalidation_0-logloss:0.69638\n",
      "[136]\tvalidation_0-logloss:0.69639\n",
      "[138]\tvalidation_0-logloss:0.69642\n",
      "[140]\tvalidation_0-logloss:0.69643\n",
      "[142]\tvalidation_0-logloss:0.69642\n",
      "[144]\tvalidation_0-logloss:0.69633\n",
      "[146]\tvalidation_0-logloss:0.69619\n",
      "[148]\tvalidation_0-logloss:0.69622\n",
      "[150]\tvalidation_0-logloss:0.69641\n",
      "[152]\tvalidation_0-logloss:0.69643\n",
      "[154]\tvalidation_0-logloss:0.69643\n",
      "[156]\tvalidation_0-logloss:0.69645\n",
      "[158]\tvalidation_0-logloss:0.69660\n",
      "[160]\tvalidation_0-logloss:0.69661\n",
      "[162]\tvalidation_0-logloss:0.69688\n",
      "[164]\tvalidation_0-logloss:0.69706\n",
      "[166]\tvalidation_0-logloss:0.69709\n",
      "[168]\tvalidation_0-logloss:0.69701\n",
      "[170]\tvalidation_0-logloss:0.69706\n",
      "[172]\tvalidation_0-logloss:0.69704\n",
      "[174]\tvalidation_0-logloss:0.69698\n",
      "[176]\tvalidation_0-logloss:0.69704\n",
      "[178]\tvalidation_0-logloss:0.69705\n",
      "[180]\tvalidation_0-logloss:0.69717\n",
      "[182]\tvalidation_0-logloss:0.69723\n",
      "[184]\tvalidation_0-logloss:0.69729\n",
      "[186]\tvalidation_0-logloss:0.69732\n",
      "[188]\tvalidation_0-logloss:0.69739\n",
      "[190]\tvalidation_0-logloss:0.69739\n",
      "[192]\tvalidation_0-logloss:0.69745\n",
      "[194]\tvalidation_0-logloss:0.69761\n",
      "[196]\tvalidation_0-logloss:0.69766\n",
      "[198]\tvalidation_0-logloss:0.69772\n",
      "[200]\tvalidation_0-logloss:0.69776\n",
      "[202]\tvalidation_0-logloss:0.69802\n",
      "[204]\tvalidation_0-logloss:0.69816\n",
      "[206]\tvalidation_0-logloss:0.69823\n",
      "[208]\tvalidation_0-logloss:0.69836\n",
      "[210]\tvalidation_0-logloss:0.69829\n",
      "[212]\tvalidation_0-logloss:0.69832\n",
      "[214]\tvalidation_0-logloss:0.69850\n",
      "[216]\tvalidation_0-logloss:0.69855\n",
      "[218]\tvalidation_0-logloss:0.69851\n",
      "[220]\tvalidation_0-logloss:0.69852\n",
      "[222]\tvalidation_0-logloss:0.69852\n",
      "[224]\tvalidation_0-logloss:0.69878\n",
      "[226]\tvalidation_0-logloss:0.69894\n",
      "[228]\tvalidation_0-logloss:0.69917\n",
      "[230]\tvalidation_0-logloss:0.69920\n",
      "[232]\tvalidation_0-logloss:0.69969\n",
      "[234]\tvalidation_0-logloss:0.69972\n",
      "[236]\tvalidation_0-logloss:0.69978\n",
      "[238]\tvalidation_0-logloss:0.69983\n",
      "[240]\tvalidation_0-logloss:0.69988\n",
      "[242]\tvalidation_0-logloss:0.69989\n",
      "[244]\tvalidation_0-logloss:0.69986\n",
      "[246]\tvalidation_0-logloss:0.70009\n",
      "[248]\tvalidation_0-logloss:0.70018\n",
      "[250]\tvalidation_0-logloss:0.70038\n",
      "[252]\tvalidation_0-logloss:0.70035\n",
      "[254]\tvalidation_0-logloss:0.70069\n",
      "[256]\tvalidation_0-logloss:0.70074\n",
      "[258]\tvalidation_0-logloss:0.70083\n",
      "[260]\tvalidation_0-logloss:0.70082\n",
      "[262]\tvalidation_0-logloss:0.70098\n",
      "[264]\tvalidation_0-logloss:0.70103\n",
      "[266]\tvalidation_0-logloss:0.70114\n",
      "[268]\tvalidation_0-logloss:0.70124\n",
      "[270]\tvalidation_0-logloss:0.70144\n",
      "[272]\tvalidation_0-logloss:0.70159\n",
      "[274]\tvalidation_0-logloss:0.70177\n",
      "[276]\tvalidation_0-logloss:0.70176\n",
      "[278]\tvalidation_0-logloss:0.70176\n",
      "[280]\tvalidation_0-logloss:0.70183\n",
      "[282]\tvalidation_0-logloss:0.70185\n",
      "[284]\tvalidation_0-logloss:0.70180\n",
      "[286]\tvalidation_0-logloss:0.70199\n",
      "[288]\tvalidation_0-logloss:0.70189\n",
      "[290]\tvalidation_0-logloss:0.70199\n",
      "[292]\tvalidation_0-logloss:0.70219\n",
      "[294]\tvalidation_0-logloss:0.70240\n",
      "[296]\tvalidation_0-logloss:0.70259\n",
      "[298]\tvalidation_0-logloss:0.70268\n",
      "[300]\tvalidation_0-logloss:0.70269\n",
      "[302]\tvalidation_0-logloss:0.70270\n",
      "[304]\tvalidation_0-logloss:0.70271\n",
      "[306]\tvalidation_0-logloss:0.70277\n",
      "[308]\tvalidation_0-logloss:0.70288\n",
      "[310]\tvalidation_0-logloss:0.70296\n",
      "[312]\tvalidation_0-logloss:0.70293\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:44:30,828] Trial 90 finished with value: 0.694881524139025 and parameters: {'eta': 0.03084987430273414, 'gamma': 0.4311322285941554, 'max_depth': 6, 'min_child_weight': 2, 'lambda': 0.05120524645241173, 'alpha': 0.039615884640422545}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:44:35] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69532\n",
      "[2]\tvalidation_0-logloss:0.69549\n",
      "[4]\tvalidation_0-logloss:0.69555\n",
      "[6]\tvalidation_0-logloss:0.69555\n",
      "[8]\tvalidation_0-logloss:0.69525\n",
      "[10]\tvalidation_0-logloss:0.69504\n",
      "[12]\tvalidation_0-logloss:0.69476\n",
      "[14]\tvalidation_0-logloss:0.69455\n",
      "[16]\tvalidation_0-logloss:0.69435\n",
      "[18]\tvalidation_0-logloss:0.69435\n",
      "[20]\tvalidation_0-logloss:0.69422\n",
      "[22]\tvalidation_0-logloss:0.69417\n",
      "[24]\tvalidation_0-logloss:0.69410\n",
      "[26]\tvalidation_0-logloss:0.69399\n",
      "[28]\tvalidation_0-logloss:0.69394\n",
      "[30]\tvalidation_0-logloss:0.69389\n",
      "[32]\tvalidation_0-logloss:0.69395\n",
      "[34]\tvalidation_0-logloss:0.69390\n",
      "[36]\tvalidation_0-logloss:0.69359\n",
      "[38]\tvalidation_0-logloss:0.69359\n",
      "[40]\tvalidation_0-logloss:0.69365\n",
      "[42]\tvalidation_0-logloss:0.69364\n",
      "[44]\tvalidation_0-logloss:0.69390\n",
      "[46]\tvalidation_0-logloss:0.69373\n",
      "[48]\tvalidation_0-logloss:0.69376\n",
      "[50]\tvalidation_0-logloss:0.69359\n",
      "[52]\tvalidation_0-logloss:0.69351\n",
      "[54]\tvalidation_0-logloss:0.69341\n",
      "[56]\tvalidation_0-logloss:0.69349\n",
      "[58]\tvalidation_0-logloss:0.69361\n",
      "[60]\tvalidation_0-logloss:0.69383\n",
      "[62]\tvalidation_0-logloss:0.69385\n",
      "[64]\tvalidation_0-logloss:0.69381\n",
      "[66]\tvalidation_0-logloss:0.69384\n",
      "[68]\tvalidation_0-logloss:0.69384\n",
      "[70]\tvalidation_0-logloss:0.69381\n",
      "[72]\tvalidation_0-logloss:0.69396\n",
      "[74]\tvalidation_0-logloss:0.69402\n",
      "[76]\tvalidation_0-logloss:0.69405\n",
      "[78]\tvalidation_0-logloss:0.69401\n",
      "[80]\tvalidation_0-logloss:0.69393\n",
      "[82]\tvalidation_0-logloss:0.69391\n",
      "[84]\tvalidation_0-logloss:0.69396\n",
      "[86]\tvalidation_0-logloss:0.69373\n",
      "[88]\tvalidation_0-logloss:0.69381\n",
      "[90]\tvalidation_0-logloss:0.69393\n",
      "[92]\tvalidation_0-logloss:0.69381\n",
      "[94]\tvalidation_0-logloss:0.69370\n",
      "[96]\tvalidation_0-logloss:0.69381\n",
      "[98]\tvalidation_0-logloss:0.69366\n",
      "[100]\tvalidation_0-logloss:0.69367\n",
      "[102]\tvalidation_0-logloss:0.69367\n",
      "[104]\tvalidation_0-logloss:0.69366\n",
      "[106]\tvalidation_0-logloss:0.69376\n",
      "[108]\tvalidation_0-logloss:0.69368\n",
      "[110]\tvalidation_0-logloss:0.69367\n",
      "[112]\tvalidation_0-logloss:0.69369\n",
      "[114]\tvalidation_0-logloss:0.69368\n",
      "[116]\tvalidation_0-logloss:0.69367\n",
      "[118]\tvalidation_0-logloss:0.69375\n",
      "[120]\tvalidation_0-logloss:0.69376\n",
      "[122]\tvalidation_0-logloss:0.69409\n",
      "[124]\tvalidation_0-logloss:0.69413\n",
      "[126]\tvalidation_0-logloss:0.69417\n",
      "[128]\tvalidation_0-logloss:0.69414\n",
      "[130]\tvalidation_0-logloss:0.69406\n",
      "[132]\tvalidation_0-logloss:0.69404\n",
      "[134]\tvalidation_0-logloss:0.69396\n",
      "[136]\tvalidation_0-logloss:0.69400\n",
      "[138]\tvalidation_0-logloss:0.69402\n",
      "[140]\tvalidation_0-logloss:0.69384\n",
      "[142]\tvalidation_0-logloss:0.69394\n",
      "[144]\tvalidation_0-logloss:0.69394\n",
      "[146]\tvalidation_0-logloss:0.69400\n",
      "[148]\tvalidation_0-logloss:0.69404\n",
      "[150]\tvalidation_0-logloss:0.69417\n",
      "[152]\tvalidation_0-logloss:0.69432\n",
      "[154]\tvalidation_0-logloss:0.69448\n",
      "[156]\tvalidation_0-logloss:0.69454\n",
      "[158]\tvalidation_0-logloss:0.69462\n",
      "[160]\tvalidation_0-logloss:0.69466\n",
      "[162]\tvalidation_0-logloss:0.69477\n",
      "[164]\tvalidation_0-logloss:0.69476\n",
      "[166]\tvalidation_0-logloss:0.69501\n",
      "[168]\tvalidation_0-logloss:0.69496\n",
      "[170]\tvalidation_0-logloss:0.69505\n",
      "[172]\tvalidation_0-logloss:0.69505\n",
      "[174]\tvalidation_0-logloss:0.69526\n",
      "[176]\tvalidation_0-logloss:0.69551\n",
      "[178]\tvalidation_0-logloss:0.69541\n",
      "[180]\tvalidation_0-logloss:0.69543\n",
      "[182]\tvalidation_0-logloss:0.69544\n",
      "[184]\tvalidation_0-logloss:0.69573\n",
      "[186]\tvalidation_0-logloss:0.69577\n",
      "[188]\tvalidation_0-logloss:0.69594\n",
      "[190]\tvalidation_0-logloss:0.69594\n",
      "[192]\tvalidation_0-logloss:0.69596\n",
      "[194]\tvalidation_0-logloss:0.69602\n",
      "[196]\tvalidation_0-logloss:0.69625\n",
      "[198]\tvalidation_0-logloss:0.69612\n",
      "[200]\tvalidation_0-logloss:0.69618\n",
      "[202]\tvalidation_0-logloss:0.69623\n",
      "[204]\tvalidation_0-logloss:0.69622\n",
      "[206]\tvalidation_0-logloss:0.69632\n",
      "[208]\tvalidation_0-logloss:0.69634\n",
      "[210]\tvalidation_0-logloss:0.69632\n",
      "[212]\tvalidation_0-logloss:0.69625\n",
      "[214]\tvalidation_0-logloss:0.69633\n",
      "[216]\tvalidation_0-logloss:0.69635\n",
      "[218]\tvalidation_0-logloss:0.69634\n",
      "[220]\tvalidation_0-logloss:0.69654\n",
      "[222]\tvalidation_0-logloss:0.69657\n",
      "[224]\tvalidation_0-logloss:0.69677\n",
      "[226]\tvalidation_0-logloss:0.69689\n",
      "[228]\tvalidation_0-logloss:0.69685\n",
      "[230]\tvalidation_0-logloss:0.69689\n",
      "[232]\tvalidation_0-logloss:0.69697\n",
      "[234]\tvalidation_0-logloss:0.69700\n",
      "[236]\tvalidation_0-logloss:0.69709\n",
      "[238]\tvalidation_0-logloss:0.69708\n",
      "[240]\tvalidation_0-logloss:0.69715\n",
      "[242]\tvalidation_0-logloss:0.69729\n",
      "[244]\tvalidation_0-logloss:0.69726\n",
      "[246]\tvalidation_0-logloss:0.69722\n",
      "[248]\tvalidation_0-logloss:0.69727\n",
      "[250]\tvalidation_0-logloss:0.69730\n",
      "[252]\tvalidation_0-logloss:0.69745\n",
      "[254]\tvalidation_0-logloss:0.69771\n",
      "[256]\tvalidation_0-logloss:0.69778\n",
      "[258]\tvalidation_0-logloss:0.69781\n",
      "[260]\tvalidation_0-logloss:0.69786\n",
      "[262]\tvalidation_0-logloss:0.69809\n",
      "[264]\tvalidation_0-logloss:0.69805\n",
      "[266]\tvalidation_0-logloss:0.69804\n",
      "[268]\tvalidation_0-logloss:0.69821\n",
      "[270]\tvalidation_0-logloss:0.69828\n",
      "[272]\tvalidation_0-logloss:0.69837\n",
      "[274]\tvalidation_0-logloss:0.69840\n",
      "[276]\tvalidation_0-logloss:0.69846\n",
      "[278]\tvalidation_0-logloss:0.69848\n",
      "[280]\tvalidation_0-logloss:0.69849\n",
      "[282]\tvalidation_0-logloss:0.69868\n",
      "[284]\tvalidation_0-logloss:0.69866\n",
      "[286]\tvalidation_0-logloss:0.69873\n",
      "[288]\tvalidation_0-logloss:0.69889\n",
      "[290]\tvalidation_0-logloss:0.69880\n",
      "[292]\tvalidation_0-logloss:0.69883\n",
      "[294]\tvalidation_0-logloss:0.69900\n",
      "[296]\tvalidation_0-logloss:0.69899\n",
      "[298]\tvalidation_0-logloss:0.69902\n",
      "[300]\tvalidation_0-logloss:0.69924\n",
      "[302]\tvalidation_0-logloss:0.69922\n",
      "[304]\tvalidation_0-logloss:0.69926\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:46:04,843] Trial 91 finished with value: 0.6934146940954405 and parameters: {'eta': 0.03644861305979777, 'gamma': 0.5444244229499078, 'max_depth': 5, 'min_child_weight': 2, 'lambda': 0.04070413016100542, 'alpha': 0.14292044314296817}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:46:09] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69532\n",
      "[2]\tvalidation_0-logloss:0.69548\n",
      "[4]\tvalidation_0-logloss:0.69554\n",
      "[6]\tvalidation_0-logloss:0.69553\n",
      "[8]\tvalidation_0-logloss:0.69524\n",
      "[10]\tvalidation_0-logloss:0.69503\n",
      "[12]\tvalidation_0-logloss:0.69489\n",
      "[14]\tvalidation_0-logloss:0.69470\n",
      "[16]\tvalidation_0-logloss:0.69450\n",
      "[18]\tvalidation_0-logloss:0.69455\n",
      "[20]\tvalidation_0-logloss:0.69439\n",
      "[22]\tvalidation_0-logloss:0.69433\n",
      "[24]\tvalidation_0-logloss:0.69426\n",
      "[26]\tvalidation_0-logloss:0.69426\n",
      "[28]\tvalidation_0-logloss:0.69400\n",
      "[30]\tvalidation_0-logloss:0.69399\n",
      "[32]\tvalidation_0-logloss:0.69403\n",
      "[34]\tvalidation_0-logloss:0.69404\n",
      "[36]\tvalidation_0-logloss:0.69403\n",
      "[38]\tvalidation_0-logloss:0.69373\n",
      "[40]\tvalidation_0-logloss:0.69378\n",
      "[42]\tvalidation_0-logloss:0.69375\n",
      "[44]\tvalidation_0-logloss:0.69393\n",
      "[46]\tvalidation_0-logloss:0.69392\n",
      "[48]\tvalidation_0-logloss:0.69389\n",
      "[50]\tvalidation_0-logloss:0.69399\n",
      "[52]\tvalidation_0-logloss:0.69408\n",
      "[54]\tvalidation_0-logloss:0.69410\n",
      "[56]\tvalidation_0-logloss:0.69418\n",
      "[58]\tvalidation_0-logloss:0.69429\n",
      "[60]\tvalidation_0-logloss:0.69431\n",
      "[62]\tvalidation_0-logloss:0.69432\n",
      "[64]\tvalidation_0-logloss:0.69439\n",
      "[66]\tvalidation_0-logloss:0.69434\n",
      "[68]\tvalidation_0-logloss:0.69454\n",
      "[70]\tvalidation_0-logloss:0.69458\n",
      "[72]\tvalidation_0-logloss:0.69472\n",
      "[74]\tvalidation_0-logloss:0.69468\n",
      "[76]\tvalidation_0-logloss:0.69467\n",
      "[78]\tvalidation_0-logloss:0.69462\n",
      "[80]\tvalidation_0-logloss:0.69464\n",
      "[82]\tvalidation_0-logloss:0.69466\n",
      "[84]\tvalidation_0-logloss:0.69471\n",
      "[86]\tvalidation_0-logloss:0.69463\n",
      "[88]\tvalidation_0-logloss:0.69492\n",
      "[90]\tvalidation_0-logloss:0.69482\n",
      "[92]\tvalidation_0-logloss:0.69490\n",
      "[94]\tvalidation_0-logloss:0.69489\n",
      "[96]\tvalidation_0-logloss:0.69478\n",
      "[98]\tvalidation_0-logloss:0.69478\n",
      "[100]\tvalidation_0-logloss:0.69486\n",
      "[102]\tvalidation_0-logloss:0.69482\n",
      "[104]\tvalidation_0-logloss:0.69488\n",
      "[106]\tvalidation_0-logloss:0.69482\n",
      "[108]\tvalidation_0-logloss:0.69482\n",
      "[110]\tvalidation_0-logloss:0.69482\n",
      "[112]\tvalidation_0-logloss:0.69470\n",
      "[114]\tvalidation_0-logloss:0.69466\n",
      "[116]\tvalidation_0-logloss:0.69467\n",
      "[118]\tvalidation_0-logloss:0.69471\n",
      "[120]\tvalidation_0-logloss:0.69480\n",
      "[122]\tvalidation_0-logloss:0.69473\n",
      "[124]\tvalidation_0-logloss:0.69492\n",
      "[126]\tvalidation_0-logloss:0.69493\n",
      "[128]\tvalidation_0-logloss:0.69494\n",
      "[130]\tvalidation_0-logloss:0.69484\n",
      "[132]\tvalidation_0-logloss:0.69484\n",
      "[134]\tvalidation_0-logloss:0.69495\n",
      "[136]\tvalidation_0-logloss:0.69500\n",
      "[138]\tvalidation_0-logloss:0.69495\n",
      "[140]\tvalidation_0-logloss:0.69494\n",
      "[142]\tvalidation_0-logloss:0.69492\n",
      "[144]\tvalidation_0-logloss:0.69492\n",
      "[146]\tvalidation_0-logloss:0.69490\n",
      "[148]\tvalidation_0-logloss:0.69482\n",
      "[150]\tvalidation_0-logloss:0.69483\n",
      "[152]\tvalidation_0-logloss:0.69486\n",
      "[154]\tvalidation_0-logloss:0.69479\n",
      "[156]\tvalidation_0-logloss:0.69478\n",
      "[158]\tvalidation_0-logloss:0.69478\n",
      "[160]\tvalidation_0-logloss:0.69468\n",
      "[162]\tvalidation_0-logloss:0.69477\n",
      "[164]\tvalidation_0-logloss:0.69487\n",
      "[166]\tvalidation_0-logloss:0.69493\n",
      "[168]\tvalidation_0-logloss:0.69493\n",
      "[170]\tvalidation_0-logloss:0.69504\n",
      "[172]\tvalidation_0-logloss:0.69509\n",
      "[174]\tvalidation_0-logloss:0.69504\n",
      "[176]\tvalidation_0-logloss:0.69501\n",
      "[178]\tvalidation_0-logloss:0.69504\n",
      "[180]\tvalidation_0-logloss:0.69496\n",
      "[182]\tvalidation_0-logloss:0.69491\n",
      "[184]\tvalidation_0-logloss:0.69489\n",
      "[186]\tvalidation_0-logloss:0.69489\n",
      "[188]\tvalidation_0-logloss:0.69488\n",
      "[190]\tvalidation_0-logloss:0.69509\n",
      "[192]\tvalidation_0-logloss:0.69517\n",
      "[194]\tvalidation_0-logloss:0.69528\n",
      "[196]\tvalidation_0-logloss:0.69525\n",
      "[198]\tvalidation_0-logloss:0.69525\n",
      "[200]\tvalidation_0-logloss:0.69535\n",
      "[202]\tvalidation_0-logloss:0.69547\n",
      "[204]\tvalidation_0-logloss:0.69563\n",
      "[206]\tvalidation_0-logloss:0.69580\n",
      "[208]\tvalidation_0-logloss:0.69590\n",
      "[210]\tvalidation_0-logloss:0.69588\n",
      "[212]\tvalidation_0-logloss:0.69588\n",
      "[214]\tvalidation_0-logloss:0.69589\n",
      "[216]\tvalidation_0-logloss:0.69595\n",
      "[218]\tvalidation_0-logloss:0.69609\n",
      "[220]\tvalidation_0-logloss:0.69611\n",
      "[222]\tvalidation_0-logloss:0.69620\n",
      "[224]\tvalidation_0-logloss:0.69658\n",
      "[226]\tvalidation_0-logloss:0.69656\n",
      "[228]\tvalidation_0-logloss:0.69664\n",
      "[230]\tvalidation_0-logloss:0.69666\n",
      "[232]\tvalidation_0-logloss:0.69661\n",
      "[234]\tvalidation_0-logloss:0.69659\n",
      "[236]\tvalidation_0-logloss:0.69663\n",
      "[238]\tvalidation_0-logloss:0.69662\n",
      "[240]\tvalidation_0-logloss:0.69672\n",
      "[242]\tvalidation_0-logloss:0.69671\n",
      "[244]\tvalidation_0-logloss:0.69672\n",
      "[246]\tvalidation_0-logloss:0.69672\n",
      "[248]\tvalidation_0-logloss:0.69668\n",
      "[250]\tvalidation_0-logloss:0.69675\n",
      "[252]\tvalidation_0-logloss:0.69683\n",
      "[254]\tvalidation_0-logloss:0.69695\n",
      "[256]\tvalidation_0-logloss:0.69704\n",
      "[258]\tvalidation_0-logloss:0.69737\n",
      "[260]\tvalidation_0-logloss:0.69741\n",
      "[262]\tvalidation_0-logloss:0.69746\n",
      "[264]\tvalidation_0-logloss:0.69754\n",
      "[266]\tvalidation_0-logloss:0.69775\n",
      "[268]\tvalidation_0-logloss:0.69788\n",
      "[270]\tvalidation_0-logloss:0.69802\n",
      "[272]\tvalidation_0-logloss:0.69812\n",
      "[274]\tvalidation_0-logloss:0.69812\n",
      "[276]\tvalidation_0-logloss:0.69813\n",
      "[278]\tvalidation_0-logloss:0.69825\n",
      "[280]\tvalidation_0-logloss:0.69832\n",
      "[282]\tvalidation_0-logloss:0.69843\n",
      "[284]\tvalidation_0-logloss:0.69845\n",
      "[286]\tvalidation_0-logloss:0.69849\n",
      "[288]\tvalidation_0-logloss:0.69846\n",
      "[289]\tvalidation_0-logloss:0.69860\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:47:35,138] Trial 92 finished with value: 0.693698490176086 and parameters: {'eta': 0.03580676379484358, 'gamma': 0.5010445595350211, 'max_depth': 5, 'min_child_weight': 2, 'lambda': 0.033575428481648524, 'alpha': 0.14824916035177427}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:47:39] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69530\n",
      "[2]\tvalidation_0-logloss:0.69538\n",
      "[4]\tvalidation_0-logloss:0.69559\n",
      "[6]\tvalidation_0-logloss:0.69569\n",
      "[8]\tvalidation_0-logloss:0.69568\n",
      "[10]\tvalidation_0-logloss:0.69546\n",
      "[12]\tvalidation_0-logloss:0.69533\n",
      "[14]\tvalidation_0-logloss:0.69520\n",
      "[16]\tvalidation_0-logloss:0.69510\n",
      "[18]\tvalidation_0-logloss:0.69495\n",
      "[20]\tvalidation_0-logloss:0.69489\n",
      "[22]\tvalidation_0-logloss:0.69490\n",
      "[24]\tvalidation_0-logloss:0.69488\n",
      "[26]\tvalidation_0-logloss:0.69497\n",
      "[28]\tvalidation_0-logloss:0.69496\n",
      "[30]\tvalidation_0-logloss:0.69502\n",
      "[32]\tvalidation_0-logloss:0.69513\n",
      "[34]\tvalidation_0-logloss:0.69510\n",
      "[36]\tvalidation_0-logloss:0.69498\n",
      "[38]\tvalidation_0-logloss:0.69505\n",
      "[40]\tvalidation_0-logloss:0.69502\n",
      "[42]\tvalidation_0-logloss:0.69505\n",
      "[44]\tvalidation_0-logloss:0.69489\n",
      "[46]\tvalidation_0-logloss:0.69488\n",
      "[48]\tvalidation_0-logloss:0.69473\n",
      "[50]\tvalidation_0-logloss:0.69465\n",
      "[52]\tvalidation_0-logloss:0.69460\n",
      "[54]\tvalidation_0-logloss:0.69466\n",
      "[56]\tvalidation_0-logloss:0.69468\n",
      "[58]\tvalidation_0-logloss:0.69468\n",
      "[60]\tvalidation_0-logloss:0.69470\n",
      "[62]\tvalidation_0-logloss:0.69474\n",
      "[64]\tvalidation_0-logloss:0.69481\n",
      "[66]\tvalidation_0-logloss:0.69471\n",
      "[68]\tvalidation_0-logloss:0.69472\n",
      "[70]\tvalidation_0-logloss:0.69475\n",
      "[72]\tvalidation_0-logloss:0.69470\n",
      "[74]\tvalidation_0-logloss:0.69486\n",
      "[76]\tvalidation_0-logloss:0.69484\n",
      "[78]\tvalidation_0-logloss:0.69480\n",
      "[80]\tvalidation_0-logloss:0.69487\n",
      "[82]\tvalidation_0-logloss:0.69491\n",
      "[84]\tvalidation_0-logloss:0.69492\n",
      "[86]\tvalidation_0-logloss:0.69510\n",
      "[88]\tvalidation_0-logloss:0.69515\n",
      "[90]\tvalidation_0-logloss:0.69512\n",
      "[92]\tvalidation_0-logloss:0.69514\n",
      "[94]\tvalidation_0-logloss:0.69508\n",
      "[96]\tvalidation_0-logloss:0.69506\n",
      "[98]\tvalidation_0-logloss:0.69498\n",
      "[100]\tvalidation_0-logloss:0.69504\n",
      "[102]\tvalidation_0-logloss:0.69517\n",
      "[104]\tvalidation_0-logloss:0.69519\n",
      "[106]\tvalidation_0-logloss:0.69515\n",
      "[108]\tvalidation_0-logloss:0.69508\n",
      "[110]\tvalidation_0-logloss:0.69504\n",
      "[112]\tvalidation_0-logloss:0.69495\n",
      "[114]\tvalidation_0-logloss:0.69496\n",
      "[116]\tvalidation_0-logloss:0.69494\n",
      "[118]\tvalidation_0-logloss:0.69487\n",
      "[120]\tvalidation_0-logloss:0.69488\n",
      "[122]\tvalidation_0-logloss:0.69490\n",
      "[124]\tvalidation_0-logloss:0.69487\n",
      "[126]\tvalidation_0-logloss:0.69493\n",
      "[128]\tvalidation_0-logloss:0.69490\n",
      "[130]\tvalidation_0-logloss:0.69488\n",
      "[132]\tvalidation_0-logloss:0.69491\n",
      "[134]\tvalidation_0-logloss:0.69499\n",
      "[136]\tvalidation_0-logloss:0.69489\n",
      "[138]\tvalidation_0-logloss:0.69489\n",
      "[140]\tvalidation_0-logloss:0.69490\n",
      "[142]\tvalidation_0-logloss:0.69489\n",
      "[144]\tvalidation_0-logloss:0.69500\n",
      "[146]\tvalidation_0-logloss:0.69500\n",
      "[148]\tvalidation_0-logloss:0.69508\n",
      "[150]\tvalidation_0-logloss:0.69513\n",
      "[152]\tvalidation_0-logloss:0.69516\n",
      "[154]\tvalidation_0-logloss:0.69518\n",
      "[156]\tvalidation_0-logloss:0.69522\n",
      "[158]\tvalidation_0-logloss:0.69519\n",
      "[160]\tvalidation_0-logloss:0.69525\n",
      "[162]\tvalidation_0-logloss:0.69528\n",
      "[164]\tvalidation_0-logloss:0.69521\n",
      "[166]\tvalidation_0-logloss:0.69519\n",
      "[168]\tvalidation_0-logloss:0.69528\n",
      "[170]\tvalidation_0-logloss:0.69523\n",
      "[172]\tvalidation_0-logloss:0.69528\n",
      "[174]\tvalidation_0-logloss:0.69534\n",
      "[176]\tvalidation_0-logloss:0.69537\n",
      "[178]\tvalidation_0-logloss:0.69536\n",
      "[180]\tvalidation_0-logloss:0.69540\n",
      "[182]\tvalidation_0-logloss:0.69540\n",
      "[184]\tvalidation_0-logloss:0.69555\n",
      "[186]\tvalidation_0-logloss:0.69558\n",
      "[188]\tvalidation_0-logloss:0.69558\n",
      "[190]\tvalidation_0-logloss:0.69553\n",
      "[192]\tvalidation_0-logloss:0.69551\n",
      "[194]\tvalidation_0-logloss:0.69554\n",
      "[196]\tvalidation_0-logloss:0.69575\n",
      "[198]\tvalidation_0-logloss:0.69568\n",
      "[200]\tvalidation_0-logloss:0.69567\n",
      "[202]\tvalidation_0-logloss:0.69571\n",
      "[204]\tvalidation_0-logloss:0.69567\n",
      "[206]\tvalidation_0-logloss:0.69566\n",
      "[208]\tvalidation_0-logloss:0.69562\n",
      "[210]\tvalidation_0-logloss:0.69564\n",
      "[212]\tvalidation_0-logloss:0.69559\n",
      "[214]\tvalidation_0-logloss:0.69561\n",
      "[216]\tvalidation_0-logloss:0.69552\n",
      "[218]\tvalidation_0-logloss:0.69551\n",
      "[220]\tvalidation_0-logloss:0.69553\n",
      "[222]\tvalidation_0-logloss:0.69550\n",
      "[224]\tvalidation_0-logloss:0.69549\n",
      "[226]\tvalidation_0-logloss:0.69544\n",
      "[228]\tvalidation_0-logloss:0.69550\n",
      "[230]\tvalidation_0-logloss:0.69559\n",
      "[232]\tvalidation_0-logloss:0.69549\n",
      "[234]\tvalidation_0-logloss:0.69549\n",
      "[236]\tvalidation_0-logloss:0.69559\n",
      "[238]\tvalidation_0-logloss:0.69574\n",
      "[240]\tvalidation_0-logloss:0.69569\n",
      "[242]\tvalidation_0-logloss:0.69574\n",
      "[244]\tvalidation_0-logloss:0.69590\n",
      "[246]\tvalidation_0-logloss:0.69597\n",
      "[248]\tvalidation_0-logloss:0.69606\n",
      "[250]\tvalidation_0-logloss:0.69612\n",
      "[252]\tvalidation_0-logloss:0.69612\n",
      "[254]\tvalidation_0-logloss:0.69622\n",
      "[256]\tvalidation_0-logloss:0.69623\n",
      "[258]\tvalidation_0-logloss:0.69627\n",
      "[260]\tvalidation_0-logloss:0.69636\n",
      "[262]\tvalidation_0-logloss:0.69631\n",
      "[264]\tvalidation_0-logloss:0.69640\n",
      "[266]\tvalidation_0-logloss:0.69634\n",
      "[268]\tvalidation_0-logloss:0.69632\n",
      "[270]\tvalidation_0-logloss:0.69640\n",
      "[272]\tvalidation_0-logloss:0.69647\n",
      "[274]\tvalidation_0-logloss:0.69644\n",
      "[276]\tvalidation_0-logloss:0.69646\n",
      "[278]\tvalidation_0-logloss:0.69648\n",
      "[280]\tvalidation_0-logloss:0.69653\n",
      "[282]\tvalidation_0-logloss:0.69651\n",
      "[284]\tvalidation_0-logloss:0.69663\n",
      "[286]\tvalidation_0-logloss:0.69674\n",
      "[288]\tvalidation_0-logloss:0.69676\n",
      "[290]\tvalidation_0-logloss:0.69684\n",
      "[292]\tvalidation_0-logloss:0.69690\n",
      "[294]\tvalidation_0-logloss:0.69691\n",
      "[296]\tvalidation_0-logloss:0.69697\n",
      "[298]\tvalidation_0-logloss:0.69699\n",
      "[300]\tvalidation_0-logloss:0.69695\n",
      "[302]\tvalidation_0-logloss:0.69712\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:49:10,166] Trial 93 finished with value: 0.6945961927118619 and parameters: {'eta': 0.026205123804847442, 'gamma': 0.5003785268168466, 'max_depth': 5, 'min_child_weight': 1, 'lambda': 0.09393749130275642, 'alpha': 0.19690708240269847}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:49:14] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69532\n",
      "[2]\tvalidation_0-logloss:0.69548\n",
      "[4]\tvalidation_0-logloss:0.69554\n",
      "[6]\tvalidation_0-logloss:0.69554\n",
      "[8]\tvalidation_0-logloss:0.69524\n",
      "[10]\tvalidation_0-logloss:0.69503\n",
      "[12]\tvalidation_0-logloss:0.69489\n",
      "[14]\tvalidation_0-logloss:0.69470\n",
      "[16]\tvalidation_0-logloss:0.69450\n",
      "[18]\tvalidation_0-logloss:0.69455\n",
      "[20]\tvalidation_0-logloss:0.69439\n",
      "[22]\tvalidation_0-logloss:0.69433\n",
      "[24]\tvalidation_0-logloss:0.69425\n",
      "[26]\tvalidation_0-logloss:0.69431\n",
      "[28]\tvalidation_0-logloss:0.69399\n",
      "[30]\tvalidation_0-logloss:0.69393\n",
      "[32]\tvalidation_0-logloss:0.69395\n",
      "[34]\tvalidation_0-logloss:0.69389\n",
      "[36]\tvalidation_0-logloss:0.69370\n",
      "[38]\tvalidation_0-logloss:0.69372\n",
      "[40]\tvalidation_0-logloss:0.69378\n",
      "[42]\tvalidation_0-logloss:0.69383\n",
      "[44]\tvalidation_0-logloss:0.69382\n",
      "[46]\tvalidation_0-logloss:0.69373\n",
      "[48]\tvalidation_0-logloss:0.69365\n",
      "[50]\tvalidation_0-logloss:0.69354\n",
      "[52]\tvalidation_0-logloss:0.69366\n",
      "[54]\tvalidation_0-logloss:0.69371\n",
      "[56]\tvalidation_0-logloss:0.69385\n",
      "[58]\tvalidation_0-logloss:0.69393\n",
      "[60]\tvalidation_0-logloss:0.69399\n",
      "[62]\tvalidation_0-logloss:0.69422\n",
      "[64]\tvalidation_0-logloss:0.69434\n",
      "[66]\tvalidation_0-logloss:0.69424\n",
      "[68]\tvalidation_0-logloss:0.69424\n",
      "[70]\tvalidation_0-logloss:0.69423\n",
      "[72]\tvalidation_0-logloss:0.69438\n",
      "[74]\tvalidation_0-logloss:0.69439\n",
      "[76]\tvalidation_0-logloss:0.69434\n",
      "[78]\tvalidation_0-logloss:0.69429\n",
      "[80]\tvalidation_0-logloss:0.69436\n",
      "[82]\tvalidation_0-logloss:0.69426\n",
      "[84]\tvalidation_0-logloss:0.69412\n",
      "[86]\tvalidation_0-logloss:0.69411\n",
      "[88]\tvalidation_0-logloss:0.69409\n",
      "[90]\tvalidation_0-logloss:0.69413\n",
      "[92]\tvalidation_0-logloss:0.69418\n",
      "[94]\tvalidation_0-logloss:0.69417\n",
      "[96]\tvalidation_0-logloss:0.69421\n",
      "[98]\tvalidation_0-logloss:0.69424\n",
      "[100]\tvalidation_0-logloss:0.69428\n",
      "[102]\tvalidation_0-logloss:0.69423\n",
      "[104]\tvalidation_0-logloss:0.69424\n",
      "[106]\tvalidation_0-logloss:0.69427\n",
      "[108]\tvalidation_0-logloss:0.69414\n",
      "[110]\tvalidation_0-logloss:0.69418\n",
      "[112]\tvalidation_0-logloss:0.69419\n",
      "[114]\tvalidation_0-logloss:0.69441\n",
      "[116]\tvalidation_0-logloss:0.69452\n",
      "[118]\tvalidation_0-logloss:0.69456\n",
      "[120]\tvalidation_0-logloss:0.69455\n",
      "[122]\tvalidation_0-logloss:0.69455\n",
      "[124]\tvalidation_0-logloss:0.69451\n",
      "[126]\tvalidation_0-logloss:0.69455\n",
      "[128]\tvalidation_0-logloss:0.69454\n",
      "[130]\tvalidation_0-logloss:0.69456\n",
      "[132]\tvalidation_0-logloss:0.69454\n",
      "[134]\tvalidation_0-logloss:0.69450\n",
      "[136]\tvalidation_0-logloss:0.69460\n",
      "[138]\tvalidation_0-logloss:0.69456\n",
      "[140]\tvalidation_0-logloss:0.69461\n",
      "[142]\tvalidation_0-logloss:0.69466\n",
      "[144]\tvalidation_0-logloss:0.69465\n",
      "[146]\tvalidation_0-logloss:0.69466\n",
      "[148]\tvalidation_0-logloss:0.69462\n",
      "[150]\tvalidation_0-logloss:0.69461\n",
      "[152]\tvalidation_0-logloss:0.69456\n",
      "[154]\tvalidation_0-logloss:0.69460\n",
      "[156]\tvalidation_0-logloss:0.69464\n",
      "[158]\tvalidation_0-logloss:0.69459\n",
      "[160]\tvalidation_0-logloss:0.69463\n",
      "[162]\tvalidation_0-logloss:0.69460\n",
      "[164]\tvalidation_0-logloss:0.69458\n",
      "[166]\tvalidation_0-logloss:0.69463\n",
      "[168]\tvalidation_0-logloss:0.69465\n",
      "[170]\tvalidation_0-logloss:0.69469\n",
      "[172]\tvalidation_0-logloss:0.69471\n",
      "[174]\tvalidation_0-logloss:0.69475\n",
      "[176]\tvalidation_0-logloss:0.69474\n",
      "[178]\tvalidation_0-logloss:0.69471\n",
      "[180]\tvalidation_0-logloss:0.69482\n",
      "[182]\tvalidation_0-logloss:0.69496\n",
      "[184]\tvalidation_0-logloss:0.69494\n",
      "[186]\tvalidation_0-logloss:0.69495\n",
      "[188]\tvalidation_0-logloss:0.69510\n",
      "[190]\tvalidation_0-logloss:0.69520\n",
      "[192]\tvalidation_0-logloss:0.69523\n",
      "[194]\tvalidation_0-logloss:0.69521\n",
      "[196]\tvalidation_0-logloss:0.69519\n",
      "[198]\tvalidation_0-logloss:0.69517\n",
      "[200]\tvalidation_0-logloss:0.69514\n",
      "[202]\tvalidation_0-logloss:0.69513\n",
      "[204]\tvalidation_0-logloss:0.69524\n",
      "[206]\tvalidation_0-logloss:0.69522\n",
      "[208]\tvalidation_0-logloss:0.69532\n",
      "[210]\tvalidation_0-logloss:0.69543\n",
      "[212]\tvalidation_0-logloss:0.69544\n",
      "[214]\tvalidation_0-logloss:0.69549\n",
      "[216]\tvalidation_0-logloss:0.69553\n",
      "[218]\tvalidation_0-logloss:0.69562\n",
      "[220]\tvalidation_0-logloss:0.69564\n",
      "[222]\tvalidation_0-logloss:0.69565\n",
      "[224]\tvalidation_0-logloss:0.69570\n",
      "[226]\tvalidation_0-logloss:0.69566\n",
      "[228]\tvalidation_0-logloss:0.69589\n",
      "[230]\tvalidation_0-logloss:0.69599\n",
      "[232]\tvalidation_0-logloss:0.69608\n",
      "[234]\tvalidation_0-logloss:0.69606\n",
      "[236]\tvalidation_0-logloss:0.69636\n",
      "[238]\tvalidation_0-logloss:0.69647\n",
      "[240]\tvalidation_0-logloss:0.69663\n",
      "[242]\tvalidation_0-logloss:0.69667\n",
      "[244]\tvalidation_0-logloss:0.69682\n",
      "[246]\tvalidation_0-logloss:0.69692\n",
      "[248]\tvalidation_0-logloss:0.69689\n",
      "[250]\tvalidation_0-logloss:0.69702\n",
      "[252]\tvalidation_0-logloss:0.69704\n",
      "[254]\tvalidation_0-logloss:0.69704\n",
      "[256]\tvalidation_0-logloss:0.69712\n",
      "[258]\tvalidation_0-logloss:0.69723\n",
      "[260]\tvalidation_0-logloss:0.69742\n",
      "[262]\tvalidation_0-logloss:0.69772\n",
      "[264]\tvalidation_0-logloss:0.69794\n",
      "[266]\tvalidation_0-logloss:0.69803\n",
      "[268]\tvalidation_0-logloss:0.69813\n",
      "[270]\tvalidation_0-logloss:0.69821\n",
      "[272]\tvalidation_0-logloss:0.69847\n",
      "[274]\tvalidation_0-logloss:0.69846\n",
      "[276]\tvalidation_0-logloss:0.69865\n",
      "[278]\tvalidation_0-logloss:0.69887\n",
      "[280]\tvalidation_0-logloss:0.69880\n",
      "[282]\tvalidation_0-logloss:0.69874\n",
      "[284]\tvalidation_0-logloss:0.69871\n",
      "[286]\tvalidation_0-logloss:0.69886\n",
      "[288]\tvalidation_0-logloss:0.69879\n",
      "[290]\tvalidation_0-logloss:0.69900\n",
      "[292]\tvalidation_0-logloss:0.69912\n",
      "[294]\tvalidation_0-logloss:0.69914\n",
      "[296]\tvalidation_0-logloss:0.69918\n",
      "[298]\tvalidation_0-logloss:0.69916\n",
      "[299]\tvalidation_0-logloss:0.69917\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:50:44,062] Trial 94 finished with value: 0.693540866944391 and parameters: {'eta': 0.035956531071376155, 'gamma': 0.5960479249228643, 'max_depth': 5, 'min_child_weight': 2, 'lambda': 0.027324220632301034, 'alpha': 0.15707253307605124}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:50:48] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69532\n",
      "[2]\tvalidation_0-logloss:0.69549\n",
      "[4]\tvalidation_0-logloss:0.69556\n",
      "[6]\tvalidation_0-logloss:0.69555\n",
      "[8]\tvalidation_0-logloss:0.69526\n",
      "[10]\tvalidation_0-logloss:0.69497\n",
      "[12]\tvalidation_0-logloss:0.69478\n",
      "[14]\tvalidation_0-logloss:0.69460\n",
      "[16]\tvalidation_0-logloss:0.69452\n",
      "[18]\tvalidation_0-logloss:0.69435\n",
      "[20]\tvalidation_0-logloss:0.69435\n",
      "[22]\tvalidation_0-logloss:0.69420\n",
      "[24]\tvalidation_0-logloss:0.69418\n",
      "[26]\tvalidation_0-logloss:0.69407\n",
      "[28]\tvalidation_0-logloss:0.69407\n",
      "[30]\tvalidation_0-logloss:0.69415\n",
      "[32]\tvalidation_0-logloss:0.69405\n",
      "[34]\tvalidation_0-logloss:0.69400\n",
      "[36]\tvalidation_0-logloss:0.69401\n",
      "[38]\tvalidation_0-logloss:0.69404\n",
      "[40]\tvalidation_0-logloss:0.69406\n",
      "[42]\tvalidation_0-logloss:0.69403\n",
      "[44]\tvalidation_0-logloss:0.69387\n",
      "[46]\tvalidation_0-logloss:0.69388\n",
      "[48]\tvalidation_0-logloss:0.69413\n",
      "[50]\tvalidation_0-logloss:0.69406\n",
      "[52]\tvalidation_0-logloss:0.69394\n",
      "[54]\tvalidation_0-logloss:0.69399\n",
      "[56]\tvalidation_0-logloss:0.69395\n",
      "[58]\tvalidation_0-logloss:0.69411\n",
      "[60]\tvalidation_0-logloss:0.69414\n",
      "[62]\tvalidation_0-logloss:0.69417\n",
      "[64]\tvalidation_0-logloss:0.69417\n",
      "[66]\tvalidation_0-logloss:0.69421\n",
      "[68]\tvalidation_0-logloss:0.69422\n",
      "[70]\tvalidation_0-logloss:0.69427\n",
      "[72]\tvalidation_0-logloss:0.69427\n",
      "[74]\tvalidation_0-logloss:0.69432\n",
      "[76]\tvalidation_0-logloss:0.69439\n",
      "[78]\tvalidation_0-logloss:0.69432\n",
      "[80]\tvalidation_0-logloss:0.69430\n",
      "[82]\tvalidation_0-logloss:0.69429\n",
      "[84]\tvalidation_0-logloss:0.69437\n",
      "[86]\tvalidation_0-logloss:0.69446\n",
      "[88]\tvalidation_0-logloss:0.69452\n",
      "[90]\tvalidation_0-logloss:0.69448\n",
      "[92]\tvalidation_0-logloss:0.69441\n",
      "[94]\tvalidation_0-logloss:0.69438\n",
      "[96]\tvalidation_0-logloss:0.69427\n",
      "[98]\tvalidation_0-logloss:0.69424\n",
      "[100]\tvalidation_0-logloss:0.69424\n",
      "[102]\tvalidation_0-logloss:0.69420\n",
      "[104]\tvalidation_0-logloss:0.69431\n",
      "[106]\tvalidation_0-logloss:0.69429\n",
      "[108]\tvalidation_0-logloss:0.69438\n",
      "[110]\tvalidation_0-logloss:0.69434\n",
      "[112]\tvalidation_0-logloss:0.69438\n",
      "[114]\tvalidation_0-logloss:0.69441\n",
      "[116]\tvalidation_0-logloss:0.69442\n",
      "[118]\tvalidation_0-logloss:0.69447\n",
      "[120]\tvalidation_0-logloss:0.69448\n",
      "[122]\tvalidation_0-logloss:0.69455\n",
      "[124]\tvalidation_0-logloss:0.69463\n",
      "[126]\tvalidation_0-logloss:0.69478\n",
      "[128]\tvalidation_0-logloss:0.69475\n",
      "[130]\tvalidation_0-logloss:0.69479\n",
      "[132]\tvalidation_0-logloss:0.69477\n",
      "[134]\tvalidation_0-logloss:0.69470\n",
      "[136]\tvalidation_0-logloss:0.69473\n",
      "[138]\tvalidation_0-logloss:0.69470\n",
      "[140]\tvalidation_0-logloss:0.69476\n",
      "[142]\tvalidation_0-logloss:0.69476\n",
      "[144]\tvalidation_0-logloss:0.69475\n",
      "[146]\tvalidation_0-logloss:0.69480\n",
      "[148]\tvalidation_0-logloss:0.69473\n",
      "[150]\tvalidation_0-logloss:0.69469\n",
      "[152]\tvalidation_0-logloss:0.69461\n",
      "[154]\tvalidation_0-logloss:0.69477\n",
      "[156]\tvalidation_0-logloss:0.69482\n",
      "[158]\tvalidation_0-logloss:0.69479\n",
      "[160]\tvalidation_0-logloss:0.69490\n",
      "[162]\tvalidation_0-logloss:0.69503\n",
      "[164]\tvalidation_0-logloss:0.69505\n",
      "[166]\tvalidation_0-logloss:0.69511\n",
      "[168]\tvalidation_0-logloss:0.69518\n",
      "[170]\tvalidation_0-logloss:0.69524\n",
      "[172]\tvalidation_0-logloss:0.69507\n",
      "[174]\tvalidation_0-logloss:0.69515\n",
      "[176]\tvalidation_0-logloss:0.69509\n",
      "[178]\tvalidation_0-logloss:0.69508\n",
      "[180]\tvalidation_0-logloss:0.69507\n",
      "[182]\tvalidation_0-logloss:0.69527\n",
      "[184]\tvalidation_0-logloss:0.69526\n",
      "[186]\tvalidation_0-logloss:0.69524\n",
      "[188]\tvalidation_0-logloss:0.69533\n",
      "[190]\tvalidation_0-logloss:0.69534\n",
      "[192]\tvalidation_0-logloss:0.69536\n",
      "[194]\tvalidation_0-logloss:0.69552\n",
      "[196]\tvalidation_0-logloss:0.69552\n",
      "[198]\tvalidation_0-logloss:0.69565\n",
      "[200]\tvalidation_0-logloss:0.69572\n",
      "[202]\tvalidation_0-logloss:0.69573\n",
      "[204]\tvalidation_0-logloss:0.69595\n",
      "[206]\tvalidation_0-logloss:0.69598\n",
      "[208]\tvalidation_0-logloss:0.69614\n",
      "[210]\tvalidation_0-logloss:0.69616\n",
      "[212]\tvalidation_0-logloss:0.69627\n",
      "[214]\tvalidation_0-logloss:0.69635\n",
      "[216]\tvalidation_0-logloss:0.69642\n",
      "[218]\tvalidation_0-logloss:0.69659\n",
      "[220]\tvalidation_0-logloss:0.69678\n",
      "[222]\tvalidation_0-logloss:0.69669\n",
      "[224]\tvalidation_0-logloss:0.69686\n",
      "[226]\tvalidation_0-logloss:0.69688\n",
      "[228]\tvalidation_0-logloss:0.69706\n",
      "[230]\tvalidation_0-logloss:0.69715\n",
      "[232]\tvalidation_0-logloss:0.69719\n",
      "[234]\tvalidation_0-logloss:0.69724\n",
      "[236]\tvalidation_0-logloss:0.69748\n",
      "[238]\tvalidation_0-logloss:0.69750\n",
      "[240]\tvalidation_0-logloss:0.69751\n",
      "[242]\tvalidation_0-logloss:0.69752\n",
      "[244]\tvalidation_0-logloss:0.69766\n",
      "[246]\tvalidation_0-logloss:0.69774\n",
      "[248]\tvalidation_0-logloss:0.69789\n",
      "[250]\tvalidation_0-logloss:0.69791\n",
      "[252]\tvalidation_0-logloss:0.69794\n",
      "[254]\tvalidation_0-logloss:0.69817\n",
      "[256]\tvalidation_0-logloss:0.69807\n",
      "[258]\tvalidation_0-logloss:0.69812\n",
      "[260]\tvalidation_0-logloss:0.69814\n",
      "[262]\tvalidation_0-logloss:0.69844\n",
      "[264]\tvalidation_0-logloss:0.69866\n",
      "[266]\tvalidation_0-logloss:0.69870\n",
      "[268]\tvalidation_0-logloss:0.69885\n",
      "[270]\tvalidation_0-logloss:0.69887\n",
      "[272]\tvalidation_0-logloss:0.69888\n",
      "[274]\tvalidation_0-logloss:0.69910\n",
      "[276]\tvalidation_0-logloss:0.69922\n",
      "[278]\tvalidation_0-logloss:0.69946\n",
      "[280]\tvalidation_0-logloss:0.69947\n",
      "[282]\tvalidation_0-logloss:0.69947\n",
      "[284]\tvalidation_0-logloss:0.69975\n",
      "[286]\tvalidation_0-logloss:0.69966\n",
      "[288]\tvalidation_0-logloss:0.69966\n",
      "[290]\tvalidation_0-logloss:0.69967\n",
      "[292]\tvalidation_0-logloss:0.69975\n",
      "[294]\tvalidation_0-logloss:0.69975\n",
      "[295]\tvalidation_0-logloss:0.69978\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:52:21,119] Trial 95 finished with value: 0.6938020392234248 and parameters: {'eta': 0.03687754511495976, 'gamma': 0.4796883764037332, 'max_depth': 5, 'min_child_weight': 2, 'lambda': 0.021307036967324458, 'alpha': 0.2261210695979768}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:52:25] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69516\n",
      "[2]\tvalidation_0-logloss:0.69535\n",
      "[4]\tvalidation_0-logloss:0.69573\n",
      "[6]\tvalidation_0-logloss:0.69666\n",
      "[8]\tvalidation_0-logloss:0.69622\n",
      "[10]\tvalidation_0-logloss:0.69619\n",
      "[12]\tvalidation_0-logloss:0.69667\n",
      "[14]\tvalidation_0-logloss:0.69650\n",
      "[16]\tvalidation_0-logloss:0.69649\n",
      "[18]\tvalidation_0-logloss:0.69661\n",
      "[20]\tvalidation_0-logloss:0.69651\n",
      "[22]\tvalidation_0-logloss:0.69644\n",
      "[24]\tvalidation_0-logloss:0.69638\n",
      "[26]\tvalidation_0-logloss:0.69645\n",
      "[28]\tvalidation_0-logloss:0.69649\n",
      "[30]\tvalidation_0-logloss:0.69671\n",
      "[32]\tvalidation_0-logloss:0.69680\n",
      "[34]\tvalidation_0-logloss:0.69701\n",
      "[36]\tvalidation_0-logloss:0.69695\n",
      "[38]\tvalidation_0-logloss:0.69717\n",
      "[40]\tvalidation_0-logloss:0.69715\n",
      "[42]\tvalidation_0-logloss:0.69693\n",
      "[44]\tvalidation_0-logloss:0.69702\n",
      "[46]\tvalidation_0-logloss:0.69723\n",
      "[48]\tvalidation_0-logloss:0.69724\n",
      "[50]\tvalidation_0-logloss:0.69733\n",
      "[52]\tvalidation_0-logloss:0.69735\n",
      "[54]\tvalidation_0-logloss:0.69723\n",
      "[56]\tvalidation_0-logloss:0.69738\n",
      "[58]\tvalidation_0-logloss:0.69734\n",
      "[60]\tvalidation_0-logloss:0.69743\n",
      "[62]\tvalidation_0-logloss:0.69743\n",
      "[64]\tvalidation_0-logloss:0.69753\n",
      "[66]\tvalidation_0-logloss:0.69757\n",
      "[68]\tvalidation_0-logloss:0.69757\n",
      "[70]\tvalidation_0-logloss:0.69765\n",
      "[72]\tvalidation_0-logloss:0.69756\n",
      "[74]\tvalidation_0-logloss:0.69757\n",
      "[76]\tvalidation_0-logloss:0.69792\n",
      "[78]\tvalidation_0-logloss:0.69797\n",
      "[80]\tvalidation_0-logloss:0.69806\n",
      "[82]\tvalidation_0-logloss:0.69821\n",
      "[84]\tvalidation_0-logloss:0.69826\n",
      "[86]\tvalidation_0-logloss:0.69812\n",
      "[88]\tvalidation_0-logloss:0.69818\n",
      "[90]\tvalidation_0-logloss:0.69806\n",
      "[92]\tvalidation_0-logloss:0.69808\n",
      "[94]\tvalidation_0-logloss:0.69828\n",
      "[96]\tvalidation_0-logloss:0.69823\n",
      "[98]\tvalidation_0-logloss:0.69828\n",
      "[100]\tvalidation_0-logloss:0.69854\n",
      "[102]\tvalidation_0-logloss:0.69854\n",
      "[104]\tvalidation_0-logloss:0.69867\n",
      "[106]\tvalidation_0-logloss:0.69859\n",
      "[108]\tvalidation_0-logloss:0.69855\n",
      "[110]\tvalidation_0-logloss:0.69861\n",
      "[112]\tvalidation_0-logloss:0.69858\n",
      "[114]\tvalidation_0-logloss:0.69845\n",
      "[116]\tvalidation_0-logloss:0.69848\n",
      "[118]\tvalidation_0-logloss:0.69880\n",
      "[120]\tvalidation_0-logloss:0.69885\n",
      "[122]\tvalidation_0-logloss:0.69875\n",
      "[124]\tvalidation_0-logloss:0.69887\n",
      "[126]\tvalidation_0-logloss:0.69890\n",
      "[128]\tvalidation_0-logloss:0.69900\n",
      "[130]\tvalidation_0-logloss:0.69917\n",
      "[132]\tvalidation_0-logloss:0.69910\n",
      "[134]\tvalidation_0-logloss:0.69943\n",
      "[136]\tvalidation_0-logloss:0.69960\n",
      "[138]\tvalidation_0-logloss:0.69964\n",
      "[140]\tvalidation_0-logloss:0.69972\n",
      "[142]\tvalidation_0-logloss:0.69973\n",
      "[144]\tvalidation_0-logloss:0.69981\n",
      "[146]\tvalidation_0-logloss:0.70001\n",
      "[148]\tvalidation_0-logloss:0.70027\n",
      "[150]\tvalidation_0-logloss:0.70021\n",
      "[152]\tvalidation_0-logloss:0.70028\n",
      "[154]\tvalidation_0-logloss:0.70058\n",
      "[156]\tvalidation_0-logloss:0.70085\n",
      "[158]\tvalidation_0-logloss:0.70093\n",
      "[160]\tvalidation_0-logloss:0.70095\n",
      "[162]\tvalidation_0-logloss:0.70105\n",
      "[164]\tvalidation_0-logloss:0.70135\n",
      "[166]\tvalidation_0-logloss:0.70170\n",
      "[168]\tvalidation_0-logloss:0.70162\n",
      "[170]\tvalidation_0-logloss:0.70172\n",
      "[172]\tvalidation_0-logloss:0.70194\n",
      "[174]\tvalidation_0-logloss:0.70208\n",
      "[176]\tvalidation_0-logloss:0.70218\n",
      "[178]\tvalidation_0-logloss:0.70236\n",
      "[180]\tvalidation_0-logloss:0.70226\n",
      "[182]\tvalidation_0-logloss:0.70236\n",
      "[184]\tvalidation_0-logloss:0.70221\n",
      "[186]\tvalidation_0-logloss:0.70233\n",
      "[188]\tvalidation_0-logloss:0.70262\n",
      "[190]\tvalidation_0-logloss:0.70269\n",
      "[192]\tvalidation_0-logloss:0.70307\n",
      "[194]\tvalidation_0-logloss:0.70336\n",
      "[196]\tvalidation_0-logloss:0.70358\n",
      "[198]\tvalidation_0-logloss:0.70363\n",
      "[200]\tvalidation_0-logloss:0.70392\n",
      "[202]\tvalidation_0-logloss:0.70410\n",
      "[204]\tvalidation_0-logloss:0.70411\n",
      "[206]\tvalidation_0-logloss:0.70415\n",
      "[208]\tvalidation_0-logloss:0.70426\n",
      "[210]\tvalidation_0-logloss:0.70437\n",
      "[212]\tvalidation_0-logloss:0.70446\n",
      "[214]\tvalidation_0-logloss:0.70471\n",
      "[216]\tvalidation_0-logloss:0.70463\n",
      "[218]\tvalidation_0-logloss:0.70480\n",
      "[220]\tvalidation_0-logloss:0.70497\n",
      "[222]\tvalidation_0-logloss:0.70517\n",
      "[224]\tvalidation_0-logloss:0.70516\n",
      "[226]\tvalidation_0-logloss:0.70510\n",
      "[228]\tvalidation_0-logloss:0.70544\n",
      "[230]\tvalidation_0-logloss:0.70563\n",
      "[232]\tvalidation_0-logloss:0.70557\n",
      "[234]\tvalidation_0-logloss:0.70581\n",
      "[236]\tvalidation_0-logloss:0.70597\n",
      "[238]\tvalidation_0-logloss:0.70614\n",
      "[240]\tvalidation_0-logloss:0.70618\n",
      "[242]\tvalidation_0-logloss:0.70630\n",
      "[244]\tvalidation_0-logloss:0.70645\n",
      "[246]\tvalidation_0-logloss:0.70652\n",
      "[248]\tvalidation_0-logloss:0.70688\n",
      "[249]\tvalidation_0-logloss:0.70693\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:53:55,718] Trial 96 finished with value: 0.6951618385110071 and parameters: {'eta': 0.035393538713050135, 'gamma': 0.6039078972525767, 'max_depth': 7, 'min_child_weight': 2, 'lambda': 0.03805994793023305, 'alpha': 0.16878748747249692}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:54:00] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69528\n",
      "[2]\tvalidation_0-logloss:0.69544\n",
      "[4]\tvalidation_0-logloss:0.69572\n",
      "[6]\tvalidation_0-logloss:0.69595\n",
      "[8]\tvalidation_0-logloss:0.69570\n",
      "[10]\tvalidation_0-logloss:0.69569\n",
      "[12]\tvalidation_0-logloss:0.69544\n",
      "[14]\tvalidation_0-logloss:0.69530\n",
      "[16]\tvalidation_0-logloss:0.69535\n",
      "[18]\tvalidation_0-logloss:0.69526\n",
      "[20]\tvalidation_0-logloss:0.69526\n",
      "[22]\tvalidation_0-logloss:0.69511\n",
      "[24]\tvalidation_0-logloss:0.69507\n",
      "[26]\tvalidation_0-logloss:0.69508\n",
      "[28]\tvalidation_0-logloss:0.69513\n",
      "[30]\tvalidation_0-logloss:0.69506\n",
      "[32]\tvalidation_0-logloss:0.69522\n",
      "[34]\tvalidation_0-logloss:0.69515\n",
      "[36]\tvalidation_0-logloss:0.69516\n",
      "[38]\tvalidation_0-logloss:0.69511\n",
      "[40]\tvalidation_0-logloss:0.69520\n",
      "[42]\tvalidation_0-logloss:0.69535\n",
      "[44]\tvalidation_0-logloss:0.69540\n",
      "[46]\tvalidation_0-logloss:0.69543\n",
      "[48]\tvalidation_0-logloss:0.69541\n",
      "[50]\tvalidation_0-logloss:0.69553\n",
      "[52]\tvalidation_0-logloss:0.69542\n",
      "[54]\tvalidation_0-logloss:0.69549\n",
      "[56]\tvalidation_0-logloss:0.69543\n",
      "[58]\tvalidation_0-logloss:0.69525\n",
      "[60]\tvalidation_0-logloss:0.69501\n",
      "[62]\tvalidation_0-logloss:0.69501\n",
      "[64]\tvalidation_0-logloss:0.69484\n",
      "[66]\tvalidation_0-logloss:0.69490\n",
      "[68]\tvalidation_0-logloss:0.69509\n",
      "[70]\tvalidation_0-logloss:0.69506\n",
      "[72]\tvalidation_0-logloss:0.69513\n",
      "[74]\tvalidation_0-logloss:0.69524\n",
      "[76]\tvalidation_0-logloss:0.69535\n",
      "[78]\tvalidation_0-logloss:0.69529\n",
      "[80]\tvalidation_0-logloss:0.69519\n",
      "[82]\tvalidation_0-logloss:0.69526\n",
      "[84]\tvalidation_0-logloss:0.69520\n",
      "[86]\tvalidation_0-logloss:0.69526\n",
      "[88]\tvalidation_0-logloss:0.69523\n",
      "[90]\tvalidation_0-logloss:0.69530\n",
      "[92]\tvalidation_0-logloss:0.69552\n",
      "[94]\tvalidation_0-logloss:0.69556\n",
      "[96]\tvalidation_0-logloss:0.69561\n",
      "[98]\tvalidation_0-logloss:0.69552\n",
      "[100]\tvalidation_0-logloss:0.69561\n",
      "[102]\tvalidation_0-logloss:0.69565\n",
      "[104]\tvalidation_0-logloss:0.69551\n",
      "[106]\tvalidation_0-logloss:0.69566\n",
      "[108]\tvalidation_0-logloss:0.69581\n",
      "[110]\tvalidation_0-logloss:0.69609\n",
      "[112]\tvalidation_0-logloss:0.69607\n",
      "[114]\tvalidation_0-logloss:0.69608\n",
      "[116]\tvalidation_0-logloss:0.69619\n",
      "[118]\tvalidation_0-logloss:0.69606\n",
      "[120]\tvalidation_0-logloss:0.69616\n",
      "[122]\tvalidation_0-logloss:0.69615\n",
      "[124]\tvalidation_0-logloss:0.69613\n",
      "[126]\tvalidation_0-logloss:0.69618\n",
      "[128]\tvalidation_0-logloss:0.69620\n",
      "[130]\tvalidation_0-logloss:0.69622\n",
      "[132]\tvalidation_0-logloss:0.69625\n",
      "[134]\tvalidation_0-logloss:0.69630\n",
      "[136]\tvalidation_0-logloss:0.69625\n",
      "[138]\tvalidation_0-logloss:0.69631\n",
      "[140]\tvalidation_0-logloss:0.69625\n",
      "[142]\tvalidation_0-logloss:0.69628\n",
      "[144]\tvalidation_0-logloss:0.69649\n",
      "[146]\tvalidation_0-logloss:0.69647\n",
      "[148]\tvalidation_0-logloss:0.69642\n",
      "[150]\tvalidation_0-logloss:0.69650\n",
      "[152]\tvalidation_0-logloss:0.69651\n",
      "[154]\tvalidation_0-logloss:0.69654\n",
      "[156]\tvalidation_0-logloss:0.69669\n",
      "[158]\tvalidation_0-logloss:0.69664\n",
      "[160]\tvalidation_0-logloss:0.69659\n",
      "[162]\tvalidation_0-logloss:0.69655\n",
      "[164]\tvalidation_0-logloss:0.69647\n",
      "[166]\tvalidation_0-logloss:0.69641\n",
      "[168]\tvalidation_0-logloss:0.69648\n",
      "[170]\tvalidation_0-logloss:0.69647\n",
      "[172]\tvalidation_0-logloss:0.69651\n",
      "[174]\tvalidation_0-logloss:0.69659\n",
      "[176]\tvalidation_0-logloss:0.69653\n",
      "[178]\tvalidation_0-logloss:0.69658\n",
      "[180]\tvalidation_0-logloss:0.69670\n",
      "[182]\tvalidation_0-logloss:0.69674\n",
      "[184]\tvalidation_0-logloss:0.69672\n",
      "[186]\tvalidation_0-logloss:0.69674\n",
      "[188]\tvalidation_0-logloss:0.69688\n",
      "[190]\tvalidation_0-logloss:0.69687\n",
      "[192]\tvalidation_0-logloss:0.69683\n",
      "[194]\tvalidation_0-logloss:0.69683\n",
      "[196]\tvalidation_0-logloss:0.69685\n",
      "[198]\tvalidation_0-logloss:0.69685\n",
      "[200]\tvalidation_0-logloss:0.69703\n",
      "[202]\tvalidation_0-logloss:0.69703\n",
      "[204]\tvalidation_0-logloss:0.69714\n",
      "[206]\tvalidation_0-logloss:0.69716\n",
      "[208]\tvalidation_0-logloss:0.69711\n",
      "[210]\tvalidation_0-logloss:0.69713\n",
      "[212]\tvalidation_0-logloss:0.69705\n",
      "[214]\tvalidation_0-logloss:0.69703\n",
      "[216]\tvalidation_0-logloss:0.69707\n",
      "[218]\tvalidation_0-logloss:0.69726\n",
      "[220]\tvalidation_0-logloss:0.69726\n",
      "[222]\tvalidation_0-logloss:0.69726\n",
      "[224]\tvalidation_0-logloss:0.69733\n",
      "[226]\tvalidation_0-logloss:0.69751\n",
      "[228]\tvalidation_0-logloss:0.69752\n",
      "[230]\tvalidation_0-logloss:0.69756\n",
      "[232]\tvalidation_0-logloss:0.69773\n",
      "[234]\tvalidation_0-logloss:0.69780\n",
      "[236]\tvalidation_0-logloss:0.69781\n",
      "[238]\tvalidation_0-logloss:0.69799\n",
      "[240]\tvalidation_0-logloss:0.69801\n",
      "[242]\tvalidation_0-logloss:0.69812\n",
      "[244]\tvalidation_0-logloss:0.69808\n",
      "[246]\tvalidation_0-logloss:0.69802\n",
      "[248]\tvalidation_0-logloss:0.69796\n",
      "[250]\tvalidation_0-logloss:0.69795\n",
      "[252]\tvalidation_0-logloss:0.69797\n",
      "[254]\tvalidation_0-logloss:0.69810\n",
      "[256]\tvalidation_0-logloss:0.69818\n",
      "[258]\tvalidation_0-logloss:0.69821\n",
      "[260]\tvalidation_0-logloss:0.69828\n",
      "[262]\tvalidation_0-logloss:0.69843\n",
      "[264]\tvalidation_0-logloss:0.69847\n",
      "[266]\tvalidation_0-logloss:0.69850\n",
      "[268]\tvalidation_0-logloss:0.69848\n",
      "[270]\tvalidation_0-logloss:0.69843\n",
      "[272]\tvalidation_0-logloss:0.69861\n",
      "[274]\tvalidation_0-logloss:0.69864\n",
      "[276]\tvalidation_0-logloss:0.69892\n",
      "[278]\tvalidation_0-logloss:0.69896\n",
      "[280]\tvalidation_0-logloss:0.69906\n",
      "[282]\tvalidation_0-logloss:0.69917\n",
      "[284]\tvalidation_0-logloss:0.69933\n",
      "[286]\tvalidation_0-logloss:0.69926\n",
      "[288]\tvalidation_0-logloss:0.69933\n",
      "[290]\tvalidation_0-logloss:0.69955\n",
      "[292]\tvalidation_0-logloss:0.69959\n",
      "[294]\tvalidation_0-logloss:0.69967\n",
      "[296]\tvalidation_0-logloss:0.69990\n",
      "[298]\tvalidation_0-logloss:0.69990\n",
      "[300]\tvalidation_0-logloss:0.70003\n",
      "[302]\tvalidation_0-logloss:0.70003\n",
      "[304]\tvalidation_0-logloss:0.70022\n",
      "[306]\tvalidation_0-logloss:0.70031\n",
      "[308]\tvalidation_0-logloss:0.70038\n",
      "[310]\tvalidation_0-logloss:0.70031\n",
      "[312]\tvalidation_0-logloss:0.70039\n",
      "[313]\tvalidation_0-logloss:0.70036\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:55:39,272] Trial 97 finished with value: 0.6948404972205683 and parameters: {'eta': 0.02826364825667881, 'gamma': 0.6356573719119532, 'max_depth': 6, 'min_child_weight': 7, 'lambda': 0.05938619565022208, 'alpha': 0.05484886683278194}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:55:43] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69529\n",
      "[2]\tvalidation_0-logloss:0.69535\n",
      "[4]\tvalidation_0-logloss:0.69547\n",
      "[6]\tvalidation_0-logloss:0.69556\n",
      "[8]\tvalidation_0-logloss:0.69556\n",
      "[10]\tvalidation_0-logloss:0.69533\n",
      "[12]\tvalidation_0-logloss:0.69531\n",
      "[14]\tvalidation_0-logloss:0.69519\n",
      "[16]\tvalidation_0-logloss:0.69506\n",
      "[18]\tvalidation_0-logloss:0.69493\n",
      "[20]\tvalidation_0-logloss:0.69480\n",
      "[22]\tvalidation_0-logloss:0.69481\n",
      "[24]\tvalidation_0-logloss:0.69490\n",
      "[26]\tvalidation_0-logloss:0.69485\n",
      "[28]\tvalidation_0-logloss:0.69488\n",
      "[30]\tvalidation_0-logloss:0.69485\n",
      "[32]\tvalidation_0-logloss:0.69474\n",
      "[34]\tvalidation_0-logloss:0.69482\n",
      "[36]\tvalidation_0-logloss:0.69483\n",
      "[38]\tvalidation_0-logloss:0.69476\n",
      "[40]\tvalidation_0-logloss:0.69478\n",
      "[42]\tvalidation_0-logloss:0.69484\n",
      "[44]\tvalidation_0-logloss:0.69491\n",
      "[46]\tvalidation_0-logloss:0.69493\n",
      "[48]\tvalidation_0-logloss:0.69498\n",
      "[50]\tvalidation_0-logloss:0.69481\n",
      "[52]\tvalidation_0-logloss:0.69487\n",
      "[54]\tvalidation_0-logloss:0.69498\n",
      "[56]\tvalidation_0-logloss:0.69491\n",
      "[58]\tvalidation_0-logloss:0.69475\n",
      "[60]\tvalidation_0-logloss:0.69467\n",
      "[62]\tvalidation_0-logloss:0.69457\n",
      "[64]\tvalidation_0-logloss:0.69449\n",
      "[66]\tvalidation_0-logloss:0.69452\n",
      "[68]\tvalidation_0-logloss:0.69459\n",
      "[70]\tvalidation_0-logloss:0.69459\n",
      "[72]\tvalidation_0-logloss:0.69463\n",
      "[74]\tvalidation_0-logloss:0.69455\n",
      "[76]\tvalidation_0-logloss:0.69455\n",
      "[78]\tvalidation_0-logloss:0.69462\n",
      "[80]\tvalidation_0-logloss:0.69467\n",
      "[82]\tvalidation_0-logloss:0.69470\n",
      "[84]\tvalidation_0-logloss:0.69470\n",
      "[86]\tvalidation_0-logloss:0.69471\n",
      "[88]\tvalidation_0-logloss:0.69458\n",
      "[90]\tvalidation_0-logloss:0.69458\n",
      "[92]\tvalidation_0-logloss:0.69465\n",
      "[94]\tvalidation_0-logloss:0.69470\n",
      "[96]\tvalidation_0-logloss:0.69476\n",
      "[98]\tvalidation_0-logloss:0.69481\n",
      "[100]\tvalidation_0-logloss:0.69482\n",
      "[102]\tvalidation_0-logloss:0.69501\n",
      "[104]\tvalidation_0-logloss:0.69506\n",
      "[106]\tvalidation_0-logloss:0.69507\n",
      "[108]\tvalidation_0-logloss:0.69508\n",
      "[110]\tvalidation_0-logloss:0.69513\n",
      "[112]\tvalidation_0-logloss:0.69525\n",
      "[114]\tvalidation_0-logloss:0.69526\n",
      "[116]\tvalidation_0-logloss:0.69523\n",
      "[118]\tvalidation_0-logloss:0.69518\n",
      "[120]\tvalidation_0-logloss:0.69521\n",
      "[122]\tvalidation_0-logloss:0.69523\n",
      "[124]\tvalidation_0-logloss:0.69526\n",
      "[126]\tvalidation_0-logloss:0.69511\n",
      "[128]\tvalidation_0-logloss:0.69507\n",
      "[130]\tvalidation_0-logloss:0.69504\n",
      "[132]\tvalidation_0-logloss:0.69504\n",
      "[134]\tvalidation_0-logloss:0.69503\n",
      "[136]\tvalidation_0-logloss:0.69500\n",
      "[138]\tvalidation_0-logloss:0.69500\n",
      "[140]\tvalidation_0-logloss:0.69504\n",
      "[142]\tvalidation_0-logloss:0.69499\n",
      "[144]\tvalidation_0-logloss:0.69502\n",
      "[146]\tvalidation_0-logloss:0.69500\n",
      "[148]\tvalidation_0-logloss:0.69497\n",
      "[150]\tvalidation_0-logloss:0.69504\n",
      "[152]\tvalidation_0-logloss:0.69504\n",
      "[154]\tvalidation_0-logloss:0.69507\n",
      "[156]\tvalidation_0-logloss:0.69505\n",
      "[158]\tvalidation_0-logloss:0.69501\n",
      "[160]\tvalidation_0-logloss:0.69500\n",
      "[162]\tvalidation_0-logloss:0.69503\n",
      "[164]\tvalidation_0-logloss:0.69508\n",
      "[166]\tvalidation_0-logloss:0.69507\n",
      "[168]\tvalidation_0-logloss:0.69521\n",
      "[170]\tvalidation_0-logloss:0.69520\n",
      "[172]\tvalidation_0-logloss:0.69529\n",
      "[174]\tvalidation_0-logloss:0.69532\n",
      "[176]\tvalidation_0-logloss:0.69525\n",
      "[178]\tvalidation_0-logloss:0.69534\n",
      "[180]\tvalidation_0-logloss:0.69533\n",
      "[182]\tvalidation_0-logloss:0.69536\n",
      "[184]\tvalidation_0-logloss:0.69532\n",
      "[186]\tvalidation_0-logloss:0.69530\n",
      "[188]\tvalidation_0-logloss:0.69534\n",
      "[190]\tvalidation_0-logloss:0.69537\n",
      "[192]\tvalidation_0-logloss:0.69536\n",
      "[194]\tvalidation_0-logloss:0.69541\n",
      "[196]\tvalidation_0-logloss:0.69541\n",
      "[198]\tvalidation_0-logloss:0.69538\n",
      "[200]\tvalidation_0-logloss:0.69530\n",
      "[202]\tvalidation_0-logloss:0.69530\n",
      "[204]\tvalidation_0-logloss:0.69530\n",
      "[206]\tvalidation_0-logloss:0.69526\n",
      "[208]\tvalidation_0-logloss:0.69531\n",
      "[210]\tvalidation_0-logloss:0.69527\n",
      "[212]\tvalidation_0-logloss:0.69535\n",
      "[214]\tvalidation_0-logloss:0.69540\n",
      "[216]\tvalidation_0-logloss:0.69541\n",
      "[218]\tvalidation_0-logloss:0.69541\n",
      "[220]\tvalidation_0-logloss:0.69547\n",
      "[222]\tvalidation_0-logloss:0.69548\n",
      "[224]\tvalidation_0-logloss:0.69548\n",
      "[226]\tvalidation_0-logloss:0.69541\n",
      "[228]\tvalidation_0-logloss:0.69545\n",
      "[230]\tvalidation_0-logloss:0.69542\n",
      "[232]\tvalidation_0-logloss:0.69541\n",
      "[234]\tvalidation_0-logloss:0.69545\n",
      "[236]\tvalidation_0-logloss:0.69547\n",
      "[238]\tvalidation_0-logloss:0.69539\n",
      "[240]\tvalidation_0-logloss:0.69547\n",
      "[242]\tvalidation_0-logloss:0.69541\n",
      "[244]\tvalidation_0-logloss:0.69549\n",
      "[246]\tvalidation_0-logloss:0.69559\n",
      "[248]\tvalidation_0-logloss:0.69560\n",
      "[250]\tvalidation_0-logloss:0.69560\n",
      "[252]\tvalidation_0-logloss:0.69561\n",
      "[254]\tvalidation_0-logloss:0.69564\n",
      "[256]\tvalidation_0-logloss:0.69568\n",
      "[258]\tvalidation_0-logloss:0.69566\n",
      "[260]\tvalidation_0-logloss:0.69573\n",
      "[262]\tvalidation_0-logloss:0.69569\n",
      "[264]\tvalidation_0-logloss:0.69562\n",
      "[266]\tvalidation_0-logloss:0.69569\n",
      "[268]\tvalidation_0-logloss:0.69571\n",
      "[270]\tvalidation_0-logloss:0.69569\n",
      "[272]\tvalidation_0-logloss:0.69573\n",
      "[274]\tvalidation_0-logloss:0.69573\n",
      "[276]\tvalidation_0-logloss:0.69577\n",
      "[278]\tvalidation_0-logloss:0.69575\n",
      "[280]\tvalidation_0-logloss:0.69576\n",
      "[282]\tvalidation_0-logloss:0.69585\n",
      "[284]\tvalidation_0-logloss:0.69585\n",
      "[286]\tvalidation_0-logloss:0.69586\n",
      "[288]\tvalidation_0-logloss:0.69595\n",
      "[290]\tvalidation_0-logloss:0.69598\n",
      "[292]\tvalidation_0-logloss:0.69600\n",
      "[294]\tvalidation_0-logloss:0.69608\n",
      "[296]\tvalidation_0-logloss:0.69611\n",
      "[298]\tvalidation_0-logloss:0.69623\n",
      "[300]\tvalidation_0-logloss:0.69623\n",
      "[302]\tvalidation_0-logloss:0.69632\n",
      "[304]\tvalidation_0-logloss:0.69637\n",
      "[306]\tvalidation_0-logloss:0.69641\n",
      "[308]\tvalidation_0-logloss:0.69637\n",
      "[310]\tvalidation_0-logloss:0.69637\n",
      "[312]\tvalidation_0-logloss:0.69640\n",
      "[313]\tvalidation_0-logloss:0.69635\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:57:16,739] Trial 98 finished with value: 0.6944901834789243 and parameters: {'eta': 0.022693676492188508, 'gamma': 0.3527908533616821, 'max_depth': 5, 'min_child_weight': 3, 'lambda': 0.08639776992047543, 'alpha': 0.2555996451521969}. Best is trial 0 with value: 0.6926045044298563.\n",
      "/tmp/ipykernel_18/2257727779.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n",
      "  'eta': trial.suggest_loguniform('eta', 0.01, 0.3), # Learning rate to prevent overfitting\n",
      "/tmp/ipykernel_18/2257727779.py:15: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'gamma': trial.suggest_uniform('gamma', 0, 1), # Minimum reduction in loss function required to make a partition in the tree. Larger gamma, more conservative with parttions.\n",
      "/tmp/ipykernel_18/2257727779.py:18: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'lambda': trial.suggest_uniform('lambda', 0, 1), # L2 regularisation. Increasing value will make model more conservative\n",
      "/tmp/ipykernel_18/2257727779.py:19: FutureWarning: suggest_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float instead.\n",
      "  'alpha': trial.suggest_uniform('alpha', 0, 1),# L1 regularisation. Increasing value will make model more conservative\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [17:57:21] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "  warnings.warn(smsg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.69531\n",
      "[2]\tvalidation_0-logloss:0.69568\n",
      "[4]\tvalidation_0-logloss:0.69610\n",
      "[6]\tvalidation_0-logloss:0.69567\n",
      "[8]\tvalidation_0-logloss:0.69591\n",
      "[10]\tvalidation_0-logloss:0.69566\n",
      "[12]\tvalidation_0-logloss:0.69554\n",
      "[14]\tvalidation_0-logloss:0.69571\n",
      "[16]\tvalidation_0-logloss:0.69561\n",
      "[18]\tvalidation_0-logloss:0.69491\n",
      "[20]\tvalidation_0-logloss:0.69480\n",
      "[22]\tvalidation_0-logloss:0.69484\n",
      "[24]\tvalidation_0-logloss:0.69483\n",
      "[26]\tvalidation_0-logloss:0.69479\n",
      "[28]\tvalidation_0-logloss:0.69479\n",
      "[30]\tvalidation_0-logloss:0.69489\n",
      "[32]\tvalidation_0-logloss:0.69513\n",
      "[34]\tvalidation_0-logloss:0.69528\n",
      "[36]\tvalidation_0-logloss:0.69543\n",
      "[38]\tvalidation_0-logloss:0.69550\n",
      "[40]\tvalidation_0-logloss:0.69570\n",
      "[42]\tvalidation_0-logloss:0.69562\n",
      "[44]\tvalidation_0-logloss:0.69547\n",
      "[46]\tvalidation_0-logloss:0.69558\n",
      "[48]\tvalidation_0-logloss:0.69563\n",
      "[50]\tvalidation_0-logloss:0.69577\n",
      "[52]\tvalidation_0-logloss:0.69588\n",
      "[54]\tvalidation_0-logloss:0.69595\n",
      "[56]\tvalidation_0-logloss:0.69593\n",
      "[58]\tvalidation_0-logloss:0.69576\n",
      "[60]\tvalidation_0-logloss:0.69551\n",
      "[62]\tvalidation_0-logloss:0.69557\n",
      "[64]\tvalidation_0-logloss:0.69556\n",
      "[66]\tvalidation_0-logloss:0.69560\n",
      "[68]\tvalidation_0-logloss:0.69571\n",
      "[70]\tvalidation_0-logloss:0.69564\n",
      "[72]\tvalidation_0-logloss:0.69558\n",
      "[74]\tvalidation_0-logloss:0.69581\n",
      "[76]\tvalidation_0-logloss:0.69580\n",
      "[78]\tvalidation_0-logloss:0.69635\n",
      "[80]\tvalidation_0-logloss:0.69626\n",
      "[82]\tvalidation_0-logloss:0.69638\n",
      "[84]\tvalidation_0-logloss:0.69625\n",
      "[86]\tvalidation_0-logloss:0.69623\n",
      "[88]\tvalidation_0-logloss:0.69625\n",
      "[90]\tvalidation_0-logloss:0.69633\n",
      "[92]\tvalidation_0-logloss:0.69628\n",
      "[94]\tvalidation_0-logloss:0.69627\n",
      "[96]\tvalidation_0-logloss:0.69634\n",
      "[98]\tvalidation_0-logloss:0.69634\n",
      "[100]\tvalidation_0-logloss:0.69657\n",
      "[102]\tvalidation_0-logloss:0.69665\n",
      "[104]\tvalidation_0-logloss:0.69679\n",
      "[106]\tvalidation_0-logloss:0.69672\n",
      "[108]\tvalidation_0-logloss:0.69678\n",
      "[110]\tvalidation_0-logloss:0.69670\n",
      "[112]\tvalidation_0-logloss:0.69673\n",
      "[114]\tvalidation_0-logloss:0.69680\n",
      "[116]\tvalidation_0-logloss:0.69691\n",
      "[118]\tvalidation_0-logloss:0.69710\n",
      "[120]\tvalidation_0-logloss:0.69699\n",
      "[122]\tvalidation_0-logloss:0.69698\n",
      "[124]\tvalidation_0-logloss:0.69676\n",
      "[126]\tvalidation_0-logloss:0.69675\n",
      "[128]\tvalidation_0-logloss:0.69682\n",
      "[130]\tvalidation_0-logloss:0.69680\n",
      "[132]\tvalidation_0-logloss:0.69708\n",
      "[134]\tvalidation_0-logloss:0.69704\n",
      "[136]\tvalidation_0-logloss:0.69698\n",
      "[138]\tvalidation_0-logloss:0.69712\n",
      "[140]\tvalidation_0-logloss:0.69704\n",
      "[142]\tvalidation_0-logloss:0.69717\n",
      "[144]\tvalidation_0-logloss:0.69702\n",
      "[146]\tvalidation_0-logloss:0.69732\n",
      "[148]\tvalidation_0-logloss:0.69740\n",
      "[150]\tvalidation_0-logloss:0.69749\n",
      "[152]\tvalidation_0-logloss:0.69768\n",
      "[154]\tvalidation_0-logloss:0.69773\n",
      "[156]\tvalidation_0-logloss:0.69771\n",
      "[158]\tvalidation_0-logloss:0.69760\n",
      "[160]\tvalidation_0-logloss:0.69768\n",
      "[162]\tvalidation_0-logloss:0.69773\n",
      "[164]\tvalidation_0-logloss:0.69777\n",
      "[166]\tvalidation_0-logloss:0.69777\n",
      "[168]\tvalidation_0-logloss:0.69780\n",
      "[170]\tvalidation_0-logloss:0.69787\n",
      "[172]\tvalidation_0-logloss:0.69781\n",
      "[174]\tvalidation_0-logloss:0.69776\n",
      "[176]\tvalidation_0-logloss:0.69781\n",
      "[178]\tvalidation_0-logloss:0.69795\n",
      "[180]\tvalidation_0-logloss:0.69814\n",
      "[182]\tvalidation_0-logloss:0.69825\n",
      "[184]\tvalidation_0-logloss:0.69815\n",
      "[186]\tvalidation_0-logloss:0.69798\n",
      "[188]\tvalidation_0-logloss:0.69820\n",
      "[190]\tvalidation_0-logloss:0.69833\n",
      "[192]\tvalidation_0-logloss:0.69847\n",
      "[194]\tvalidation_0-logloss:0.69863\n",
      "[196]\tvalidation_0-logloss:0.69864\n",
      "[198]\tvalidation_0-logloss:0.69868\n",
      "[200]\tvalidation_0-logloss:0.69841\n",
      "[202]\tvalidation_0-logloss:0.69851\n",
      "[204]\tvalidation_0-logloss:0.69861\n",
      "[206]\tvalidation_0-logloss:0.69876\n",
      "[208]\tvalidation_0-logloss:0.69881\n",
      "[210]\tvalidation_0-logloss:0.69886\n",
      "[212]\tvalidation_0-logloss:0.69889\n",
      "[214]\tvalidation_0-logloss:0.69917\n",
      "[216]\tvalidation_0-logloss:0.69922\n",
      "[218]\tvalidation_0-logloss:0.69931\n",
      "[220]\tvalidation_0-logloss:0.69929\n",
      "[222]\tvalidation_0-logloss:0.69935\n",
      "[224]\tvalidation_0-logloss:0.69951\n",
      "[226]\tvalidation_0-logloss:0.69949\n",
      "[228]\tvalidation_0-logloss:0.69964\n",
      "[230]\tvalidation_0-logloss:0.69970\n",
      "[232]\tvalidation_0-logloss:0.69969\n",
      "[234]\tvalidation_0-logloss:0.69995\n",
      "[236]\tvalidation_0-logloss:0.69993\n",
      "[238]\tvalidation_0-logloss:0.70007\n",
      "[240]\tvalidation_0-logloss:0.70012\n",
      "[242]\tvalidation_0-logloss:0.70029\n",
      "[244]\tvalidation_0-logloss:0.70044\n",
      "[246]\tvalidation_0-logloss:0.70051\n",
      "[248]\tvalidation_0-logloss:0.70052\n",
      "[250]\tvalidation_0-logloss:0.70083\n",
      "[252]\tvalidation_0-logloss:0.70092\n",
      "[254]\tvalidation_0-logloss:0.70090\n",
      "[256]\tvalidation_0-logloss:0.70105\n",
      "[258]\tvalidation_0-logloss:0.70102\n",
      "[260]\tvalidation_0-logloss:0.70103\n",
      "[262]\tvalidation_0-logloss:0.70118\n",
      "[264]\tvalidation_0-logloss:0.70130\n",
      "[266]\tvalidation_0-logloss:0.70132\n",
      "[268]\tvalidation_0-logloss:0.70181\n",
      "[270]\tvalidation_0-logloss:0.70178\n",
      "[272]\tvalidation_0-logloss:0.70193\n",
      "[274]\tvalidation_0-logloss:0.70197\n",
      "[275]\tvalidation_0-logloss:0.70206\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-05-08 17:58:48,750] Trial 99 finished with value: 0.6947859954734333 and parameters: {'eta': 0.03976956896844435, 'gamma': 0.4065751580804477, 'max_depth': 6, 'min_child_weight': 2, 'lambda': 0.6387262802356497, 'alpha': 0.15932399420706717}. Best is trial 0 with value: 0.6926045044298563.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of finished trials: 100\n",
      "Best trial: {'eta': 0.17875402062449533, 'gamma': 0.01695635409270624, 'max_depth': 4, 'min_child_weight': 1, 'lambda': 0.0070669164096609505, 'alpha': 0.4287410845690137, 'booster': 'gbtree', 'device': 'cuda', 'verbosity': 2, 'objective': 'binary:logistic', 'eval_metric': 'logloss', 'n_estimators': 500}\n"
     ]
    }
   ],
   "source": [
    "# Create study\n",
    "import optuna\n",
    "study = optuna.create_study(direction='minimize')\n",
    "\n",
    "# Split data into training and validation for hyperparameter tuning\n",
    "X_train_optuna = X_train.iloc[:600000, :]\n",
    "X_val_optuna = X_train.iloc[600000:, :]\n",
    "y_train_optuna = y_train.iloc[:600000]\n",
    "y_val_optuna = y_train.iloc[600000:]\n",
    "\n",
    "# Optimize hyperparameters\n",
    "study.optimize(\n",
    "    lambda trial: objective(\n",
    "        trial, \n",
    "        X_train=X_train_optuna, \n",
    "        X_val= X_val_optuna,\n",
    "        y_train=y_train_optuna,\n",
    "        y_val=y_val_optuna\n",
    "    ), \n",
    "    n_trials=100\n",
    ")\n",
    "\n",
    "# Get best parameters\n",
    "best_params = study.best_trial.params\n",
    "\n",
    "# Add fixed params that aren't stored in optuna's best params object\n",
    "best_params['booster'] = 'gbtree'\n",
    "best_params['device'] = 'cuda'\n",
    "best_params['verbosity'] = 2\n",
    "best_params['objective'] = 'binary:logistic'\n",
    "best_params['eval_metric'] = 'logloss'\n",
    "best_params['n_estimators'] = 500 # Need to change this to allow for early stopping rounds! In fact, I think I need to train a model without the n_estimators, and then retrain with best iteration * 1.2. See databricks notebook.\n",
    "\n",
    "# Print and save best parameters\n",
    "import pickle\n",
    "with open('best_params.pkl', 'wb') as f:\n",
    "    pickle.dump(best_params, f)\n",
    "print('Number of finished trials:', len(study.trials))\n",
    "print('Best trial:', best_params)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "2e33ad1b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-08T17:58:50.635251Z",
     "iopub.status.busy": "2024-05-08T17:58:50.634734Z",
     "iopub.status.idle": "2024-05-08T17:58:52.996813Z",
     "shell.execute_reply": "2024-05-08T17:58:52.995781Z"
    },
    "papermill": {
     "duration": 3.250266,
     "end_time": "2024-05-08T17:58:52.999059",
     "exception": false,
     "start_time": "2024-05-08T17:58:49.748793",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "        <script type=\"text/javascript\">\n",
       "        window.PlotlyConfig = {MathJaxConfig: 'local'};\n",
       "        if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\n",
       "        if (typeof require !== 'undefined') {\n",
       "        require.undef(\"plotly\");\n",
       "        requirejs.config({\n",
       "            paths: {\n",
       "                'plotly': ['https://cdn.plot.ly/plotly-2.27.0.min']\n",
       "            }\n",
       "        });\n",
       "        require(['plotly'], function(Plotly) {\n",
       "            window._Plotly = Plotly;\n",
       "        });\n",
       "        }\n",
       "        </script>\n",
       "        "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>                            <div id=\"d649ad1a-edbb-4b55-872c-868cec020c68\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"d649ad1a-edbb-4b55-872c-868cec020c68\")) {                    Plotly.newPlot(                        \"d649ad1a-edbb-4b55-872c-868cec020c68\",                        [{\"cliponaxis\":false,\"hovertemplate\":[\"alpha (FloatDistribution): 0.016132960709967437\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"min_child_weight (IntDistribution): 0.030610053359408092\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"gamma (FloatDistribution): 0.03136970554691875\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"eta (FloatDistribution): 0.17923977194049154\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"lambda (FloatDistribution): 0.3265931561165853\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"max_depth (IntDistribution): 0.41605435232662885\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\"],\"name\":\"Objective Value\",\"orientation\":\"h\",\"text\":[\"0.02\",\"0.03\",\"0.03\",\"0.18\",\"0.33\",\"0.42\"],\"textposition\":\"outside\",\"x\":[0.016132960709967437,0.030610053359408092,0.03136970554691875,0.17923977194049154,0.3265931561165853,0.41605435232662885],\"y\":[\"alpha\",\"min_child_weight\",\"gamma\",\"eta\",\"lambda\",\"max_depth\"],\"type\":\"bar\"}],                        {\"title\":{\"text\":\"Hyperparameter Importances\"},\"xaxis\":{\"title\":{\"text\":\"Hyperparameter Importance\"}},\"yaxis\":{\"title\":{\"text\":\"Hyperparameter\"}},\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}}},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('d649ad1a-edbb-4b55-872c-868cec020c68');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot hyperparameter importances\n",
    "from optuna.visualization import plot_param_importances\n",
    "fig = plot_param_importances(study)\n",
    "fig.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "28e83de1",
   "metadata": {
    "papermill": {
     "duration": 0.971664,
     "end_time": "2024-05-08T17:58:54.860302",
     "exception": false,
     "start_time": "2024-05-08T17:58:53.888638",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Train Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "c5b9e28f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-08T17:58:56.723232Z",
     "iopub.status.busy": "2024-05-08T17:58:56.722829Z",
     "iopub.status.idle": "2024-05-08T18:00:22.568910Z",
     "shell.execute_reply": "2024-05-08T18:00:22.567799Z"
    },
    "papermill": {
     "duration": 87.719967,
     "end_time": "2024-05-08T18:00:23.457233",
     "exception": false,
     "start_time": "2024-05-08T17:58:55.737266",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning:\n",
      "\n",
      "[17:59:01] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>XGBClassifier(alpha=0.4287410845690137, base_score=None, booster=&#x27;gbtree&#x27;,\n",
       "              callbacks=None, colsample_bylevel=None, colsample_bynode=None,\n",
       "              colsample_bytree=None, device=&#x27;cuda&#x27;, early_stopping_rounds=None,\n",
       "              enable_categorical=False, eta=0.17875402062449533,\n",
       "              eval_metric=&#x27;logloss&#x27;, feature_types=None,\n",
       "              gamma=0.01695635409270624, grow_policy=None, importance_type=None,\n",
       "              interaction_constraints=None, lambda=0.0070669164096609505,\n",
       "              learning_rate=None, max_bin=None, max_cat_threshold=None,\n",
       "              max_cat_to_onehot=None, max_delta_step=None, max_depth=4,\n",
       "              max_leaves=None, min_child_weight=1, missing=nan,\n",
       "              monotone_constraints=None, multi_strategy=None, n_estimators=500, ...)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">XGBClassifier</label><div class=\"sk-toggleable__content\"><pre>XGBClassifier(alpha=0.4287410845690137, base_score=None, booster=&#x27;gbtree&#x27;,\n",
       "              callbacks=None, colsample_bylevel=None, colsample_bynode=None,\n",
       "              colsample_bytree=None, device=&#x27;cuda&#x27;, early_stopping_rounds=None,\n",
       "              enable_categorical=False, eta=0.17875402062449533,\n",
       "              eval_metric=&#x27;logloss&#x27;, feature_types=None,\n",
       "              gamma=0.01695635409270624, grow_policy=None, importance_type=None,\n",
       "              interaction_constraints=None, lambda=0.0070669164096609505,\n",
       "              learning_rate=None, max_bin=None, max_cat_threshold=None,\n",
       "              max_cat_to_onehot=None, max_delta_step=None, max_depth=4,\n",
       "              max_leaves=None, min_child_weight=1, missing=nan,\n",
       "              monotone_constraints=None, multi_strategy=None, n_estimators=500, ...)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "XGBClassifier(alpha=0.4287410845690137, base_score=None, booster='gbtree',\n",
       "              callbacks=None, colsample_bylevel=None, colsample_bynode=None,\n",
       "              colsample_bytree=None, device='cuda', early_stopping_rounds=None,\n",
       "              enable_categorical=False, eta=0.17875402062449533,\n",
       "              eval_metric='logloss', feature_types=None,\n",
       "              gamma=0.01695635409270624, grow_policy=None, importance_type=None,\n",
       "              interaction_constraints=None, lambda=0.0070669164096609505,\n",
       "              learning_rate=None, max_bin=None, max_cat_threshold=None,\n",
       "              max_cat_to_onehot=None, max_delta_step=None, max_depth=4,\n",
       "              max_leaves=None, min_child_weight=1, missing=nan,\n",
       "              monotone_constraints=None, multi_strategy=None, n_estimators=500, ...)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Train model with best params\n",
    "xgb = XGBClassifier(**best_params)\n",
    "xgb.fit(\n",
    "    X_train, \n",
    "    y_train,\n",
    "    verbose=2\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "a911cf6d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-08T18:00:25.316633Z",
     "iopub.status.busy": "2024-05-08T18:00:25.315888Z",
     "iopub.status.idle": "2024-05-08T18:00:26.033330Z",
     "shell.execute_reply": "2024-05-08T18:00:26.032392Z"
    },
    "papermill": {
     "duration": 1.595432,
     "end_time": "2024-05-08T18:00:26.035754",
     "exception": false,
     "start_time": "2024-05-08T18:00:24.440322",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Make predictions on test set\n",
    "y_pred = xgb.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "699bc31a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-08T18:00:27.903785Z",
     "iopub.status.busy": "2024-05-08T18:00:27.903368Z",
     "iopub.status.idle": "2024-05-08T18:00:27.919586Z",
     "shell.execute_reply": "2024-05-08T18:00:27.918461Z"
    },
    "papermill": {
     "duration": 0.902678,
     "end_time": "2024-05-08T18:00:27.921924",
     "exception": false,
     "start_time": "2024-05-08T18:00:27.019246",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Save model\n",
    "with open('xgb_model.pkl', 'wb') as f:\n",
    "    pickle.dump(xgb, f)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "837af8ab",
   "metadata": {
    "papermill": {
     "duration": 0.976553,
     "end_time": "2024-05-08T18:00:29.804322",
     "exception": false,
     "start_time": "2024-05-08T18:00:28.827769",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Results Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "214b67b5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-08T18:00:31.660780Z",
     "iopub.status.busy": "2024-05-08T18:00:31.660369Z",
     "iopub.status.idle": "2024-05-08T18:00:31.665293Z",
     "shell.execute_reply": "2024-05-08T18:00:31.664405Z"
    },
    "papermill": {
     "duration": 0.982635,
     "end_time": "2024-05-08T18:00:31.667183",
     "exception": false,
     "start_time": "2024-05-08T18:00:30.684548",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Imports needed for accuracy checks\n",
    "from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay, classification_report, accuracy_score, roc_auc_score, roc_curve"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bf96180e",
   "metadata": {
    "papermill": {
     "duration": 0.878009,
     "end_time": "2024-05-08T18:00:33.422256",
     "exception": false,
     "start_time": "2024-05-08T18:00:32.544247",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Confusion Matrix\n",
    "The confusion matrix shows us how our predicted labels compare to our actual labels."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "6fe824e0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-08T18:00:35.272984Z",
     "iopub.status.busy": "2024-05-08T18:00:35.272557Z",
     "iopub.status.idle": "2024-05-08T18:00:35.739035Z",
     "shell.execute_reply": "2024-05-08T18:00:35.737781Z"
    },
    "papermill": {
     "duration": 1.345307,
     "end_time": "2024-05-08T18:00:35.741180",
     "exception": false,
     "start_time": "2024-05-08T18:00:34.395873",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x7ad62ebaceb0>"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Confusion matrix\n",
    "cm = confusion_matrix(y_test, y_pred)\n",
    "disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=xgb.classes_)\n",
    "disp.plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a59d4f99",
   "metadata": {
    "papermill": {
     "duration": 0.879747,
     "end_time": "2024-05-08T18:00:37.596182",
     "exception": false,
     "start_time": "2024-05-08T18:00:36.716435",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Accuracy, Precision, Recall, F1-Score\n",
    "* **Accuracy**: Measure of how good the classifier is at predicting correctly. It's simply the number of predictions the classifier got right divided by the total number of predicitions it made. In the confusion, matrix, it's the sum of the leading diagonal divided by the sum of the whole matrix.\n",
    "\n",
    "* **Precision**: For a given class, this measures how good the classifier is at not incorrectly labelling something as the class. For the given class, it's simply the number of predictions that were correctly labelled as that class divided by the total number of predictions that were labelled with that class.\n",
    "\n",
    "* **Recall**: For a given class, this measures how good the classifier is at correctly labelling something as that class. For the given class, it's simply the number of predictions that were correctly labelled as that class divided by the total number of actual instances of that class.\n",
    "\n",
    "* **F1-Score**: For a given class, this is a weighted harmonic mean of precision and recall where each are given equal importance. The best F1-score is 1 and the worst is 0."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "e3f21cf1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-08T18:00:39.472538Z",
     "iopub.status.busy": "2024-05-08T18:00:39.472115Z",
     "iopub.status.idle": "2024-05-08T18:00:39.503013Z",
     "shell.execute_reply": "2024-05-08T18:00:39.501687Z"
    },
    "papermill": {
     "duration": 0.913113,
     "end_time": "2024-05-08T18:00:39.505416",
     "exception": false,
     "start_time": "2024-05-08T18:00:38.592303",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy is 0.5036918581694702\n"
     ]
    }
   ],
   "source": [
    "# Accuracy\n",
    "accuracy = accuracy_score(y_test, y_pred)\n",
    "print(f\"Accuracy is {accuracy}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "57be122e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-08T18:00:41.364935Z",
     "iopub.status.busy": "2024-05-08T18:00:41.364089Z",
     "iopub.status.idle": "2024-05-08T18:00:41.748489Z",
     "shell.execute_reply": "2024-05-08T18:00:41.747273Z"
    },
    "papermill": {
     "duration": 1.272798,
     "end_time": "2024-05-08T18:00:41.750751",
     "exception": false,
     "start_time": "2024-05-08T18:00:40.477953",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "         0.0      0.498     0.396     0.441     75130\n",
      "         1.0      0.508     0.609     0.554     76826\n",
      "\n",
      "    accuracy                          0.504    151956\n",
      "   macro avg      0.503     0.503     0.497    151956\n",
      "weighted avg      0.503     0.504     0.498    151956\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Classification report showing precision, recall and F1 score for each class, as well accuracy and some averages\n",
    "cr = classification_report(y_test, y_pred, digits=3)\n",
    "print(cr)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ee0cc45c",
   "metadata": {
    "papermill": {
     "duration": 0.974418,
     "end_time": "2024-05-08T18:00:43.607374",
     "exception": false,
     "start_time": "2024-05-08T18:00:42.632956",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "sourceId": 174900197,
     "sourceType": "kernelVersion"
    }
   ],
   "dockerImageVersionId": 30698,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 8547.314043,
   "end_time": "2024-05-08T18:00:45.446203",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-05-08T15:38:18.132160",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
